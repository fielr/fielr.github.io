{
  "version": 3,
  "sources": ["../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js", "../src/Responsive.ts", "../src/Utilities/Definition.ts", "../src/Utilities/String.ts", "../src/Utilities/Data.ts", "../src/Base/BaseModule.ts", "../src/Base/Modules.ts", "../src/Utilities/RibbonMenu.ts", "../src/Utilities/SDK.ts", "../src/Utilities/Other.ts", "../src/Utilities/Console.ts", "../src/Translation.ts", "../src/Base/SettingDefinitions.ts", "../src/Base/BaseSetting.ts", "../src/Screens/Reset.ts", "../src/Screens/Support.ts", "../src/Screens/MainMenu.ts", "../src/Base/SettingUtils.ts", "../src/Screens/Global.ts", "../src/Modules/Global.ts", "../src/Screens/Profiles.ts", "../src/Modules/Profiles.ts", "../src/Utilities/ChatMessages.ts", "../src/Utilities/Handlers.ts", "../src/Screens/Responses.ts", "../src/Utilities/DefaultResponsesEntries.ts", "../src/Modules/Responses.ts", "../src/Utilities/Messages.ts", "../src/Utilities/Commands.ts", "../src/Modules/Version.ts", "../src/Modules/CharTalk.ts"],
  "sourcesContent": ["// Bondage Club Mod Development Kit (1.2.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const o=\"1.2.0\";function e(o){alert(\"Mod ERROR:\\n\"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&\"object\"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${e}\\nPatch1:\\n${t.get(e)||\"\"}\\nPatch2:\\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(\".\");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const c=e[a[a.length-1]];if(\"function\"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return((-1^e)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(c.toString().replaceAll(\"\\r\\n\",\"\\n\")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&\"object\"==typeof o||e(\"Failed to register mod: Expected info object, got \"+typeof o),\"string\"==typeof o.name&&o.name||e(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof o.name);let r=`'${o.name}'`;\"string\"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,\"string\"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&\"string\"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&\"object\"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s(\"unload\",(()=>u(g))),hookFunction:s(\"hookFunction\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);\"number\"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s(\"patchFunction\",((o,t)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))\"string\"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s(\"removePatches\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s(\"callOriginal\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s(\"getOriginalHash\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`);return l(o).originalHash}))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n", "import { GUI } from './Base/SettingUtils';\r\nimport { modules, registerModule } from './Base/Modules';\r\nimport { GlobalModule } from './Modules/Global';\r\nimport { ProfilesModule } from './Modules/Profiles';\r\nimport { ResponsesModule } from './Modules/Responses';\r\nimport bcr_style from './Static/main.css';\r\nimport { loadCommands } from './Utilities/Commands';\r\nimport { conDebug, conLog } from './Utilities/Console';\r\nimport { clearOldData, dataStore, dataTake } from './Utilities/Data';\r\nimport { injectStyle } from './Utilities/Other';\r\nimport { RibbonMenu } from './Utilities/RibbonMenu';\r\nimport { hookFunction } from './Utilities/SDK';\r\nimport { ModVersion } from './Utilities/Definition';\r\nimport { VersionModule } from './Modules/Version';\r\nimport { CharTalkModule } from './Modules/CharTalk';\r\nimport { Localization } from './Translation';\r\n\r\nfunction initWait() {\r\n  conLog('Init wait');\r\n  if (CurrentScreen == null || CurrentScreen === 'Login') {\r\n    hookFunction('LoginResponse', 0, (args, next) => {\r\n      conDebug(`Init! LoginResponse caught: `, args);\r\n      next(args);\r\n      const response = args[0];\r\n      if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\r\n        init();\r\n      }\r\n    });\r\n  } else {\r\n    conLog(`Already logged in, init`);\r\n    init();\r\n  }\r\n}\r\n\r\nexport function init() {\r\n  if (window.ResponsiveLoaded) return;\r\n\r\n  Localization.load();\r\n\r\n  injectStyle(bcr_style, 'bcr_style');\r\n\r\n  RibbonMenu.registerMod('Responsive');\r\n\r\n  dataTake();\r\n  loadCommands();\r\n\r\n  if (!initModules()) {\r\n    unload();\r\n    return;\r\n  }\r\n  clearOldData();\r\n\r\n  VersionModule.checkIfNewVersion();\r\n\r\n  dataStore();\r\n\r\n  window.ResponsiveLoaded = true;\r\n  conLog(`Loaded! Version: ${ModVersion}`);\r\n}\r\n\r\nfunction initModules(): boolean {\r\n  registerModule(new GUI());\r\n  registerModule(new GlobalModule());\r\n  registerModule(new ResponsesModule());\r\n  registerModule(new ProfilesModule());\r\n  registerModule(new VersionModule());\r\n  registerModule(new CharTalkModule());\r\n\r\n  for (const m of modules()) {\r\n    m.Init();\r\n  }\r\n\r\n  for (const m of modules()) {\r\n    m.Load();\r\n  }\r\n\r\n  for (const m of modules()) {\r\n    m.Run();\r\n  }\r\n\r\n  conLog('Modules Loaded.');\r\n  return true;\r\n}\r\n\r\nexport function unload(): true {\r\n  unloadModules();\r\n\r\n  delete window.ResponsiveLoaded;\r\n  conLog('Unloaded.');\r\n  return true;\r\n}\r\n\r\nfunction unloadModules() {\r\n  for (const m of modules()) {\r\n    m.Unload();\r\n  }\r\n}\r\n\r\ninitWait();\r\n", "//messageTimer\r\nexport const MT = {\r\n  CHANGELOG: 30,\r\n  INFO: 15,\r\n  COMMANDS: 20\r\n};\r\n\r\nconst cmdKeyword = 'bcr';\r\nexport const CMD_BCR = cmdKeyword;\r\nexport const CMD_TOGGLE = `${cmdKeyword} toggle`;\r\nexport const CMD_CHANGELOG = `${cmdKeyword} changelog`;\r\nexport const CMD_VERSION = `${cmdKeyword} version`;\r\nexport const CMD_FIX_DATA = `${cmdKeyword} fix-data`;\r\nexport const CMD_DEBUG_DATA = `${cmdKeyword} debug-data`;\r\n\r\nexport const ModName = `Responsive`;\r\nexport const FullModName = `Bondage Club Responsive`; //\u00AF\\_(\u2323\u032F\u0300 \u2323\u0301)_/\u00AF\r\nexport const ModVersion = `0.6.4`;\r\nexport const ModRepository = `https://github.com/dDeepLb/BC-Responsive`;\r\n\r\nexport const DebugMode = false;\r\n", "export class _String {\r\n  static encode(string: string | object) {\r\n    return LZString.compressToBase64(JSON.stringify(string));\r\n  }\r\n\r\n  static decode(string: string | undefined) {\r\n    let d = LZString.decompressFromBase64(string as string);\r\n    let data = {};\r\n\r\n    try {\r\n      let decoded = JSON.parse(d as string);\r\n      data = decoded;\r\n    } catch {}\r\n    if (data) return data;\r\n  }\r\n\r\n  static shuffle(string: string[]) {\r\n    let temp: string[] = JSON.parse(JSON.stringify(string));\r\n    let ret: string[] = [];\r\n    while (temp.length > 0) {\r\n      let d = Math.floor(Math.random() * temp.length);\r\n      ret.push(temp[d]);\r\n      temp.splice(d, 1);\r\n    }\r\n    return ret;\r\n  }\r\n}\r\n", "import { GlobalSettingsModel } from \"../Models/Base\";\r\nimport { ProfileEntryModel } from \"../Models/Profiles\";\r\nimport { ResponsesSettingsModel } from \"../Models/Responses\";\r\nimport { SettingsModel } from \"../Models/Settings\";\r\nimport { ModName } from \"./Definition\";\r\nimport { _String } from \"./String\";\r\n\r\nexport const PlayerStorage = () => Player[ModName];\r\nexport const ExtensionStorage = () => Player.ExtensionSettings[ModName];\r\n\r\nexport function dataTake() {\r\n  if (ExtensionStorage()) {\r\n    Player[ModName] = JSON.parse(LZString.decompressFromBase64(ExtensionStorage())) as SettingsModel;\r\n  } else if (Player.OnlineSettings[\"BCResponsive\"]) {\r\n    /*\r\n     * Unfortunatelly, if data is object, it means, that data was saved in ancient version,\r\n     * when dinosaurs and Jedis were living on the Earth. Or just something went wrong...\r\n     */\r\n    if (typeof Player.OnlineSettings[\"BCResponsive\"] == \"object\") {\r\n      return (Player[ModName] = <SettingsModel>{});\r\n    }\r\n    Player[ModName] = JSON.parse(LZString.decompressFromBase64(Player.OnlineSettings[\"BCResponsive\"]));\r\n\r\n    delete Player.OnlineSettings[\"BCResponsive\"];\r\n    window.ServerAccountUpdate.QueueData({ OnlineSettings: Player.OnlineSettings });\r\n  } else {\r\n    Player[ModName] = <SettingsModel>{};\r\n  }\r\n}\r\n\r\nexport function dataStore() {\r\n  if (!ExtensionStorage()) Player.ExtensionSettings[ModName] = \"\";\r\n  let Data: SettingsModel = {\r\n    Version: PlayerStorage().Version,\r\n    GlobalModule: PlayerStorage().GlobalModule,\r\n    ResponsesModule: PlayerStorage().ResponsesModule,\r\n    ProfilesModule: PlayerStorage().ProfilesModule\r\n  };\r\n\r\n  Player.ExtensionSettings[ModName] = _String.encode(Data);\r\n  ServerPlayerExtensionSettingsSync(ModName);\r\n}\r\n\r\nexport function dataErase(doResetSettings: boolean, doResetResponses: boolean, doResetProfiles: boolean) {\r\n  if (doResetSettings) {\r\n    Player[ModName].GlobalModule = <GlobalSettingsModel>{};\r\n  }\r\n\r\n  if (doResetResponses) {\r\n    Player[ModName].ResponsesModule = <ResponsesSettingsModel>{};\r\n  }\r\n\r\n  if (doResetProfiles) {\r\n    Player[ModName].ProfilesModule = <ProfileEntryModel[]>{};\r\n  }\r\n  dataStore();\r\n}\r\n\r\nexport function dataResetForManual() {\r\n  Player[ModName].ResponsesModule = <ResponsesSettingsModel>{\r\n    mainResponses: [],\r\n    extraResponses: {\r\n      low: [],\r\n      light: [],\r\n      medium: [],\r\n      hot: [],\r\n      orgasm: []\r\n    }\r\n  };\r\n  dataStore();\r\n}\r\n\r\nexport function dataFix() {\r\n  let data = Player[ModName];\r\n  let mainResponses = data.ResponsesModule.mainResponses;\r\n\r\n  mainResponses.forEach((entry) => {\r\n    if (entry.actName == undefined) {\r\n      mainResponses.splice(mainResponses.indexOf(entry));\r\n    }\r\n\r\n    if (typeof entry.groupName == \"string\") {\r\n      entry.groupName = [entry.groupName];\r\n    }\r\n\r\n    if (entry.responses == undefined) {\r\n      entry.responses = [\"\"];\r\n    }\r\n  });\r\n}\r\n\r\nexport function clearOldData() {\r\n  delete Player.OnlineSettings?.[\"BCResponsive\"]?.Profiles;\r\n  delete Player.OnlineSettings?.[\"BCResponsive\"]?.data;\r\n  delete Player.OnlineSettings?.[\"BCResponsive\"]?.SavedVersion;\r\n\r\n  delete Player[\"BCResponsive\"]?.Profiles;\r\n  delete Player[\"BCResponsive\"]?.data;\r\n  delete Player[\"BCResponsive\"]?.SavedVersion;\r\n}\r\n", "import { BaseSettingsModel } from \"../Models/Base\";\r\nimport { SettingsModel } from \"../Models/Settings\";\r\nimport { PlayerStorage } from \"../Utilities/Data\";\r\nimport { ModName } from \"../Utilities/Definition\";\r\nimport { Subscreen } from \"./SettingDefinitions\";\r\n\r\nexport abstract class BaseModule {\r\n  get settingsScreen(): Subscreen | null {\r\n    return null;\r\n  }\r\n\r\n  /** Allows changing the subkey for that module settings storage */\r\n  get settingsStorage(): string | null {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get settings(): BaseSettingsModel {\r\n    if (!this.settingsStorage) return {} as BaseSettingsModel;\r\n    if (!PlayerStorage()) {\r\n      Player[ModName] = <SettingsModel>{};\r\n      this.registerDefaultSettings();\r\n    } else if (!PlayerStorage()[this.settingsStorage]) this.registerDefaultSettings();\r\n    return PlayerStorage()[this.settingsStorage];\r\n  }\r\n\r\n  get enabled(): boolean {\r\n    if (!PlayerStorage()?.GlobalModule) return false;\r\n    return (\r\n      PlayerStorage().GlobalModule.ResponsiveEnabled &&\r\n      this.settings.ResponsiveEnabled &&\r\n      (ServerPlayerIsInChatRoom() || (CurrentModule == \"Room\" && CurrentScreen == \"Crafting\"))\r\n    );\r\n  }\r\n\r\n  Init() {\r\n    this.registerDefaultSettings();\r\n  }\r\n\r\n  registerDefaultSettings(): void {\r\n    const storage = this.settingsStorage;\r\n    const defaults = this.defaultSettings;\r\n    if (!storage || !defaults) return;\r\n\r\n    PlayerStorage()[storage] = Object.assign(defaults, PlayerStorage()[storage] ?? {});\r\n  }\r\n\r\n  get defaultSettings(): BaseSettingsModel | null {\r\n    return null;\r\n  }\r\n\r\n  Load() {}\r\n\r\n  Run() {\r\n    // Empty\r\n  }\r\n\r\n  Unload() {\r\n    // Empty\r\n  }\r\n}\r\n", "import { BaseModule } from \"./BaseModule\";\r\n\r\nexport const modulesMap: Map<string, BaseModule> = new Map<string, BaseModule>();\r\n\r\nexport function modules(): BaseModule[] {\r\n  return [...modulesMap.values()];\r\n}\r\n\r\nexport function registerModule<T extends BaseModule>(module: T): T {\r\n  modulesMap.set(module.constructor.name, module);\r\n  return module;\r\n}\r\n\r\nexport function getModule<T extends BaseModule>(moduleType: string): T {\r\n  return modulesMap.get(moduleType) as T;\r\n}\r\n", "export class RibbonMenu {\r\n  private static START_Y = 820;\r\n  private static MOD_Y = 110;\r\n\r\n  /**\r\n   * Calculates button Y position using mod index.\r\n   * @param modIndex Mod index. Can be obtained calling `GetModIndex`.\r\n   * @returns position\r\n   */\r\n  static getYPos(modIndex: number) {\r\n    return this.START_Y - this.MOD_Y * (modIndex % 6);\r\n  }\r\n\r\n  /**\r\n   * Registers `modName` in the Ribbon Menu. Handles when Ribbon Menu is full.\r\n   * @param modName Mod name itself that will be registered in Ribbon Menu\r\n   * @returns nothing\r\n   */\r\n  static registerMod(modName: string): void {\r\n    if (!window.RibbonMenuMods) window.RibbonMenuMods = [];\r\n    if (window.RibbonMenuMods.length >= 6) return console.warn(`${modName} can't be added to Ribbon Menu. Is is full`);\r\n    window.RibbonMenuMods.push(modName);\r\n  }\r\n\r\n  /**\r\n   * Returns mod index from Ribbon menu.\r\n   * @param modName Mod name registered in Ribbon Menu\r\n   * @returns modIndex or undefined\r\n   */\r\n  static getModIndex(modName: string): number | undefined {\r\n    return window.RibbonMenuMods?.indexOf(modName);\r\n  }\r\n\r\n  /**\r\n   * Draws button in Ribbon Menu using `callback`.\r\n   * @param modIndex Mod index obtained with `GetModIndex`.\r\n   * @param callback Function that will be executed on click.\r\n   * @returns nothing\r\n   */\r\n  static drawModButton(modIndex: number | undefined, callback: (modIndex: number) => void): void {\r\n    if (PreferenceSubscreen === \"\" && modIndex !== undefined) callback(modIndex as number);\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Handles click on button in Ribbon Menu using `callback`.\r\n   * @param modIndex Mod index obtained with `GetModIndex`.\r\n   * @param callback Function that will be executed on click.\r\n   * @returns nothing\r\n   */\r\n  static handleModClick(modIndex: number | undefined, callback: (modIndex: number) => void): void {\r\n    if (PreferenceSubscreen === \"\" && modIndex !== undefined)\r\n      if (MouseIn(1815, RibbonMenu.getYPos(modIndex), 90, 90)) callback(modIndex as number);\r\n    return;\r\n  }\r\n}\r\n", "import bcMod from 'bondage-club-mod-sdk';\r\nimport { getCharacter } from './Other';\r\nimport { conErr } from './Console';\r\nimport { ModName, FullModName, ModVersion, ModRepository } from './Definition';\r\n\r\nexport const SDK = bcMod.registerMod(\r\n  {\r\n    name: ModName,\r\n    fullName: FullModName,\r\n    version: ModVersion,\r\n    repository: ModRepository\r\n  },\r\n  {\r\n    allowReplace: false\r\n  }\r\n);\r\n\r\nexport enum HookPriority {\r\n  Observe = 0,\r\n  AddBehavior = 1,\r\n  ModifyBehavior = 5,\r\n  OverrideBehavior = 10,\r\n  Top = 100\r\n}\r\n\r\nexport enum ModuleCategory {\r\n  Core = -1,\r\n  Global = 0,\r\n  Responses = 1,\r\n  Profiles = 2,\r\n  CharTalk = 3\r\n}\r\n\r\nconst patchedFunctions: Map<string, PatchedFunctionData> = new Map();\r\n\r\nfunction initPatchableFunction(target: string): PatchedFunctionData {\r\n  let result = patchedFunctions.get(target);\r\n  if (!result) {\r\n    result = {\r\n      name: target,\r\n      hooks: []\r\n    };\r\n    patchedFunctions.set(target, result);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function hookFunction(\r\n  target: string,\r\n  priority: number,\r\n  hook: import('../../.types/bcmodsdk').PatchHook,\r\n  module: ModuleCategory | null = null\r\n): () => void {\r\n  const data = initPatchableFunction(target);\r\n\r\n  if (data.hooks.some((h) => h.hook === hook)) {\r\n    conErr(`Duplicate hook for \"${target}\"`, hook);\r\n    return () => null;\r\n  }\r\n\r\n  const removeCallback = SDK.hookFunction(target, priority, hook as any);\r\n\r\n  data.hooks.push({\r\n    hook,\r\n    priority,\r\n    module,\r\n    removeCallback\r\n  });\r\n  data.hooks.sort((a, b) => b.priority - a.priority);\r\n  return removeCallback;\r\n}\r\n\r\nexport function patchFunction(target: string, patches: Record<string, string>): void {\r\n  SDK.patchFunction(target, patches);\r\n}\r\n\r\nexport function removeHookByModule(target: string, module: ModuleCategory): boolean {\r\n  const data = initPatchableFunction(target);\r\n\r\n  for (let i = data.hooks.length - 1; i >= 0; i--) {\r\n    if (data.hooks[i].module === module) {\r\n      data.hooks[i].removeCallback();\r\n      data.hooks.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function removeAllHooksByModule(module: ModuleCategory): boolean {\r\n  for (const data of patchedFunctions.values()) {\r\n    for (let i = data.hooks.length - 1; i >= 0; i--) {\r\n      if (data.hooks[i].module === module) {\r\n        data.hooks[i].removeCallback();\r\n        data.hooks.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function onActivity(\r\n  priority: any,\r\n  module: ModuleCategory,\r\n  callback: (data: any, sender: Character | undefined, msg: string, metadata: ChatMessageDictionary) => void\r\n) {\r\n  hookFunction(\r\n    'ChatRoomMessage',\r\n    priority,\r\n    (args, next) => {\r\n      let data = args[0];\r\n      let sender = getCharacter(data.Sender);\r\n      if (data.Type == 'Activity') callback(data, sender, data.Content, data.Dictionary);\r\n      next(args);\r\n    },\r\n    module\r\n  );\r\n}\r\n", "export function getCharacter(memberNumber?: number) {\r\n  return ChatRoomCharacter.find((c) => c.MemberNumber == memberNumber) ?? undefined;\r\n}\r\n\r\nexport function getRandomInt(max: number) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport function injectStyle(styleSrc: string, styleId: string) {\r\n  const checkStyle = !!document.getElementById(styleId);\r\n  if (checkStyle) return;\r\n\r\n  const styleElement = document.createElement(\"style\");\r\n  styleElement.id = styleId;\r\n  styleElement.appendChild(document.createTextNode(styleSrc));\r\n  document.head.appendChild(styleElement);\r\n}\r\n", "import { DebugMode } from \"./Definition\";\r\n\r\nconst STYLES = {\r\n  INFO: \"color: #32CCCC\",\r\n  LOG: \"color: #CCCC32\",\r\n  DEBUG: \"color: #9E4BCF\"\r\n};\r\n\r\nexport function conInfo(...args: any[]) {\r\n  if (typeof args[0] === \"string\") console.info(`%cBCR: ${args[0]}`, STYLES.INFO, ...args.slice(1));\r\n  else console.info(`%cBCR:`, STYLES.LOG, ...args);\r\n}\r\n\r\nexport function conLog(...args: any[]) {\r\n  if (typeof args[0] === \"string\") console.log(`%cBCR: ${args[0]}`, STYLES.LOG, ...args.slice(1));\r\n  else console.log(`%cBCR:`, STYLES.LOG, ...args);\r\n}\r\n\r\nexport function conWarn(...args: any[]) {\r\n  if (typeof args[0] === \"string\") console.warn(`%cBCR: ${args[0]}`, STYLES.LOG, ...args.slice(1));\r\n  else console.warn(`%cBCR: `, STYLES.LOG, ...args);\r\n}\r\n\r\nexport function conErr(...args: any[]) {\r\n  if (typeof args[0] === \"string\") console.error(`%cBCR: ${args[0]}`, STYLES.LOG, ...args.slice(1));\r\n  else console.error(`%cBCR:`, STYLES.LOG, ...args);\r\n}\r\n\r\nexport function conDebug(...args: any[]) {\r\n  if (DebugMode) {\r\n    if (typeof args[0] === \"string\") console.debug(`%cBCR: ${args[0]}`, STYLES.DEBUG, ...args.slice(1));\r\n    else console.debug(`%cBCR:`, STYLES.LOG, ...args);\r\n  }\r\n}\r\n", "export class Localization {\r\n  static Translation = new Object();\r\n\r\n  static async load() {\r\n    const lang = TranslationLanguage.toLowerCase();\r\n    this.Translation = await Localization.fetchLanguageFile(lang);\r\n  }\r\n\r\n  static getText(srcTag: string) {\r\n    return this.Translation[srcTag] || srcTag || '';\r\n  }\r\n\r\n  private static async fetchLanguageFile(lang: string) {\r\n    const response = await fetch(`${serverUrl}/translations/${lang}.lang`);\r\n\r\n    if (lang != 'en' && !response.ok) {\r\n      return Localization.fetchLanguageFile('en');\r\n    }\r\n    const langFileContent = await response.text();\r\n\r\n    return this.parseLanguageFile(langFileContent);\r\n  }\r\n\r\n  private static parseLanguageFile(content) {\r\n    const translations = {};\r\n    const lines = content.split('\\n');\r\n\r\n    for (const line of lines) {\r\n      // Ignore empty lines and comments\r\n      if (line.trim() === '' || line.trim().startsWith('#')) {\r\n        continue;\r\n      }\r\n\r\n      const [key, value] = line.split('=');\r\n      translations[key.trim()] = value.trim();\r\n    }\r\n\r\n    return translations;\r\n  }\r\n}\r\n\r\nexport const getText = (string: string): string => Localization.getText(string);\r\n", "import { BaseModule } from \"./BaseModule\";\r\nimport { GuiSubscreen } from \"./BaseSetting\";\r\nimport { GUI } from \"./SettingUtils\";\r\n\r\nexport const SETTING_FUNC_PREFIX: string = \"PreferenceSubscreen\";\r\nexport const SETTING_NAME_PREFIX: string = \"BCR\";\r\nexport const SETTING_FUNC_NAMES: string[] = [\"Load\", \"Run\", \"Click\", \"Unload\", \"Exit\"];\r\n\r\nexport type Subscreen = new (module: BaseModule) => GuiSubscreen;\r\n\r\nexport function getCurrentSubscreen(): GuiSubscreen | null {\r\n  return GUI.instance && GUI.instance.currentSubscreen;\r\n}\r\n\r\nexport function setSubscreen(subscreen: GuiSubscreen | string | null): GuiSubscreen | null {\r\n  if (!GUI.instance) {\r\n    throw new Error(\"Attempt to set subscreen before init\");\r\n  }\r\n  GUI.instance.currentSubscreen = subscreen;\r\n  return GUI.instance.currentSubscreen;\r\n}\r\n", "import { Setting } from \"../../.types/setting\";\r\nimport { BaseSettingsModel } from \"../Models/Base\";\r\nimport { modules } from \"./Modules\";\r\nimport { conDebug } from \"../Utilities/Console\";\r\nimport { dataStore } from \"../Utilities/Data\";\r\nimport { getText } from \"../Translation\";\r\nimport { BaseModule } from \"./BaseModule\";\r\nimport { SETTING_FUNC_NAMES, SETTING_FUNC_PREFIX, SETTING_NAME_PREFIX, setSubscreen } from \"./SettingDefinitions\";\r\nimport { GUI } from \"./SettingUtils\";\r\n\r\nexport abstract class GuiSubscreen {\r\n  static START_X: number = 180;\r\n  static START_Y: number = 205;\r\n  static X_MOD: number = 950;\r\n  static Y_MOD: number = 75;\r\n  static POS_BAK: number = GuiSubscreen.START_X;\r\n  static TEXT_ALIGN_BAK;\r\n  readonly module: BaseModule;\r\n\r\n  constructor(module?: BaseModule) {\r\n    if (module) this.module = module;\r\n\r\n    // create each handler for a new preference subscreen\r\n    SETTING_FUNC_NAMES.forEach((name) => {\r\n      const fName = SETTING_FUNC_PREFIX + SETTING_NAME_PREFIX + this.name + name;\r\n      if (typeof (<any>this)[name] === \"function\" && typeof (<any>window)[fName] !== \"function\")\r\n        (<any>window)[fName] = () => {\r\n          (<any>this)[name]();\r\n        };\r\n    });\r\n  }\r\n\r\n  get name(): string {\r\n    return \"UNKNOWN\";\r\n  }\r\n\r\n  get icon(): string {\r\n    return \"\";\r\n  }\r\n\r\n  get label(): string {\r\n    return \"UNDEFINED SETTING SCREEN\";\r\n  }\r\n\r\n  get message(): string {\r\n    return PreferenceMessage;\r\n  }\r\n\r\n  set message(message: string) {\r\n    PreferenceMessage = message;\r\n  }\r\n\r\n  get SubscreenName(): string {\r\n    return SETTING_NAME_PREFIX + this.constructor.name;\r\n  }\r\n\r\n  setSubscreen(screen: GuiSubscreen | string | null) {\r\n    return setSubscreen(screen);\r\n  }\r\n\r\n  get settings(): BaseSettingsModel {\r\n    return this.module.settings as BaseSettingsModel;\r\n  }\r\n\r\n  get multipageStructure(): Setting[][] {\r\n    return [[]];\r\n  }\r\n\r\n  get structure(): Setting[] {\r\n    return this.multipageStructure[Math.min(PreferencePageCurrent - 1, this.multipageStructure.length - 1)];\r\n  }\r\n\r\n  get character(): Character {\r\n    return GUI.instance?.currentCharacter as Character;\r\n  }\r\n\r\n  getYPos(ix: number) {\r\n    return GuiSubscreen.START_Y + GuiSubscreen.Y_MOD * (ix % 9);\r\n  }\r\n\r\n  getXPos(ix: number) {\r\n    return GuiSubscreen.START_X + GuiSubscreen.X_MOD * Math.floor(ix / 9);\r\n  }\r\n\r\n  hideElements() {\r\n    this.multipageStructure.forEach((item, ix, arr) => {\r\n      if (ix != PreferencePageCurrent - 1) {\r\n        item.forEach((setting) => {\r\n          if (setting.type == \"text\" || setting.type == \"number\") this.elementHide(setting.id);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  Load() {\r\n    conDebug(`Loading ${PreferenceSubscreen.slice(3).trim()} GUI`);\r\n    for (const module of modules()) {\r\n      if (!module.settingsScreen) continue;\r\n      if (!Object.keys(module.settings).length) module.registerDefaultSettings();\r\n    }\r\n    this.multipageStructure.forEach((s) =>\r\n      s.forEach((item) => {\r\n        switch (item.type) {\r\n          case \"text\":\r\n            let input = ElementCreateInput(item.id, \"text\", item.setting(), \"255\");\r\n            input.setAttribute(\"autocomplete\", \"off\");\r\n            break;\r\n          case \"number\":\r\n            ElementCreateInput(item.id, \"number\", item.setting(), \"255\");\r\n            break;\r\n        }\r\n      })\r\n    );\r\n\r\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\r\n  }\r\n\r\n  Run() {\r\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\r\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\r\n\r\n    GuiSubscreen.START_X = 550;\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    DrawCharacter(Player, 50, 50, 0.9, false);\r\n    DrawText(getText(`${this.name}.title`), GuiSubscreen.START_X, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, \"Black\", \"#D7F6E9\");\r\n    DrawButton(1815, 75, 90, 90, \"\", \"White\", \"Icons/Exit.png\", \"Responsive\");\r\n\r\n    if (this.multipageStructure.length > 1) {\r\n      MainCanvas.textAlign = \"center\";\r\n      PreferencePageChangeDraw(1595, 75, this.multipageStructure.length);\r\n      MainCanvas.textAlign = \"left\";\r\n    }\r\n\r\n    this.hideElements();\r\n\r\n    this.structure.forEach((item, ix, arr) => {\r\n      switch (item.type) {\r\n        case \"checkbox\":\r\n          this.drawCheckbox(item.label, item.description, item.setting(), ix, item.disabled);\r\n          break;\r\n        case \"text\":\r\n        case \"number\":\r\n          this.elementPosition(item.id, item.label, item.description, ix, item.disabled);\r\n          break;\r\n        case \"label\":\r\n          this.drawLabel(item.label, item.description, ix);\r\n          break;\r\n        case \"button\":\r\n          this.drawBetterButton(item.position, item.size, item.label, item.color, item.image, item.disabled);\r\n          break;\r\n      }\r\n    });\r\n\r\n    GuiSubscreen.START_X = GuiSubscreen.POS_BAK;\r\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\r\n  }\r\n\r\n  Click() {\r\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\r\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\r\n\r\n    GuiSubscreen.START_X = 550;\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    if (MouseIn(1815, 75, 90, 90)) return this.Exit();\r\n    if (this.multipageStructure.length > 1) PreferencePageChangeClick(1595, 75, this.multipageStructure.length);\r\n\r\n    this.structure.forEach((item, ix, arr) => {\r\n      switch (item.type) {\r\n        case \"checkbox\":\r\n          if (MouseIn(this.getXPos(ix) + 600, this.getYPos(ix) - 32, 64, 64) && !item.disabled) {\r\n            item.setSetting(!item.setting());\r\n          }\r\n          break;\r\n        case \"button\":\r\n          if (MouseIn(item.position[0], item.position[1], item.size[0], item.size[1])) item.callback();\r\n          break;\r\n      }\r\n    });\r\n\r\n    GuiSubscreen.START_X = GuiSubscreen.POS_BAK;\r\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\r\n  }\r\n\r\n  Exit() {\r\n    this.multipageStructure.forEach((s) =>\r\n      s.forEach((item) => {\r\n        switch (item.type) {\r\n          case \"number\":\r\n            if (!CommonIsNumeric(ElementValue(item.id))) {\r\n              ElementRemove(item.id);\r\n              break;\r\n            }\r\n          case \"text\":\r\n            item.setSetting(ElementValue(item.id));\r\n            ElementRemove(item.id);\r\n            break;\r\n        }\r\n      })\r\n    );\r\n\r\n    CharacterAppearanceForceUpCharacter = -1;\r\n    CharacterLoadCanvas(Player);\r\n\r\n    setSubscreen(\"mainmenu\");\r\n    dataStore();\r\n  }\r\n\r\n  Unload() {\r\n    // Empty\r\n  }\r\n\r\n  tooltip(text: string) {\r\n    drawTooltip(300, 850, 1400, text, \"left\");\r\n  }\r\n\r\n  drawCheckbox(label: string, description: string, value: boolean, order: number, disabled: boolean = false) {\r\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\r\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\r\n    DrawCheckbox(this.getXPos(order) + 600, this.getYPos(order) - 32, 64, 64, \"\", value ?? false, disabled);\r\n    if (isHovering) this.tooltip(getText(description));\r\n  }\r\n\r\n  drawBetterButton(position: number[], size: number[], label: string, color: string, image: string = \"\", disabled: boolean = false) {\r\n    var isHovering = MouseIn(position[0], position[1] - 32, size[0], size[1]);\r\n    DrawButton(position[0], position[1], size[0], size[1], \"\", color, \"\", \"\", disabled);\r\n    DrawImageResize(image, position[0] + 10, position[1] + 10, 60, 60);\r\n    DrawTextFit(getText(label), position[0] + 80, position[1] + 40, 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\r\n  }\r\n\r\n  drawButton(label: string, color: string, order: number, XOffset: number, disabled: boolean = false) {\r\n    var isHovering = MouseIn(this.getXPos(order) + XOffset, this.getYPos(order) - 32, 200, 64);\r\n    DrawButton(this.getXPos(order) + XOffset, this.getYPos(order) - 32, 200, 64, \"\", color, \"\", \"\", disabled);\r\n    DrawTextFit(getText(label), this.getXPos(order) + XOffset + 58, this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\r\n  }\r\n\r\n  elementHide(elementId: string) {\r\n    ElementPosition(elementId, -999, -999, 1, 1);\r\n  }\r\n\r\n  elementPosition(elementId: string, label: string, description: string, order: number, disabled: boolean = false) {\r\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\r\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\r\n    ElementPosition(elementId, this.getXPos(order) + 750 + 225, this.getYPos(order), 800, 64);\r\n    if (disabled) ElementSetAttribute(elementId, \"disabled\", \"true\");\r\n    if (!disabled) document.getElementById(elementId)?.removeAttribute(\"disabled\");\r\n    if (isHovering) this.tooltip(getText(description));\r\n  }\r\n\r\n  drawLabel(label: string, description: string, order: number) {\r\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\r\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\r\n    if (isHovering) this.tooltip(getText(description));\r\n  }\r\n}\r\n\r\nfunction drawTooltip(x: number, y: number, width: number, text: string, align: \"left\" | \"center\" | \"right\") {\r\n  const bak = MainCanvas.textAlign;\r\n  MainCanvas.textAlign = align;\r\n  DrawRect(x, y, width, 65, \"#ffff88\");\r\n  DrawEmptyRect(x, y, width, 65, \"Black\");\r\n  DrawTextFit(text, align === \"left\" ? x + 3 : x + width / 2, y + 33, width - 6, \"black\");\r\n  MainCanvas.textAlign = bak;\r\n}\r\n", "import { GuiSubscreen } from \"../Base/BaseSetting\";\r\nimport { dataErase, dataResetForManual } from \"../Utilities/Data\";\r\nimport { getText } from \"../Translation\";\r\n\r\nexport class GuiReset extends GuiSubscreen {\r\n  get name(): string {\r\n    return \"reset\";\r\n  }\r\n\r\n  get icon(): string {\r\n    return \"\";\r\n  }\r\n\r\n  private allowedConfirmTime: number | null = 0;\r\n\r\n  private doResetForManualSettings: boolean = false;\r\n\r\n  private doResetSettings: boolean = true;\r\n  private doResetResponses: boolean = true;\r\n  private doResetProfiles: boolean = false;\r\n\r\n  Load() {\r\n    this.allowedConfirmTime = Date.now() + 10_000;\r\n    super.Load();\r\n  }\r\n\r\n  Run() {\r\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\r\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\r\n\r\n    GuiSubscreen.START_X = 180;\r\n    MainCanvas.textAlign = \"center\";\r\n\r\n    DrawText(getText(`reset.label.perma_reset_of_bcr_data`), 1000, 125, \"Black\");\r\n\r\n    DrawText(getText(`reset.label.warning`), 1000, 225, \"Black\", \"Black\");\r\n    DrawText(getText(`reset.label.if_u_confirm_perma_reset`), 1000, 325, \"Black\");\r\n\r\n    DrawText(getText(`reset.label.youll_able_to_use_bcr`), 1000, 375, \"Gray\");\r\n\r\n    DrawText(getText(`reset.label.action_cannot_be_undone`), 1000, 425, \"Red\", \"Black\");\r\n\r\n    const now = Date.now();\r\n    if (now < this.allowedConfirmTime) {\r\n      DrawButton(\r\n        1000,\r\n        690,\r\n        200,\r\n        80,\r\n        `${getText(\"reset.button.confirm\")} (${Math.floor((this.allowedConfirmTime - now) / 1000)})`,\r\n        \"#ddd\",\r\n        undefined,\r\n        undefined,\r\n        true\r\n      );\r\n    } else {\r\n      DrawButton(1000, 690, 200, 80, getText(\"reset.button.confirm\"), \"White\");\r\n    }\r\n\r\n    DrawButton(1520, 690, 200, 80, getText(\"reset.button.cancel\"), \"White\");\r\n\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    this.drawCheckbox(\r\n      \"reset.setting.reset_for_manual_setting.text\",\r\n      \"reset.setting.reset_for_manual_setting.desc\",\r\n      this.doResetForManualSettings,\r\n      4\r\n    );\r\n    this.drawCheckbox(\r\n      \"reset.setting.reset_settings.text\",\r\n      \"reset.setting.reset_settings.desc\",\r\n      this.doResetSettings,\r\n      6,\r\n      this.doResetForManualSettings\r\n    );\r\n    this.drawCheckbox(\r\n      \"reset.setting.reset_responses.text\",\r\n      \"reset.setting.reset_responses.desc\",\r\n      this.doResetResponses,\r\n      7,\r\n      this.doResetForManualSettings\r\n    );\r\n    this.drawCheckbox(\r\n      \"reset.setting.reset_profiles.text\",\r\n      \"reset.setting.reset_profiles.desc\",\r\n      this.doResetProfiles,\r\n      8,\r\n      this.doResetForManualSettings\r\n    );\r\n\r\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\r\n  }\r\n\r\n  Click() {\r\n    if (this.allowedConfirmTime === null) return;\r\n\r\n    if (MouseIn(1520, 690, 200, 80)) return this.Exit();\r\n\r\n    if (MouseIn(1000, 690, 200, 80) && Date.now() >= this.allowedConfirmTime) return this.Confirm();\r\n\r\n    if (MouseIn(this.getXPos(4) + 600, this.getYPos(4) - 32, 64, 64)) return (this.doResetForManualSettings = !this.doResetForManualSettings);\r\n    if (MouseIn(this.getXPos(6) + 600, this.getYPos(6) - 32, 64, 64) && !this.doResetForManualSettings)\r\n      return (this.doResetSettings = !this.doResetSettings);\r\n    if (MouseIn(this.getXPos(7) + 600, this.getYPos(7) - 32, 64, 64) && !this.doResetForManualSettings)\r\n      return (this.doResetResponses = !this.doResetResponses);\r\n    if (MouseIn(this.getXPos(8) + 800, this.getYPos(8) - 32, 64, 64) && !this.doResetForManualSettings)\r\n      return (this.doResetProfiles = !this.doResetProfiles);\r\n  }\r\n\r\n  Confirm() {\r\n    this.allowedConfirmTime = null;\r\n    if (this.doResetForManualSettings) {\r\n      dataResetForManual();\r\n    } else {\r\n      dataErase(this.doResetSettings, this.doResetResponses, this.doResetProfiles);\r\n    }\r\n    this.setSubscreen(null);\r\n  }\r\n}\r\n", "import { Button, Setting } from '../../.types/setting';\r\nimport { GuiSubscreen } from '../Base/BaseSetting';\r\nimport { getText } from '../Translation';\r\n\r\nexport class GuiSupport extends GuiSubscreen {\r\n  private static thankYouList: string[] = ['Ellena', 'weboos', 'Jamie'];\r\n  private static thankYouNext = 0;\r\n  private static thankYou = '';\r\n\r\n  get name(): string {\r\n    return 'Support';\r\n  }\r\n\r\n  get structure(): Setting[] {\r\n    return [\r\n      <Button>{\r\n        type: 'button',\r\n        position: [GuiSubscreen.START_X, GuiSubscreen.START_Y],\r\n        size: [405, 80],\r\n        label: 'support.button.ko-fi',\r\n        color: '#49225C',\r\n        image: 'https://storage.ko-fi.com/cdn/nav-logo-stroke.png',\r\n        disabled: false,\r\n        callback() {\r\n          window.open('https://ko-fi.com/monikka_bc', '_blank');\r\n        }\r\n      },\r\n      <Button>{\r\n        type: 'button',\r\n        position: [GuiSubscreen.START_X, GuiSubscreen.START_Y + GuiSubscreen.Y_MOD + 20],\r\n        size: [405, 80],\r\n        label: 'support.button.patreon',\r\n        color: '#49225C',\r\n        image: 'https://c5.patreon.com/external/favicon/rebrand/favicon-32.png?v=af5597c2ef',\r\n        disabled: false,\r\n        callback() {\r\n          window.open('https://patreon.com/monikka_bc', '_blank');\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  static getSupporter() {\r\n    if (GuiSupport.thankYouNext < CommonTime()) GuiSupport.doNextThankYou();\r\n    return `${getText('support.other.thankyou')}, ${GuiSupport.thankYou}`;\r\n  }\r\n\r\n  static doNextThankYou() {\r\n    if (GuiSupport.thankYou && GuiSupport.thankYouList.length < 2) return;\r\n    GuiSupport.thankYou = CommonRandomItemFromList(GuiSupport.thankYou, GuiSupport.thankYouList);\r\n    GuiSupport.thankYouNext = CommonTime() + 4000;\r\n  }\r\n\r\n  Load() {\r\n    GuiSupport.doNextThankYou();\r\n\r\n    ElementCreateDiv('ResponsiveGratitude');\r\n    let elm = document.getElementById('ResponsiveGratitude');\r\n    ElementContent('ResponsiveGratitude', gratitudeHtml);\r\n\r\n    const font =\r\n      MainCanvas.canvas.clientWidth <= MainCanvas.canvas.clientHeight * 2\r\n        ? MainCanvas.canvas.clientWidth / 50\r\n        : MainCanvas.canvas.clientHeight / 25;\r\n\r\n    Object.assign(elm.style, {\r\n      fontFamily: CommonGetFontName(),\r\n      fontSize: font + 'px'\r\n    });\r\n\r\n    super.Load();\r\n  }\r\n\r\n  Run() {\r\n    super.Run();\r\n\r\n    let tmp = GuiSubscreen.START_X;\r\n    GuiSubscreen.START_X = 550;\r\n\r\n    DrawText(GuiSupport.getSupporter(), GuiSubscreen.START_X + 300, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, 'Black', '#D7F6E9');\r\n\r\n    GuiSubscreen.START_X = tmp;\r\n  }\r\n\r\n  Click() {\r\n    super.Click();\r\n  }\r\n\r\n  Exit() {\r\n    ElementRemove('ResponsiveGratitude');\r\n    super.Exit();\r\n  }\r\n}\r\n\r\nconst gratitudeHtml = /*html*/ `\r\n<h1 class=\"ResponsiveH\">Dear Supporters!</h1>\r\n<p class=\"ResponsiveP\">\r\n  I want to take a moment to express my heartfelt gratitude for considering supporting me. Your willingness to stand by\r\n  my side in this creative journey means the world to me, and I am truly humbled by your generosity.\r\n</p>\r\n<p class=\"ResponsiveP\">\r\n  Your support goes far beyond the financial contributions; it represents belief in my work and a shared passion for\r\n  what I do. Your encouragement inspires me to continue developing.\r\n</p>\r\n<p class=\"ResponsiveP\">\r\n  Your support not only helps me sustain and grow as a developer, but also enables me to dedicate more time and\r\n  resources to producing high-quality mods. It allows me to explore new ideas, enhance my skills, and bring even more\r\n  meaningful and enjoyable content to you.\r\n</p>\r\n<p class=\"ResponsiveP\">Thank you all~</p>\r\n<p class=\"ResponsiveP\">With love, Monikka\u2665</p>\r\n`;\r\n", "import { GuiSubscreen } from '../Base/BaseSetting';\r\nimport { GUI } from '../Base/SettingUtils';\r\nimport { getText } from '../Translation';\r\nimport { ModVersion } from '../Utilities/Definition';\r\nimport { GuiReset } from './Reset';\r\nimport { GuiSupport } from './Support';\r\n\r\nexport class MainMenu extends GuiSubscreen {\r\n  subscreens: GuiSubscreen[] = [];\r\n\r\n  get name(): string {\r\n    return 'mainmenu';\r\n  }\r\n\r\n  constructor(module: GUI) {\r\n    super(module);\r\n\r\n    this.subscreens = module.subscreens;\r\n  }\r\n\r\n  Load(): void {\r\n    if (!GUI.instance?.currentSubscreen) {\r\n      this.setSubscreen(this);\r\n      return;\r\n    }\r\n\r\n    super.Load();\r\n  }\r\n\r\n  Run() {\r\n    let tmp = GuiSubscreen.START_X;\r\n    var prev = MainCanvas.textAlign;\r\n\r\n    GuiSubscreen.START_X = 550;\r\n    MainCanvas.textAlign = 'left';\r\n\r\n    DrawCharacter(Player, 50, 50, 0.9, false);\r\n    DrawText(\r\n      getText('mainmenu.title').replace('$ModVersion', ModVersion) + '  ' + GuiSupport.getSupporter(),\r\n      GuiSubscreen.START_X,\r\n      GuiSubscreen.START_Y - GuiSubscreen.Y_MOD,\r\n      'Black',\r\n      '#D7F6E9'\r\n    );\r\n    DrawButton(1815, 75, 90, 90, '', 'White', 'Icons/Exit.png');\r\n\r\n    MainCanvas.textAlign = 'center';\r\n    let i = 0;\r\n    for (const screen of this.subscreens) {\r\n      const PX = Math.floor(i / 6);\r\n      const PY = i % 6;\r\n\r\n      if (screen.name == 'mainmenu') continue;\r\n\r\n      DrawButton(GuiSubscreen.START_X + 430 * PX, 190 + 120 * PY, 450, 90, '', 'White', '', '');\r\n      DrawImageResize(screen.icon, GuiSubscreen.START_X + 430 * PX + 10, 190 + 120 * PY + 10, 70, 70);\r\n\r\n      MainCanvas.textAlign = 'left';\r\n      DrawTextFit(getText(`mainmenu.button.${screen.name}`), GuiSubscreen.START_X + 100 + 430 * PX, 235 + 120 * PY, 340, 'Black');\r\n      MainCanvas.textAlign = 'center';\r\n\r\n      i++;\r\n\r\n      MainCanvas.textAlign = 'left';\r\n    }\r\n\r\n    DrawButton(1500, 630, 405, 80, '', 'IndianRed');\r\n    DrawImageResize('Icons/ServiceBell.png', 1510, 640, 60, 60);\r\n    DrawTextFit('Reset', 1580, 670, 320, 'Black');\r\n\r\n    DrawButton(1500, 730, 405, 80, '', '#BDA203', '', 'Open Responsive Wiki on GitHub.', false);\r\n    DrawImageResize('Icons/Introduction.png', 1510, 740, 60, 60);\r\n    DrawTextFit('Wiki', 1580, 770, 320, 'Black');\r\n\r\n    DrawButton(1500, 830, 405, 80, '', '#49225C');\r\n    DrawImageResize('Assets/Female3DCG/Emoticon/Coffee/Icon.png', 1510, 840, 60, 60);\r\n    DrawTextFit('Support Me\u2764', 1580, 870, 320, 'Black');\r\n\r\n    GuiSubscreen.START_X = tmp;\r\n    MainCanvas.textAlign = prev;\r\n  }\r\n\r\n  Click() {\r\n    if (MouseIn(1815, 75, 90, 90)) return this.Exit();\r\n\r\n    let tmp = GuiSubscreen.START_X;\r\n    GuiSubscreen.START_X = 550;\r\n    let i = 0;\r\n    for (const screen of this.subscreens) {\r\n      const PX = Math.floor(i / 6);\r\n      const PY = i % 6;\r\n\r\n      if (screen.name == 'mainmenu') continue;\r\n\r\n      if (MouseIn(GuiSubscreen.START_X + 430 * PX, 190 + 120 * PY, 450, 90)) {\r\n        this.setSubscreen(screen);\r\n        return;\r\n      }\r\n\r\n      i++;\r\n    }\r\n    GuiSubscreen.START_X = tmp;\r\n\r\n    if (MouseIn(1500, 630, 405, 80)) this.setSubscreen(new GuiReset());\r\n    if (MouseIn(1500, 730, 400, 80)) window.open('https://github.com/dDeepLb/BC-Responsive/wiki/', '_blank');\r\n    if (MouseIn(1500, 830, 400, 80)) this.setSubscreen(new GuiSupport());\r\n  }\r\n\r\n  Exit(): void {\r\n    CharacterAppearanceForceUpCharacter = -1;\r\n    CharacterLoadCanvas(Player);\r\n    this.setSubscreen(null);\r\n  }\r\n}\r\n", "import { BaseModule } from \"./BaseModule\";\r\nimport { DebugMode } from \"../Utilities/Definition\";\r\nimport { modules } from \"./Modules\";\r\nimport { RibbonMenu } from \"../Utilities/RibbonMenu\";\r\nimport { hookFunction, HookPriority } from \"../Utilities/SDK\";\r\nimport { getText } from \"../Translation\";\r\nimport { MainMenu } from \"../Screens/MainMenu\";\r\nimport { GuiSubscreen } from \"./BaseSetting\";\r\nimport { setSubscreen, SETTING_NAME_PREFIX } from \"./SettingDefinitions\";\r\n\r\nexport class GUI extends BaseModule {\r\n  static instance: GUI | null = null;\r\n\r\n  private _subscreens: GuiSubscreen[];\r\n  private _mainMenu: MainMenu;\r\n  private _currentSubscreen: GuiSubscreen | null = null;\r\n\r\n  get subscreens(): GuiSubscreen[] {\r\n    return this._subscreens;\r\n  }\r\n\r\n  get mainMenu(): MainMenu {\r\n    return this._mainMenu;\r\n  }\r\n\r\n  get currentSubscreen(): GuiSubscreen | null {\r\n    return this._currentSubscreen;\r\n  }\r\n\r\n  set currentSubscreen(subscreen: GuiSubscreen | string | null) {\r\n    if (this._currentSubscreen) {\r\n      this._currentSubscreen.Unload();\r\n    }\r\n    if (typeof subscreen === \"string\") {\r\n      const scr = this._subscreens?.find((s) => s.name === subscreen);\r\n      if (!scr) throw `Failed to find screen name ${subscreen}`;\r\n      this._currentSubscreen = scr;\r\n    } else {\r\n      this._currentSubscreen = subscreen;\r\n    }\r\n\r\n    PreferenceMessage = \"\";\r\n    PreferencePageCurrent = 1;\r\n\r\n    let subscreenName = \"\";\r\n    if (this._currentSubscreen) {\r\n      subscreenName = SETTING_NAME_PREFIX + this._currentSubscreen?.name;\r\n      this._currentSubscreen.Load();\r\n    }\r\n\r\n    // Get BC to render the new screen\r\n    PreferenceSubscreen = subscreenName as PreferenceSubscreenName;\r\n  }\r\n\r\n  get currentCharacter(): Character {\r\n    return Player;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    if (GUI.instance) {\r\n      throw new Error(\"Duplicate initialization\");\r\n    }\r\n\r\n    this._mainMenu = new MainMenu(this);\r\n    this._subscreens = [this._mainMenu];\r\n\r\n    GUI.instance = this;\r\n  }\r\n\r\n  get defaultSettings(): null {\r\n    return null;\r\n  }\r\n\r\n  Load(): void {\r\n    // At that point all other modules have been initialized, build the list of their screens\r\n    for (const module of modules()) {\r\n      if (!module.settingsScreen) continue;\r\n\r\n      this._subscreens.push(new module.settingsScreen(module));\r\n    }\r\n\r\n    this._mainMenu.subscreens = this._subscreens;\r\n\r\n    let modIndex = RibbonMenu.getModIndex(\"Responsive\");\r\n\r\n    hookFunction(\"PreferenceRun\", HookPriority.OverrideBehavior, (args, next) => {\r\n      if (this._currentSubscreen) {\r\n        MainCanvas.textAlign = \"left\";\r\n        this._currentSubscreen.Run();\r\n        MainCanvas.textAlign = \"center\";\r\n\r\n        this.drawDebug();\r\n\r\n        return;\r\n      }\r\n\r\n      next(args);\r\n\r\n      RibbonMenu.drawModButton(modIndex, (modIndex) => {\r\n        DrawButton(1815, RibbonMenu.getYPos(modIndex), 90, 90, \"\", \"White\", \"Icons/Arousal.png\", getText(\"infosheet.button.responsive_popup\"));\r\n      });\r\n    });\r\n\r\n    hookFunction(\"PreferenceClick\", HookPriority.OverrideBehavior, (args, next) => {\r\n      if (this._currentSubscreen) {\r\n        this._currentSubscreen.Click();\r\n        return;\r\n      }\r\n\r\n      next(args);\r\n\r\n      RibbonMenu.handleModClick(modIndex, (modIndex) => {\r\n        setSubscreen(new MainMenu(this));\r\n      });\r\n    });\r\n\r\n    hookFunction(\"InformationSheetExit\", HookPriority.OverrideBehavior, (args, next) => {\r\n      if (this._currentSubscreen) {\r\n        this._currentSubscreen.Exit();\r\n        return;\r\n      }\r\n      return next(args);\r\n    });\r\n  }\r\n\r\n  drawDebug() {\r\n    if (DebugMode) {\r\n      if (MouseX > 0 || MouseY > 0) {\r\n        MainCanvas.save();\r\n        MainCanvas.lineWidth = 1;\r\n        MainCanvas.strokeStyle = \"red\";\r\n        MainCanvas.beginPath();\r\n        MainCanvas.moveTo(0, MouseY);\r\n        MainCanvas.lineTo(2000, MouseY);\r\n        MainCanvas.moveTo(MouseX, 0);\r\n        MainCanvas.lineTo(MouseX, 1000);\r\n        MainCanvas.stroke();\r\n        MainCanvas.fillStyle = \"black\";\r\n        MainCanvas.strokeStyle = \"white\";\r\n        MainCanvas.fillRect(0, 950, 250, 50);\r\n        MainCanvas.strokeRect(0, 950, 250, 50);\r\n        DrawText(`X: ${MouseX} Y: ${MouseY}`, 125, 975, \"white\");\r\n        MainCanvas.restore();\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { Setting } from \"../../.types/setting\";\r\nimport { GuiSubscreen } from \"../Base/BaseSetting\";\r\nimport { GlobalSettingsModel } from \"../Models/Base\";\r\n\r\nexport class GuiGlobal extends GuiSubscreen {\r\n  get name(): string {\r\n    return \"settings\";\r\n  }\r\n\r\n  get icon(): string {\r\n    return \"Icons/Preference.png\";\r\n  }\r\n\r\n  get settings(): GlobalSettingsModel {\r\n    return super.settings as GlobalSettingsModel;\r\n  }\r\n\r\n  get structure(): Setting[] {\r\n    return [\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.responsive_enabled.name\",\r\n        description: \"settings.setting.responsive_enabled.desc\",\r\n        setting: () => this.settings?.ResponsiveEnabled ?? true,\r\n        setSetting: (val) => (this.settings.ResponsiveEnabled = val)\r\n      },\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.responsesEnabled.name\",\r\n        description: \"settings.setting.responsesEnabled.desc\",\r\n        setting: () => this.settings?.responsesEnabled ?? true,\r\n        setSetting: (val) => (this.settings.responsesEnabled = val)\r\n      },\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.chartalk_enabled.name\",\r\n        description: \"settings.setting.chartalk_enabled.desc\",\r\n        setting: () => this.settings?.CharTalkEnabled ?? true,\r\n        setSetting: (val) => (this.settings.CharTalkEnabled = val)\r\n      },\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.interruption_enabled.name\",\r\n        description: \"settings.setting.interruption_enabled.desc\",\r\n        setting: () => this.settings?.doMessageInterruption ?? true,\r\n        setSetting: (val) => (this.settings.doMessageInterruption = val)\r\n      },\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.leave_message_enabled.name\",\r\n        description: \"settings.setting.leave_message_enabled.desc\",\r\n        setting: () => this.settings?.doLeaveMessage ?? true,\r\n        setSetting: (val) => (this.settings.doLeaveMessage = val)\r\n      },\r\n      /* <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.doAddMoansOnHighArousal.name\",\r\n        description: \"settings.setting.doAddMoansOnHighArousal.desc\",\r\n        setting: () => this.settings?.doAddMoansOnHighArousal ?? true,\r\n        setSetting: (val) => (this.settings.doAddMoansOnHighArousal = val)\r\n      }, */\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.doPreventMessageIfBcxBlock.name\",\r\n        description: \"settings.setting.doPreventMessageIfBcxBlock.desc\",\r\n        setting: () => this.settings?.doPreventMessageIfBcxBlock ?? false,\r\n        setSetting: (val) => (this.settings.doPreventMessageIfBcxBlock = val)\r\n      },\r\n      <Setting>{\r\n        type: \"checkbox\",\r\n        label: \"settings.setting.new_version_message_enabled.name\",\r\n        description: \"settings.setting.new_version_message_enabled.desc\",\r\n        setting: () => this.settings?.doShowNewVersionMessage ?? true,\r\n        setSetting: (val) => (this.settings.doShowNewVersionMessage = val)\r\n      }\r\n    ];\r\n  }\r\n\r\n  Load(): void {\r\n    super.Load();\r\n  }\r\n}\r\n", "import { BaseModule } from \"../Base/BaseModule\";\r\nimport { Subscreen } from \"../Base/SettingDefinitions\";\r\nimport { GlobalSettingsModel } from \"../Models/Base\";\r\nimport { GuiGlobal } from \"../Screens/Global\";\r\n\r\nexport class GlobalModule extends BaseModule {\r\n  get settingsScreen(): Subscreen | null {\r\n    return GuiGlobal;\r\n  }\r\n\r\n  get settings(): GlobalSettingsModel {\r\n    return super.settings as GlobalSettingsModel;\r\n  }\r\n\r\n  get defaultSettings() {\r\n    return <GlobalSettingsModel>{\r\n      ResponsiveEnabled: true,\r\n      responsesEnabled: true,\r\n      CharTalkEnabled: true,\r\n      doShowNewVersionMessage: true,\r\n      doLeaveMessage: true,\r\n      //doAddMoansOnHighArousal: true,\r\n      doPreventMessageIfBcxBlock: false,\r\n      doMessageInterruption: true\r\n    };\r\n  }\r\n\r\n  Load(): void { }\r\n\r\n  Run(): void { }\r\n}\r\n", "import { GuiSubscreen } from \"../Base/BaseSetting\";\r\nimport { ProfileEntryModel, ProfileNames, ProfileSaveModel, ProfilesSettingsModel } from \"../Models/Profiles\";\r\nimport { conWarn } from \"../Utilities/Console\";\r\nimport { getText } from \"../Translation\";\r\nimport { PlayerStorage } from \"../Utilities/Data\";\r\n\r\nexport class GuiProfiles extends GuiSubscreen {\r\n  private PreferenceText = \"\";\r\n  private ProfileNames: ProfileNames = [\"\", \"\", \"\"];\r\n\r\n  get name(): string {\r\n    return \"profiles\";\r\n  }\r\n\r\n  get icon(): string {\r\n    return \"Icons/Title.png\";\r\n  }\r\n\r\n  get settings(): ProfilesSettingsModel {\r\n    return super.settings as ProfilesSettingsModel;\r\n  }\r\n\r\n  tmpGlbl = GuiSubscreen.START_X;\r\n\r\n  Load() {\r\n    super.Load();\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      let profileIndex = i + 1;\r\n      if (!PlayerStorage()?.ProfilesModule?.[profileIndex]) {\r\n        PlayerStorage().ProfilesModule[profileIndex] = {\r\n          data: <ProfileSaveModel>{},\r\n          name: \"\"\r\n        };\r\n      }\r\n      this.ProfileNames[i] = PlayerStorage()?.ProfilesModule?.[profileIndex]?.name ?? \"\";\r\n    }\r\n\r\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\r\n  }\r\n\r\n  Run() {\r\n    let prev = MainCanvas.textAlign;\r\n    super.Run();\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      let profileIndex = i + 1;\r\n\r\n      if (this.ProfileNames[i] === \"\")\r\n        DrawText(getText(\"profiles.text.profile\") + ` ${profileIndex}`, this.getXPos(profileIndex), this.getYPos(profileIndex), \"Black\", \"Gray\");\r\n      if (this.ProfileNames[i] !== \"\")\r\n        DrawText(this.ProfileNames[i] as string, this.getXPos(profileIndex), this.getYPos(profileIndex), \"Black\", \"Gray\");\r\n\r\n      this.drawButton(\"profiles.button.save\", \"white\", profileIndex, 250);\r\n      this.drawButton(\"profiles.button.load\", \"white\", profileIndex, 500);\r\n      this.drawButton(\"profiles.button.delete\", \"IndianRed\", profileIndex, 750);\r\n    }\r\n\r\n    if (this.PreferenceText)\r\n      DrawText(this.PreferenceText, GuiSubscreen.START_X + 250, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, \"Black\", \"Gray\");\r\n\r\n    MainCanvas.textAlign = prev;\r\n  }\r\n\r\n  Click() {\r\n    super.Click();\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      let profileIndex = i + 1;\r\n\r\n      this.handleProfilesSaving(profileIndex);\r\n      this.handleProfilesLoading(profileIndex);\r\n      this.handleProfilesDeleting(profileIndex);\r\n    }\r\n  }\r\n\r\n  Exit() {\r\n    CharacterAppearanceForceUpCharacter = -1;\r\n    CharacterLoadCanvas(Player);\r\n    this.PreferenceText = \"\";\r\n    super.Exit();\r\n  }\r\n\r\n  saveProfile(profileId: number, profileName: string) {\r\n    if (profileId < 1 || profileId > 3) {\r\n      conWarn(`Invalid profile id ${profileId}`);\r\n      return false;\r\n    }\r\n\r\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\r\n      PlayerStorage().ProfilesModule[profileId] = <ProfileEntryModel>{};\r\n    }\r\n\r\n    let saveData: ProfileSaveModel = {\r\n      GlobalModule: PlayerStorage().GlobalModule,\r\n      ResponsesModule: PlayerStorage().ResponsesModule\r\n    };\r\n\r\n    PlayerStorage().ProfilesModule[profileId] = {\r\n      name: profileName,\r\n      data: saveData\r\n    };\r\n\r\n    return true;\r\n  }\r\n\r\n  loadProfile(profileId: number) {\r\n    if (profileId < 1 || profileId > 3) {\r\n      conWarn(`Invalid profile id ${profileId}`);\r\n      return false;\r\n    }\r\n\r\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\r\n      return false;\r\n    }\r\n\r\n    let data = PlayerStorage().ProfilesModule[profileId].data;\r\n    if (!data) {\r\n      return false;\r\n    }\r\n\r\n    if (data) {\r\n      PlayerStorage().GlobalModule = data.GlobalModule;\r\n      PlayerStorage().ResponsesModule = data.ResponsesModule;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  deleteProfile(profileId: number) {\r\n    if (profileId < 1 || profileId > 3) {\r\n      conWarn(`Invalid profile id ${profileId}`);\r\n      return false;\r\n    }\r\n\r\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\r\n      return false;\r\n    }\r\n\r\n    if (Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\r\n      PlayerStorage().ProfilesModule[profileId] = <ProfileEntryModel>{};\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleProfilesSaving(profileIndex: number) {\r\n    let formerIndex = profileIndex - 1;\r\n    if (MouseIn(this.getXPos(profileIndex) + 250, this.getYPos(profileIndex) - 32, 200, 64)) {\r\n      let promptedName = prompt(getText(\"profiles.prompt\"));\r\n\r\n      if (promptedName === null) return;\r\n      this.ProfileNames[formerIndex] = promptedName;\r\n      if (this.ProfileNames[formerIndex] === \"\") {\r\n        this.saveProfile(profileIndex, \"\");\r\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.has_been_saved\")}`;\r\n      }\r\n      if (this.ProfileNames[formerIndex] !== \"\") {\r\n        this.saveProfile(profileIndex, this.ProfileNames[formerIndex] as string);\r\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} \"${this.ProfileNames[formerIndex]}\" ${getText(\r\n          \"profiles.text.has_been_saved\"\r\n        )}`;\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleProfilesLoading(profileIndex: number) {\r\n    let formerIndex = profileIndex - 1;\r\n    if (MouseIn(this.getXPos(profileIndex) + 500, this.getYPos(profileIndex) - 32, 200, 64)) {\r\n      if (!this.loadProfile(profileIndex)) {\r\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.needs_to_be_saved\")}`;\r\n        return;\r\n      }\r\n      if (this.ProfileNames[formerIndex] === \"\")\r\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.has_been_loaded\")}`;\r\n      if (this.ProfileNames[formerIndex] !== \"\")\r\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} \"${this.ProfileNames[formerIndex]}\" ${getText(\r\n          \"profiles.text.has_been_loaded\"\r\n        )}`;\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleProfilesDeleting(profileIndex: number) {\r\n    let formerIndex = profileIndex - 1;\r\n    if (MouseIn(this.getXPos(profileIndex) + 750, this.getYPos(profileIndex) - 32, 200, 64)) {\r\n      if (this.ProfileNames[formerIndex] === null) return;\r\n\r\n      if (this.deleteProfile(profileIndex)) {\r\n        if (this.ProfileNames[formerIndex] === \"\") {\r\n          this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.has_been_deleted\")}`;\r\n          return;\r\n        }\r\n        if (this.ProfileNames[formerIndex] !== \"\") {\r\n          this.PreferenceText = `${getText(\"profiles.text.profile\")} \"${this.ProfileNames[formerIndex]}\" ${getText(\r\n            \"profiles.text.has_been_deleted\"\r\n          )}`;\r\n          this.ProfileNames[formerIndex] = \"\";\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (!this.deleteProfile(profileIndex)) {\r\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.not_saved_or_already_deleted\")}`;\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n  }\r\n}\r\n", "import { BaseModule } from \"../Base/BaseModule\";\r\nimport { Subscreen } from \"../Base/SettingDefinitions\";\r\nimport { ProfilesSettingsModel } from \"../Models/Profiles\";\r\nimport { GuiProfiles } from \"../Screens/Profiles\";\r\n\r\nexport class ProfilesModule extends BaseModule {\r\n  get settings(): ProfilesSettingsModel {\r\n    return super.settings as ProfilesSettingsModel;\r\n  }\r\n\r\n  get settingsScreen(): Subscreen | null {\r\n    return GuiProfiles;\r\n  }\r\n\r\n  get defaultSettings() {\r\n    return <ProfilesSettingsModel>{};\r\n  }\r\n\r\n  Load(): void {}\r\n\r\n  Run(): void {}\r\n}\r\n", "import { ExtraResponsesModel, ResponsesEntryModel } from \"../Models/Responses\";\r\nimport { PlayerStorage } from \"./Data\";\r\nimport { getCharacter, getRandomInt } from \"./Other\";\r\n\r\nexport function activityDeconstruct(dict: _ChatMessageDictionary): ActivityInfo | undefined {\r\n  let SourceCharacter, TargetCharacter, ActivityGroup, ActivityName;\r\n  for (let v of dict) {\r\n    if (v.TargetCharacter) TargetCharacter = { MemberNumber: v.TargetCharacter };\r\n    else if (v.SourceCharacter) SourceCharacter = { MemberNumber: v.SourceCharacter };\r\n    else if (v.FocusGroupName) ActivityGroup = v.FocusGroupName;\r\n    else if (v.ActivityName) ActivityName = v.ActivityName;\r\n  }\r\n  if (SourceCharacter === undefined || TargetCharacter === undefined || ActivityGroup === undefined || ActivityName === undefined)\r\n    return undefined;\r\n  return { SourceCharacter, TargetCharacter, ActivityGroup, ActivityName };\r\n}\r\n\r\nexport function isSimpleChat(msg: string) {\r\n  return (\r\n    msg.trim().length > 0 &&\r\n    ChatRoomTargetMemberNumber == -1 &&\r\n    !msg.startsWith(\"/\") &&\r\n    !msg.startsWith(\"(\") &&\r\n    !msg.startsWith(\"*\") &&\r\n    !msg.startsWith(\"!\") &&\r\n    !msg.startsWith(\".\") &&\r\n    !msg.startsWith(\"@\") &&\r\n    !msg.startsWith(\"http\")\r\n  );\r\n}\r\n\r\nexport function chatRoomAutoInterceptMessage(cur_msg: string, msg?: string, source?: Character) {\r\n  if (!msg) return;\r\n\r\n  const data = PlayerStorage().GlobalModule;\r\n  if (data.doMessageInterruption && isSimpleChat(cur_msg)) {\r\n    return chatRoomInterceptMessage(cur_msg, msg);\r\n  }\r\n\r\n  return chatRoomNormalMessage(msg);\r\n}\r\n\r\nexport function orgasmMessage() {\r\n  chatRoomAutoInterceptMessage(ElementValue(\"InputChat\"), typedMoan(\"orgasm\"), Player);\r\n}\r\n\r\nexport function leaveMessage() {\r\n  if (isSimpleChat(ElementValue(\"InputChat\"))) chatRoomAutoInterceptMessage(ElementValue(\"InputChat\"), \" \");\r\n}\r\n\r\nexport function activityMessage(dict: ActivityInfo, entry: ResponsesEntryModel | undefined) {\r\n  const source = getCharacter(dict.SourceCharacter.MemberNumber);\r\n  const response = typedResponse(entry?.responses);\r\n\r\n  if (response.trim()[0] == \"@\") {\r\n    return sendAction(response.slice(1), source);\r\n  }\r\n\r\n  const finalMessage = response/*  + moanDependingOnActivity(Player, entry?.responses, dict.ActivityName) */;\r\n\r\n  chatRoomAutoInterceptMessage(ElementValue(\"InputChat\"), finalMessage, source);\r\n}\r\n\r\nexport function sendAction(action: string, sender: Character | null = null) {\r\n  let msg = replaceTemplate(action, sender);\r\n  ServerSend(\"ChatRoomChat\", {\r\n    Content: \"Beep\",\r\n    Type: \"Action\",\r\n    Dictionary: [\r\n      { Tag: 'Beep', Text: 'msg' },\r\n      { Tag: '\u53D1\u9001\u79C1\u804A', Text: 'msg' },\r\n      { Tag: '\u767C\u9001\u79C1\u804A', Text: 'msg' },\r\n      { Tag: 'Biep', Text: 'msg' },\r\n      { Tag: 'Sonner', Text: 'msg' },\r\n      { Tag: '\u0417\u0432\u0443\u043A\u043E\u0432\u043E\u0439 \u0441\u0438\u0433\u043D\u0430\u043B', Text: 'msg' },\r\n      { Tag: \"msg\", Text: msg }\r\n    ]\r\n  });\r\n}\r\n\r\nfunction chatRoomInterceptMessage(cur_msg: string, msg: string) {\r\n  if (!msg) return;\r\n  ElementValue(\"InputChat\", cur_msg + \"... \" + msg);\r\n  ChatRoomSendChat();\r\n}\r\n\r\nfunction chatRoomNormalMessage(msg: string) {\r\n  if (!msg) return;\r\n\r\n  let backupChatRoomTargetMemberNumber = ChatRoomTargetMemberNumber;\r\n  ChatRoomSetTarget(-1);\r\n  let oldmsg = ElementValue(\"InputChat\");\r\n\r\n  ElementValue(\"InputChat\", msg);\r\n  ChatRoomSendChat();\r\n  ElementValue(\"InputChat\", oldmsg);\r\n  ChatRoomSetTarget(backupChatRoomTargetMemberNumber);\r\n}\r\n\r\nfunction replaceTemplate(msg: string, source?: Character) {\r\n  const playerPronouns = CharacterPronounDescription(Player);\r\n  const playerName = CharacterNickname(Player);\r\n\r\n  const playerPronoun = playerPronouns === \"She/Her\" ? \"she\" : \"he\";\r\n  const playerPossessive = playerPronouns === \"She/Her\" ? \"her\" : \"his\";\r\n  const playerIntensive = playerPronouns === \"She/Her\" ? \"her\" : \"him\";\r\n\r\n  const sourcePronounItem = CharacterPronounDescription(source);\r\n  const sourceName = CharacterNickname(source);\r\n\r\n  const sourcePronoun = sourcePronounItem === \"She/Her\" ? \"she\" : \"he\";\r\n  const sourcePossessive = sourcePronounItem === \"She/Her\" ? \"her\" : \"his\";\r\n  const sourceIntensive =\r\n    sourceName === playerName ? (playerPronouns === \"She/Her\" ? \"herself\" : \"himself\") : sourcePronounItem === \"She/Her\" ? \"her\" : \"him\";\r\n\r\n  return msg\r\n    .replaceAll(/%TARGET%|Player/g, playerName)\r\n    .replaceAll(/%TARGET_PRONOUN%|Pronoun/g, playerPronoun)\r\n    .replaceAll(/%TARGET_POSSESIVE%|Possessive/g, playerPossessive)\r\n    .replaceAll(/%TARGET_INTENSIVE%|Intensive/g, playerIntensive)\r\n    .replaceAll(/%SOURCE%|Source/g, sourceName)\r\n    .replaceAll(/%SOURCE_PRONOUN%|SourcePronoun/g, sourcePronoun)\r\n    .replaceAll(/%SOURCE_POSSESIVE%|SourcePossessive/g, sourcePossessive)\r\n    .replaceAll(/%SOURCE_INTENSIVE%|SourceIntensive/g, sourceIntensive);\r\n}\r\n\r\nfunction randomResponse(key: string[]) {\r\n  const rnd = getRandomInt(key.length);\r\n\r\n  return key[rnd] as string;\r\n}\r\n\r\nfunction typedMoan(moanType: \"low\" | \"light\" | \"medium\" | \"hot\" | \"orgasm\") {\r\n  return randomResponse(PlayerStorage().ResponsesModule.extraResponses[moanType]);\r\n}\r\n\r\nfunction baseMoan(arousal: number | undefined) {\r\n  if (!arousal) return \"\";\r\n  let factor = Math.floor(arousal / 20);\r\n  if (factor < 1) return \"\"; // skip wnen arousal is >=0 && < 20. too low as for me.\r\n  if (factor > 4) return \"\"; // Skip when arousal is 100, cause that's orgasm\r\n  const Tkeys: (keyof ExtraResponsesModel)[] = [\"low\", \"low\", \"light\", \"medium\", \"hot\", \"hot\"];\r\n  let k = Tkeys[factor];\r\n\r\n  return typedMoan(k);\r\n}\r\n\r\nfunction typedResponse(responses: string[]) {\r\n  return randomResponse(responses);\r\n}\r\n\r\n/* function moanDependingOnActivity(C: Character, responses: string[] | undefined, act: string | undefined) {\r\n  if (!C?.ArousalSettings) return;\r\n  if (!responses) return;\r\n\r\n  const doAddMoans = PlayerStorage().GlobalModule.doAddMoansOnHighArousal;\r\n  if (!doAddMoans) return \"\";\r\n\r\n  let actFactor = C.ArousalSettings.Activity.find((_) => _.Name === act)?.Self;\r\n  if (!actFactor) return \"\";\r\n\r\n  let threthold1 = Math.max(10, (4 - actFactor) * 25);\r\n  let threthold2 = threthold1 + 40;\r\n  let arousal = C.ArousalSettings.Progress;\r\n\r\n  if (arousal <= threthold1) {\r\n    return \"\";\r\n  } else {\r\n    if (!baseMoan(arousal)) return \"\";\r\n    else {\r\n      return \"\u2665\" + baseMoan(arousal) + \"\u2665\";\r\n    }\r\n  }\r\n} */\r\n", "import { ResponsesEntryModel } from \"../Models/Responses\";\r\nimport { ResponsesModule } from \"../Modules/Responses\";\r\nimport { activityMessage, leaveMessage, orgasmMessage } from \"./ChatMessages\";\r\nimport { PlayerStorage } from \"./Data\";\r\nimport { ModName } from \"./Definition\";\r\n\r\nconst doesBcxAllowsTalking = () => {\r\n  const isRuleWorking = (ruleName: string) => {\r\n    const rule = window.bcx.getModApi(ModName).getRuleState(ruleName);\r\n\r\n    switch (ruleName) {\r\n      case \"speech_forbid_open_talking\":\r\n        return rule.inEffect && rule.isEnforced;\r\n      case \"speech_limit_open_talking\":\r\n        return rule.inEffect && rule.isEnforced;\r\n      case \"speech_specific_sound\":\r\n        return rule.inEffect && rule.isEnforced && rule.customData.soundWhitelist;\r\n      case \"speech_mandatory_words\":\r\n        return rule.inEffect && rule.isEnforced && rule.customData.mandatoryWords;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (\r\n    PlayerStorage().GlobalModule.doPreventMessageIfBcxBlock &&\r\n    (isRuleWorking(\"speech_forbid_open_talking\") ||\r\n      isRuleWorking(\"speech_limit_open_talking\") ||\r\n      isRuleWorking(\"speech_specific_sound\") ||\r\n      isRuleWorking(\"speech_mandatory_words\"))\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const orgasmHandle = (c: Character) => {\r\n  if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\r\n  if (!PlayerStorage().GlobalModule.responsesEnabled) return;\r\n  if (CurrentScreen !== \"ChatRoom\" || !Player) return;\r\n  if (Player.MemberNumber !== c.MemberNumber) return;\r\n  if (!PlayerStorage().ResponsesModule.extraResponses.orgasm) return;\r\n  if (ActivityOrgasmRuined) return;\r\n  if (window.bcx && !doesBcxAllowsTalking()) return;\r\n\r\n  ResponsesModule.isOrgasm = true;\r\n  orgasmMessage();\r\n};\r\n\r\nexport const activityHandle = (dict: ActivityInfo, entry: ResponsesEntryModel) => {\r\n  if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\r\n  if (!PlayerStorage().GlobalModule.responsesEnabled) return;\r\n  if (CurrentScreen !== \"ChatRoom\" || !Player) return;\r\n  if (dict.TargetCharacter.MemberNumber !== Player.MemberNumber) return;\r\n  if (!entry || !entry?.responses) return;\r\n  if (!entry.selfTrigger && dict.TargetCharacter.MemberNumber === dict.SourceCharacter.MemberNumber) return;\r\n  if (Player.GhostList.includes(dict.SourceCharacter.MemberNumber)) return;\r\n  if (window.bcx && !doesBcxAllowsTalking()) return;\r\n\r\n  activityMessage(dict, entry);\r\n};\r\n\r\nexport const leaveHandle = (data: any) => {\r\n  if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\r\n  if (!PlayerStorage().GlobalModule.doLeaveMessage) return;\r\n  if (CurrentScreen !== \"ChatRoom\" || !Player) return;\r\n  if (!(CurrentScreen == \"ChatRoom\" && ChatRoomData.Name != data.ChatRoomName)) return;\r\n  if (window.bcx && !doesBcxAllowsTalking()) return;\r\n\r\n  leaveMessage();\r\n};\r\n", "import { Setting } from \"../../.types/setting\";\r\nimport { GuiSubscreen } from \"../Base/BaseSetting\";\r\nimport { ResponsesEntryModel, ResponsesSettingsModel } from \"../Models/Responses\";\r\nimport { conDebug } from \"../Utilities/Console\";\r\nimport { getText } from \"../Translation\";\r\n\r\nexport class GuiResponses extends GuiSubscreen {\r\n  activityIndex: number = 0;\r\n  selfAllowed: boolean = false; // to not call ActivityCanBeDoneOnSelf() every draw call;\r\n  masterSet: boolean = false;\r\n  copiedEntry = <ResponsesEntryModel>{};\r\n\r\n  get name(): string {\r\n    return \"responses\";\r\n  }\r\n\r\n  get icon(): string {\r\n    return \"Icons/Chat.png\";\r\n  }\r\n\r\n  get settings(): ResponsesSettingsModel {\r\n    return super.settings as ResponsesSettingsModel;\r\n  }\r\n\r\n  get currentResponsesEntry(): ResponsesEntryModel | undefined {\r\n    let actName = this.currentAct()?.Name ?? \"\";\r\n    let groupName = this.currentGroup()?.Name ?? \"\";\r\n    let entry = this.getResponsesEntry(actName, groupName);\r\n    return entry;\r\n  }\r\n\r\n  get activities(): Activity[] {\r\n    if (!Player.FocusGroup) return [];\r\n    else\r\n      return AssetActivitiesForGroup(\"Female3DCG\", Player.FocusGroup.Name, \"any\").filter((a) =>\r\n        this.activityHasDictionaryText(this.getActivityLabelTag(a, Player.FocusGroup!))\r\n      );\r\n  }\r\n\r\n  get multipageStructure(): Setting[][] {\r\n    return [\r\n      [],\r\n      [\r\n        <Setting>{\r\n          type: \"text\",\r\n          id: \"extra_low\",\r\n          label: \"responses.setting.low_response.name\",\r\n          description: \"responses.setting.low_response.desc\",\r\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.low),\r\n          setSetting: (val) => {\r\n            this.settings.extraResponses.low = GuiResponses.validateInput(val) ?? this.settings.extraResponses.low;\r\n          }\r\n        },\r\n        <Setting>{\r\n          type: \"text\",\r\n          id: \"extra_light\",\r\n          label: \"responses.setting.light_response.name\",\r\n          description: \"responses.setting.light_response.desc\",\r\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.light),\r\n          setSetting: (val) => {\r\n            this.settings.extraResponses.light = GuiResponses.validateInput(val) ?? this.settings.extraResponses.light;\r\n          }\r\n        },\r\n        <Setting>{\r\n          type: \"text\",\r\n          id: \"extra_medium\",\r\n          label: \"responses.setting.medium_response.name\",\r\n          description: \"responses.setting.medium_response.desc\",\r\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.medium),\r\n          setSetting: (val) => {\r\n            this.settings.extraResponses.medium = GuiResponses.validateInput(val) ?? this.settings.extraResponses.medium;\r\n          }\r\n        },\r\n        <Setting>{\r\n          type: \"text\",\r\n          id: \"extra_hot\",\r\n          label: \"responses.setting.hot_response.name\",\r\n          description: \"responses.setting.hot_response.desc\",\r\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.hot),\r\n          setSetting: (val) => {\r\n            this.settings.extraResponses.hot = GuiResponses.validateInput(val) ?? this.settings.extraResponses.hot;\r\n          }\r\n        },\r\n        <Setting>{\r\n          type: \"text\",\r\n          id: \"extra_orgasm\",\r\n          label: \"responses.setting.orgasm_response.name\",\r\n          description: \"responses.setting.orgasm_response.desc\",\r\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.orgasm),\r\n          setSetting: (val) => {\r\n            this.settings.extraResponses.orgasm = GuiResponses.validateInput(val) ?? this.settings.extraResponses.orgasm;\r\n          }\r\n        }\r\n      ]\r\n    ];\r\n  }\r\n\r\n  static validateInput = (input: string) => {\r\n    let raw = `[${input}]`;\r\n\r\n    const validateStringList = (input: any) => {\r\n      if (!Array.isArray(input)) return undefined;\r\n      if (!(input as any[]).every((_) => typeof _ === \"string\")) return undefined;\r\n      return input as string[];\r\n    };\r\n\r\n    try {\r\n      let data = JSON.parse(raw);\r\n      return validateStringList(data);\r\n    } catch (e) {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  static stringListShow = (input: string[]) => {\r\n    if (!input || input.length === 0) return \"\";\r\n    let result = JSON.stringify(input);\r\n    return result.substring(1, result.length - 1);\r\n  };\r\n\r\n  static activityCanBeDoneOnSelf(activity: ActivityName, group: AssetGroupItemName): boolean {\r\n    const foundActivity = AssetAllActivities(Player.AssetFamily).find((act) => act.Name === activity);\r\n\r\n    return foundActivity?.TargetSelf\r\n      ? (typeof foundActivity.TargetSelf === \"boolean\" ? foundActivity.Target : foundActivity.TargetSelf).includes(group)\r\n      : false;\r\n  }\r\n\r\n  Load() {\r\n    if (!this.settings) conDebug(`Loading Responses GUI`);\r\n    super.Load();\r\n    ElementCreateTextArea(\"mainResponses\");\r\n\r\n    this.elementHide(\"mainResponses\");\r\n\r\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\r\n  }\r\n\r\n  Run() {\r\n    let prev = MainCanvas.textAlign;\r\n\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    super.Run();\r\n\r\n    if (PreferencePageCurrent == 1) {\r\n      // Draws all the available character zones\r\n      for (let Group of AssetGroup) {\r\n        if (Group.IsItem() && !Group.MirrorActivitiesFrom && AssetActivitiesForGroup(\"Female3DCG\", Group.Name).length)\r\n          DrawAssetGroupZone(Player, Group.Zone, 0.9, 50, 50, 1, \"#808080FF\", 3, this.getZoneColor(Group.Name));\r\n      }\r\n\r\n      if (Player.FocusGroup != null) {\r\n        let activity = this.activities[this.activityIndex ?? 0];\r\n        DrawAssetGroupZone(Player, Player.FocusGroup.Zone, 0.9, 50, 50, 1, \"cyan\");\r\n        MainCanvas.textAlign = \"center\";\r\n        DrawBackNextButton(\r\n          550,\r\n          this.getYPos(0),\r\n          600,\r\n          64,\r\n          this.getActivityLabel(activity, Player.FocusGroup),\r\n          \"White\",\r\n          \"\",\r\n          () => \"\",\r\n          () => \"\"\r\n        );\r\n        MainCanvas.textAlign = \"left\";\r\n        if (!!activity) {\r\n          let image = \"Assets/\" + Player.AssetFamily + \"/Activity/\" + activity.Name + \".png\";\r\n          if (activity.Name.indexOf(\"Item\") > -1) {\r\n            image = \"Icons/Dress.png\";\r\n          }\r\n          DrawImageResize(image, 1170, this.getYPos(0) - 28, 120, 120);\r\n          DrawEmptyRect(1170, this.getYPos(0) - 28, 120, 120, \"Black\", 2);\r\n          this.drawActivityOptions();\r\n        }\r\n      } else {\r\n        DrawText(getText(\"responses.text.select_zone\"), this.getXPos(0), this.getYPos(0), \"Black\", \"White\");\r\n      }\r\n    }\r\n\r\n    if (PreferencePageCurrent == 2) this.elementHide(\"mainResponses\");\r\n    MainCanvas.textAlign = prev;\r\n  }\r\n\r\n  Click() {\r\n    let tmp = GuiSubscreen.START_X;\r\n    GuiSubscreen.START_X = 550;\r\n    super.Click();\r\n\r\n    if (PreferencePageCurrent == 1) {\r\n      for (const Group of AssetGroup) {\r\n        if (Group.IsItem() && !Group.MirrorActivitiesFrom && AssetActivitiesForGroup(\"Female3DCG\", Group.Name).length) {\r\n          const Zone = Group.Zone.find((z) => DialogClickedInZone(Player, z, 0.9, 50, 50, 1));\r\n          if (Zone) {\r\n            // If we have selected group, first save data for it.\r\n            if (Player.FocusGroup) this.saveResponseEntry(this.currentResponsesEntry);\r\n            // If we clicked on selected group, we deselect it.\r\n            if (Player.FocusGroup === Group) return this.deselectEntry();\r\n            Player.FocusGroup = Group;\r\n            let activities = this.activities;\r\n            if (this.activityIndex >= activities.length) this.activityIndex = 0;\r\n            this.loadResponseEntry(this.currentResponsesEntry);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (Player.FocusGroup != null) {\r\n        let activities = this.activities;\r\n        // Arousal activity control\r\n        if (MouseIn(this.getXPos(0), this.getYPos(0), 600, 64)) {\r\n          this.saveResponseEntry(this.currentResponsesEntry);\r\n          if (MouseX <= this.getXPos(0) + 300) this.activityIndex = (activities.length + this.activityIndex - 1) % activities.length;\r\n          else this.activityIndex = (this.activityIndex + 1) % activities.length;\r\n          this.loadResponseEntry(this.currentResponsesEntry);\r\n        }\r\n      }\r\n\r\n      this.handleActivityEntryClick();\r\n    }\r\n\r\n    GuiSubscreen.START_X = tmp;\r\n  }\r\n\r\n  Exit() {\r\n    this.saveResponseEntry(this.currentResponsesEntry);\r\n    ElementRemove(\"mainResponses\");\r\n\r\n    CharacterAppearanceForceUpCharacter = -1;\r\n    CharacterLoadCanvas(Player);\r\n    Player.FocusGroup = null;\r\n    super.Exit();\r\n  }\r\n\r\n  currentAct() {\r\n    return this.activities[this.activityIndex];\r\n  }\r\n\r\n  currentGroup() {\r\n    return Player.FocusGroup;\r\n  }\r\n\r\n  getZoneColor(groupName: string): string {\r\n    let hasConfiguration = this.settings?.mainResponses?.some((a) => a.groupName.includes(groupName));\r\n    return hasConfiguration ? \"#00FF0044\" : \"#80808044\";\r\n  }\r\n\r\n  getResponsesEntry(actName: string, grpName: string): ResponsesEntryModel | undefined {\r\n    return this.settings?.mainResponses?.find((a) => a.actName == actName && a.groupName.includes(grpName));\r\n  }\r\n\r\n  activityHasDictionaryText(KeyWord: string) {\r\n    if (!ActivityDictionary) ActivityDictionaryLoad();\r\n    if (!ActivityDictionary) return;\r\n\r\n    for (let D = 0; D < ActivityDictionary.length; D++) if (ActivityDictionary[D][0] == KeyWord) return true;\r\n    return false;\r\n  }\r\n\r\n  getActivityLabelTag(activity: Activity, group: AssetGroup) {\r\n    let groupName = group.Name as AssetGroupItemName;\r\n    if (Player.HasPenis()) {\r\n      if (groupName == \"ItemVulva\") groupName = \"ItemPenis\";\r\n      if (groupName == \"ItemVulvaPiercings\") groupName = \"ItemGlans\";\r\n    }\r\n\r\n    return `Label-ChatOther-${groupName}-${activity.Name}`;\r\n  }\r\n\r\n  getActivityLabel(activity: Activity, group: AssetGroup) {\r\n    if (!activity) return \"ACTIVITY NOT FOUND\";\r\n\r\n    let tag = this.getActivityLabelTag(activity, group);\r\n\r\n    return ActivityDictionaryText(tag);\r\n  }\r\n\r\n  deselectEntry() {\r\n    Player.FocusGroup = null;\r\n    this.elementHide(\"mainResponses\");\r\n  }\r\n\r\n  loadResponseEntry(entry: ResponsesEntryModel | undefined) {\r\n    this.elementSetValue(\"mainResponses\", GuiResponses.stringListShow(entry?.responses as string[]) ?? []);\r\n  }\r\n\r\n  saveResponseEntry(entry: ResponsesEntryModel | undefined) {\r\n    let responses = ElementValue(\"mainResponses\");\r\n    let merge: boolean;\r\n    let unmerge: boolean;\r\n    const validResponses = GuiResponses.validateInput(responses);\r\n\r\n    if (responses != \"\" && validResponses) {\r\n      if (!entry) entry = this.createEntryIfNeeded(entry);\r\n      if (!this.masterSet) {\r\n        merge = this.mergeEntry(entry, validResponses);\r\n        unmerge = this.unmergeEntry(entry, validResponses);\r\n      }\r\n\r\n      if (this.masterSet || !(merge || unmerge)) entry.responses = validResponses ?? entry.responses;\r\n\r\n      this.settings.mainResponses.sort((a, b) => a.actName.localeCompare(b.actName));\r\n    }\r\n  }\r\n\r\n  clearEntry(entry: ResponsesEntryModel) {\r\n    if (!entry) return;\r\n    let temp = this.settings?.mainResponses?.find((ent) => ent.actName === entry.actName && ent.groupName === entry.groupName);\r\n\r\n    if (temp?.groupName.length <= 1) {\r\n      this.settings.mainResponses = this.settings?.mainResponses.filter((a) => {\r\n        return !(a.actName == entry.actName && a.groupName == entry.groupName);\r\n      });\r\n    } else {\r\n      temp?.groupName?.splice(temp?.groupName?.indexOf(this.currentGroup()?.Name), 1);\r\n    }\r\n\r\n    this.elementSetValue(\"mainResponses\", []);\r\n  }\r\n\r\n  /**\r\n   * Get entry >\r\n   *\r\n   * find response that has same `actName`, that doesn't includes current `groupName` and responses are the same with current entry >\r\n   *\r\n   * push `groupName` to that response >\r\n   *\r\n   * clear current entry\r\n   */\r\n  mergeEntry(entry: ResponsesEntryModel, validResponses: string[]) {\r\n    // Responses we entered into Responses field\r\n    const stringifiedValidResponses = JSON.stringify(validResponses);\r\n\r\n    // Looking for entry to merge, if any\r\n    let mergingEntry = this.settings?.mainResponses?.find((ent) => {\r\n      return (\r\n        ent.actName == this.currentAct().Name && // Actions are same\r\n        !ent.groupName.includes(this.currentGroup().Name) && // Group array don't have selected group\r\n        (JSON.stringify(ent.responses) === stringifiedValidResponses || // Responses are the same\r\n          ent.selfTrigger === entry.selfTrigger) // Self trigger from current entry is same with one that we found\r\n      );\r\n    });\r\n\r\n    if (!mergingEntry) return false; // We didn't find entry that fullfils our needs. We don't need to merge\r\n\r\n    mergingEntry.groupName.push(this.currentGroup()?.Name);\r\n\r\n    const entr = this.settings?.mainResponses?.find((ent) => ent.actName === entry.actName && ent.groupName === entry.groupName);\r\n    entr?.groupName?.splice(entr?.groupName?.indexOf(this.currentGroup()?.Name), 1);\r\n\r\n    this.clearEntry(entry);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get entry >\r\n   *\r\n   * find response that has same `actName`, that includes current `groupName` and responses are not the same with current entry >\r\n   *\r\n   * remove `groupName` from that response >\r\n   *\r\n   * create new entry with this data\r\n   */\r\n  unmergeEntry(entry: ResponsesEntryModel, validResponses: string[]) {\r\n    // Responses we entered into Responses field\r\n    const stringifiedCurrentResponses = JSON.stringify(validResponses);\r\n\r\n    // Looking for entry to unmerge, if any\r\n    let unmergingEntry = this.settings?.mainResponses?.find((ent) => {\r\n      return (\r\n        ent.actName == this.currentAct().Name && // Actions are same\r\n        Array.isArray(ent.groupName) && // Group name is type of array\r\n        ent.groupName.length > 1 && // Group array has more than one entry\r\n        ent.groupName.includes(this.currentGroup().Name) && // Group array has selected group\r\n        (JSON.stringify(ent.responses) !== stringifiedCurrentResponses || // Responses are not the same\r\n          ent.selfTrigger !== entry.selfTrigger) // Self trigger from current entry not same with one that we found\r\n      );\r\n    });\r\n\r\n    if (!unmergingEntry) return false; // We didn't find entry that fullfils our needs. We don't need to unmerge\r\n\r\n    unmergingEntry.groupName.splice(unmergingEntry.groupName.indexOf(this.currentGroup()?.Name), 1);\r\n\r\n    const newEntry = this.createNewEntry(this.currentAct().Name, this.currentGroup().Name, validResponses, entry.selfTrigger);\r\n    this.settings.mainResponses.push(newEntry);\r\n\r\n    return true;\r\n  }\r\n\r\n  createNewEntry(actName: string, grpName: string, responses?: string[], selfTrigger?: boolean): ResponsesEntryModel {\r\n    return <ResponsesEntryModel>{\r\n      actName: actName,\r\n      groupName: [grpName],\r\n      responses: responses ?? [\"\"],\r\n      selfTrigger: selfTrigger ?? false\r\n    };\r\n  }\r\n\r\n  createEntryIfNeeded(existing: ResponsesEntryModel | undefined): ResponsesEntryModel {\r\n    if (!existing) {\r\n      existing = this.createNewEntry(this.currentAct()?.Name, this.currentGroup()?.Name ?? \"\");\r\n      this.settings.mainResponses.push(existing);\r\n      this.loadResponseEntry(this.currentResponsesEntry);\r\n    }\r\n\r\n    return existing;\r\n  }\r\n\r\n  copyEntry(entry: ResponsesEntryModel | undefined) {\r\n    this.copiedEntry = entry as ResponsesEntryModel;\r\n  }\r\n\r\n  pasteEntry(entry: ResponsesEntryModel | undefined) {\r\n    if (Object.keys(this.copiedEntry).length === 0) return;\r\n    if (!entry) entry = this.createEntryIfNeeded(entry);\r\n\r\n    entry.responses = this.copiedEntry.responses ?? [\"\"];\r\n    this.loadResponseEntry(entry);\r\n    if (GuiResponses.activityCanBeDoneOnSelf(this.currentAct()?.Name, this.currentGroup()?.Name))\r\n      entry.selfTrigger = this.copiedEntry.selfTrigger;\r\n  }\r\n\r\n  handleActivityEntryClick() {\r\n    let entry = this.currentResponsesEntry;\r\n    this.selfAllowed = GuiResponses.activityCanBeDoneOnSelf(this.currentAct()?.Name, this.currentGroup()?.Name);\r\n\r\n    // Clear Entry\r\n    if (!!entry && MouseIn(1310, this.getYPos(0), 64, 64)) {\r\n      this.clearEntry(entry);\r\n    }\r\n\r\n    if (MouseIn(1385, this.getYPos(0), 64, 64)) {\r\n      this.copyEntry(entry);\r\n    }\r\n\r\n    if (MouseIn(1455, this.getYPos(0), 64, 64)) {\r\n      this.pasteEntry(entry);\r\n    }\r\n\r\n    // Self Allowed Checkbox\r\n    if (MouseIn(this.getXPos(2) + 600, this.getYPos(2) - 32, 64, 64) && this.selfAllowed) {\r\n      entry = this.createEntryIfNeeded(entry);\r\n      entry.selfTrigger = !entry.selfTrigger;\r\n    }\r\n\r\n    // Master Set Checkbox\r\n    if (MouseIn(this.getXPos(8) + 600, this.getYPos(8) - 32, 64, 64)) {\r\n      this.masterSet = !this.masterSet;\r\n    }\r\n  }\r\n\r\n  drawActivityOptions() {\r\n    let activityEntry = this.currentResponsesEntry;\r\n\r\n    if (!!activityEntry) {\r\n      MainCanvas.textAlign = \"center\";\r\n      DrawButton(1310, this.getYPos(0), 64, 64, \"X\", \"White\", undefined, getText(\"responses.text.clear_entry\"));\r\n      MainCanvas.textAlign = \"left\";\r\n    }\r\n\r\n    MainCanvas.textAlign = \"center\";\r\n    DrawButton(1385, this.getYPos(0), 64, 64, \"\", \"White\", undefined, getText(\"responses.text.copy_entry\"));\r\n    DrawImageResize(\"Icons/Export.png\", 1385, this.getYPos(0), 64, 64);\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    MainCanvas.textAlign = \"center\";\r\n    DrawButton(1455, this.getYPos(0), 64, 64, \"\", \"White\", undefined, getText(\"responses.text.paste_entry\"));\r\n    DrawImageResize(\"Icons/Import.png\", 1455, this.getYPos(0), 64, 64);\r\n    MainCanvas.textAlign = \"left\";\r\n\r\n    // Self Allowed Checkbox\r\n    this.drawCheckbox(\r\n      \"responses.setting.self_trigger.name\",\r\n      \"responses.setting.self_trigger.desc\",\r\n      activityEntry?.selfTrigger ?? false,\r\n      2,\r\n      !this.selfAllowed\r\n    );\r\n\r\n    // Master Set Checkbox\r\n    this.drawCheckbox(\"responses.setting.master_set.name\", \"responses.setting.master_set.desc\", this.masterSet ?? false, 8);\r\n\r\n    this.elementPosition(\"mainResponses\", \"responses.setting.responses.name\", \"responses.setting.responses.desc\", 3, false);\r\n  }\r\n\r\n  elementSetValue(elementId: string, value: any) {\r\n    let element = document.getElementById(elementId) as HTMLInputElement;\r\n    if (!!element && value != null) element.value = value;\r\n  }\r\n\r\n  elementPosition(elementId: string, label: string, description: string, order: number, disabled: boolean = false) {\r\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\r\n    const isValid = !!GuiResponses.validateInput(ElementValue(elementId));\r\n\r\n    DrawTextFit(\r\n      isValid ? `${getText(label)}` : `${getText(label)} \u2716`,\r\n      this.getXPos(order),\r\n      this.getYPos(order),\r\n      600,\r\n      isHovering ? \"Red\" : \"Black\",\r\n      \"Gray\"\r\n    );\r\n\r\n    ElementPosition(elementId, this.getXPos(order) + 750 + 225, this.getYPos(order), 800, 64);\r\n    if (disabled) ElementSetAttribute(elementId, \"disabled\", \"true\");\r\n    if (!disabled) document.getElementById(elementId)?.removeAttribute(\"disabled\");\r\n    if (isHovering) this.tooltip(getText(description));\r\n  }\r\n}\r\n", "import { ResponsesSettingsModel } from \"../Models/Responses\";\r\n\r\nconst DefaultResponses = {\r\n  pain: [\"Aie!\", \"Aoouch!\", \"Aaaaie!\", \"Ouch\", \"Aow\"],\r\n  tickle: [\"Hahaha!\", \"Mmmmhahaha!\", \"Muhahah...\", \"Ha!Ha!\"],\r\n  boop: [\"Eek!\", \"Beep!\", \"Aww..\"],\r\n\r\n  low: [\"\", \"\", \"mh\", \"\u2665oh\u2665\", \"ah\", \"...\u2665\"],\r\n  light: [\"ah\u2665\", \"Aah!\", \"mh\", \"oh!\u2665\", \"mh\u2665\"],\r\n  medium: [\"mm\", \"aaaah\", \"Mm.. Ah\u2665\"],\r\n  hot: [\"nh... ah\u2665\", \"Oooh\", \"mmmmmh!\", \"HaaA\u2665\"],\r\n  orgasm: [\"Mh...Mn...HaaAAaah!\", \"Mmmmh... MMmh... Hhhmmmm...\", \"Oooooh... Mmmmh... OooOOOOh!\", \"Mmmhnn... Nyhmm... aah!\"]\r\n};\r\n\r\nconst setData = (key: string) => {\r\n  let oldSettings = null;\r\n  //@ts-ignore\r\n  if (Player?.OnlineSettings?.BCResponsive?.data) {\r\n    oldSettings = JSON.parse(\r\n      //@ts-ignore\r\n      LZString.decompressFromBase64(Player?.OnlineSettings?.BCResponsive?.data)\r\n    );\r\n  }\r\n\r\n  return oldSettings ? (oldSettings?.[key] ? oldSettings?.[key] : DefaultResponses[key]) : DefaultResponses[key];\r\n};\r\n\r\nexport function getDefaultResponsesEntries() {\r\n  return <ResponsesSettingsModel>{\r\n    mainResponses: [\r\n      {\r\n        actName: \"Pet\",\r\n        groupName: [\"ItemNose\"],\r\n        responses: setData(\"boop\"),\r\n        selfTrigger: false\r\n      },\r\n      {\r\n        actName: \"LSCG_SharkBite\",\r\n        groupName: [\"ItemNose\"],\r\n        responses: setData(\"boop\"),\r\n        selfTrigger: false\r\n      },\r\n      {\r\n        actName: \"Slap\",\r\n        groupName: [\"ItemVulva\", \"ItemVulvaPiercings\", \"ItemBreast\", \"ItemHead\"],\r\n        responses: setData(\"pain\"),\r\n        selfTrigger: true\r\n      },\r\n      {\r\n        actName: \"Bite\",\r\n        groupName: [\r\n          \"ItemFeet\",\r\n          \"ItemLegs\",\r\n          \"ItemButt\",\r\n          \"ItemTorso\",\r\n          \"ItemTorso2\",\r\n          \"ItemNipples\",\r\n          \"ItemBreast\",\r\n          \"ItemArms\",\r\n          \"ItemHands\",\r\n          \"ItemNeck\",\r\n          \"ItemMouth\",\r\n          \"ItemNose\",\r\n          \"ItemEars\",\r\n          \"ItemBoots\"\r\n        ],\r\n        responses: setData(\"pain\"),\r\n        selfTrigger: true\r\n      },\r\n      {\r\n        actName: \"Spank\",\r\n        groupName: [\"ItemFeet\", \"ItemLegs\", \"ItemButt\", \"ItemPelvis\", \"ItemTorso\", \"ItemTorso2\", \"ItemArms\", \"ItemHands\", \"ItemBoots\"],\r\n        responses: setData(\"pain\"),\r\n        selfTrigger: true\r\n      },\r\n      {\r\n        actName: \"Kick\",\r\n        groupName: [\"ItemFeet\", \"ItemLegs\", \"ItemVulva\", \"ItemVulvaPiercings\", \"ItemButt\", \"ItemBoots\"],\r\n        responses: setData(\"pain\")\r\n      },\r\n      {\r\n        actName: \"Pinch\",\r\n        groupName: [\"ItemButt\", \"ItemPelvis\", \"ItemNipples\", \"ItemArms\", \"ItemMouth\", \"ItemNose\", \"ItemEars\"],\r\n        responses: setData(\"pain\"),\r\n        selfTrigger: true\r\n      },\r\n      {\r\n        actName: \"SpankItem\",\r\n        groupName: [\r\n          \"ItemFeet\",\r\n          \"ItemLegs\",\r\n          \"ItemVulva\",\r\n          \"ItemVulvaPiercings\",\r\n          \"ItemButt\",\r\n          \"ItemPelvis\",\r\n          \"ItemTorso\",\r\n          \"ItemNipples\",\r\n          \"ItemBreast\",\r\n          \"ItemArms\",\r\n          \"ItemBoots\"\r\n        ],\r\n        responses: setData(\"pain\"),\r\n        selfTrigger: true\r\n      },\r\n      {\r\n        actName: \"ShockItem\",\r\n        groupName: [\r\n          \"ItemFeet\",\r\n          \"ItemLegs\",\r\n          \"ItemVulva\",\r\n          \"ItemVulvaPiercings\",\r\n          \"ItemButt\",\r\n          \"ItemPelvis\",\r\n          \"ItemTorso\",\r\n          \"ItemNipples\",\r\n          \"ItemBreast\",\r\n          \"ItemArms\",\r\n          \"ItemNeck\",\r\n          \"ItemNeckAccessories\",\r\n          \"ItemBoots\"\r\n        ],\r\n        responses: setData(\"pain\"),\r\n        selfTrigger: true\r\n      },\r\n      {\r\n        actName: \"LSCG_SharkBite\",\r\n        groupName: [\r\n          \"ItemFeet\",\r\n          \"ItemLegs\",\r\n          \"ItemButt\",\r\n          \"ItemTorso\",\r\n          \"ItemNipples\",\r\n          \"ItemBreast\",\r\n          \"ItemArms\",\r\n          \"ItemHands\",\r\n          \"ItemNeck\",\r\n          \"ItemEars\",\r\n          \"ItemBoots\"\r\n        ],\r\n        responses: setData(\"pain\")\r\n      },\r\n      {\r\n        actName: \"Tickle\",\r\n        groupName: [\"ItemFeet\", \"ItemLegs\", \"ItemPelvis\", \"ItemTorso\", \"ItemTorso2\", \"ItemBreast\", \"ItemArms\", \"ItemNeck\", \"ItemBoots\"],\r\n        responses: setData(\"tickle\")\r\n      },\r\n      {\r\n        actName: \"TickleItem\",\r\n        groupName: [\r\n          \"ItemFeet\",\r\n          \"ItemLegs\",\r\n          \"ItemVulva\",\r\n          \"ItemVulvaPiercings\",\r\n          \"ItemButt\",\r\n          \"ItemPelvis\",\r\n          \"ItemTorso\",\r\n          \"ItemNipples\",\r\n          \"ItemBreast\",\r\n          \"ItemArms\",\r\n          \"ItemNeck\",\r\n          \"ItemMouth\",\r\n          \"ItemNose\",\r\n          \"ItemHood\",\r\n          \"ItemEars\",\r\n          \"ItemBoots\"\r\n        ],\r\n        responses: setData(\"tickle\")\r\n      }\r\n    ],\r\n    extraResponses: {\r\n      low: setData(\"low\"),\r\n      light: setData(\"light\"),\r\n      medium: setData(\"medium\"),\r\n      hot: setData(\"hot\"),\r\n      orgasm: setData(\"orgasm\")\r\n    }\r\n  };\r\n}\r\n", "import { BaseModule } from \"../Base/BaseModule\";\r\nimport { activityDeconstruct } from \"../Utilities/ChatMessages\";\r\nimport { activityHandle, leaveHandle, orgasmHandle } from \"../Utilities/Handlers\";\r\nimport { ResponsesEntryModel, ResponsesSettingsModel } from \"../Models/Responses\";\r\nimport { GuiResponses } from \"../Screens/Responses\";\r\nimport { Subscreen } from \"../Base/SettingDefinitions\";\r\nimport { conDebug } from \"../Utilities/Console\";\r\nimport { getDefaultResponsesEntries } from \"../Utilities/DefaultResponsesEntries\";\r\nimport { HookPriority, ModuleCategory, hookFunction, onActivity } from \"../Utilities/SDK\";\r\n\r\nexport class ResponsesModule extends BaseModule {\r\n  static isOrgasm: boolean = false; // Just for Char Talk stuff\r\n\r\n  get settings(): ResponsesSettingsModel {\r\n    return super.settings as ResponsesSettingsModel;\r\n  }\r\n\r\n  get settingsScreen(): Subscreen | null {\r\n    return GuiResponses;\r\n  }\r\n\r\n  get defaultSettings() {\r\n    return getDefaultResponsesEntries();\r\n  }\r\n\r\n  Load(): void {\r\n    onActivity(HookPriority.Observe, ModuleCategory.Responses, (data, sender, msg, metadata) => {\r\n      const dict = activityDeconstruct(metadata);\r\n      if (!dict) return;\r\n      let entry = this.getResponsesEntry(dict?.ActivityName, dict?.ActivityGroup);\r\n\r\n      activityHandle(dict, entry);\r\n      conDebug(dict);\r\n    });\r\n\r\n    //Leave Message\r\n    hookFunction(\r\n      \"ServerAccountBeep\",\r\n      HookPriority.AddBehavior,\r\n      (args, next) => {\r\n        let data = args[0];\r\n\r\n        if (!data.ChatRoomName || !ChatRoomData || data.BeepType !== \"Leash\") return next(args);\r\n        if (!Player.OnlineSharedSettings?.AllowPlayerLeashing) return next(args);\r\n\r\n        leaveHandle(data);\r\n        next(args);\r\n      },\r\n      ModuleCategory.Global\r\n    );\r\n\r\n    //Orgasm Handling\r\n    hookFunction(\r\n      \"ActivityOrgasmStart\",\r\n      HookPriority.Observe,\r\n      (args, next) => {\r\n        orgasmHandle(args[0] as Character);\r\n        next(args);\r\n      },\r\n      ModuleCategory.Global\r\n    );\r\n  }\r\n\r\n  Run(): void {}\r\n\r\n  getResponsesEntry(actName: string | undefined, grpName: string | undefined): ResponsesEntryModel | undefined {\r\n    return this.settings.mainResponses.find((ent) => ent.actName === actName && ent.groupName.includes(grpName));\r\n  }\r\n}\r\n", "import { CMD_BCR, CMD_CHANGELOG, CMD_DEBUG_DATA, CMD_FIX_DATA, CMD_TOGGLE, CMD_VERSION, ModVersion } from './Definition';\r\n\r\n//TODO - Translation\r\n\r\nexport const BCR_CMDS = /*html*/ `\r\n  <div class=\"ResponsiveMessageContent\">\r\n    <b style='color:#440171; text-shadow: 0.05em 0.05em #690092;'>BC Responsive</b>: Available commands (Clickable)\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_TOGGLE}\")'>Toggle Responsive</a>\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_CHANGELOG}\")'>Show Changelog</a>\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_VERSION}\")'>Show Version</a><br>\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_FIX_DATA}\")'>Fix Data</a>\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_DEBUG_DATA}\")'>Debug Data</a><br>\r\n    <br><a href='https://github.com/dDeepLb/BC-Responsive/wiki' target='_blank'><b>Open Wiki</b></a>\r\n  </div>\r\n  `;\r\n\r\nexport const BCR_NEW_VERSION = /*html*/ `\r\n  <div class='ResponsiveMessageContent'>\r\n    <b style='color:#690092; text-shadow: 0.05em 0.05em #440171;'>BC Responsive</b><b>: New Version!</b> [${ModVersion}]<br>\r\n    <br><b style='color:#CC3232; text-shadow: 0.05em 0.05em #920009;'>Please, reload your page~</b><br>\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_CHANGELOG}\")'><b>Changelog (Click)</b></a>\r\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_BCR}\")'><b>Show Help (Click)</b></a>\r\n  </div>\r\n `;\r\n\r\nexport const BCR_VERSION_MSG = /*html*/ `\r\n  <p class='ResponsiveMessageContent'>Current version of <b style='color:#690092; text-shadow: 0.05em 0.05em #440171;'>BC Responsive: v${ModVersion}</b></p>\r\n  `;\r\n\r\nexport const BCR_TOGGLE_ENABLED = /*html*/ `\r\n    <p class='ResponsiveMessageContent'><b>BC Responsive</b> has been enabled</p>\r\n    `;\r\n\r\nexport const BCR_TOGGLE_DISABLED = /*html*/ `\r\n    <p class='ResponsiveMessageContent'><b>BC Responsive</b> has been disabled</p>\r\n    `;\r\n\r\nexport const BCR_CHANGELOG = /*html*/ `\r\n  <div class=\"ResponsiveMessageContent\">\r\n    <b class=\"ResponsiveVersion\">0.6.4</b>\r\n    <br>\u2022 Fixed Character Talk wasn't working.<br>\r\n\r\n    <b class=\"ResponsiveVersion\">0.6.3</b>\r\n    <br>\u2022 Fixed bug introduced in R104.\r\n    <br>\u2022 Removed feature to add moans on high arousal.<br>\r\n    \r\n    <b class=\"ResponsiveVersion\">0.6.2</b>\r\n    <br>\u2022 Added Chinese Translation by XiaoSu (\u5C0F\u9165).\r\n    <br>\u2022 Added missing translation tags in Responses Menu.<br>\r\n  </div>\r\n\r\n  <br><a href='https://github.com/dDeepLb/BC-Responsive/wiki/Full-Changelog' target='_blank'><b>Full Changelog (Click)</b></a>\r\n  `;\r\n\r\nexport function sendLocalSmart(id: string, message: string, timeoutInSeconds?: number) {\r\n  const div = document.createElement('div');\r\n  div.id = id;\r\n  div.setAttribute('class', 'ChatMessage ResponsiveMessage');\r\n  div.setAttribute('data-time', ChatRoomCurrentTime());\r\n  div.setAttribute('data-sender', Player?.MemberNumber + '');\r\n\r\n  div.innerHTML =\r\n    message.replaceAll('\\n\\t', '') +\r\n    /*html*/ `<br><a class=\"ResponsiveText\" onClick='document.getElementById(\"${id}\").remove();'><b>Close (Click)</b></a>`;\r\n\r\n  ChatRoomAppendChat(div);\r\n  if (!timeoutInSeconds) return;\r\n  setTimeout(() => div?.remove(), timeoutInSeconds * 1000);\r\n}\r\n", "import { PlayerStorage, dataFix } from \"./Data\";\r\nimport { CMD_BCR, MT } from \"./Definition\";\r\nimport { BCR_CMDS, BCR_CHANGELOG, BCR_VERSION_MSG, sendLocalSmart, BCR_TOGGLE_ENABLED, BCR_TOGGLE_DISABLED } from \"./Messages\";\r\n\r\nexport function loadCommands() {\r\n  CommandCombine({\r\n    Tag: CMD_BCR,\r\n    Description: \": To open the Responsive commands overview.\",\r\n    Action: (args: string, command: string, parsed: string[]) => {\r\n      switch (args) {\r\n        case \"toggle\":\r\n          const data = PlayerStorage().GlobalModule;\r\n          data.ResponsiveEnabled = !data.ResponsiveEnabled;\r\n          if (data.ResponsiveEnabled) {\r\n            sendLocalSmart(\"bcr_toggle_enb\", BCR_TOGGLE_ENABLED, MT.INFO);\r\n          }\r\n          if (!data.ResponsiveEnabled) {\r\n            sendLocalSmart(\"bcr_toggle_dis\", BCR_TOGGLE_DISABLED, MT.INFO);\r\n          }\r\n          break;\r\n\r\n        case \"changelog\":\r\n          sendLocalSmart(\"bcr_clog\", BCR_CHANGELOG);\r\n          break;\r\n\r\n        case \"version\":\r\n          sendLocalSmart(\"bcr_ver\", BCR_VERSION_MSG, MT.INFO);\r\n          break;\r\n\r\n        case \"debug-data\":\r\n          navigator.clipboard.writeText(LZString.compressToBase64(JSON.stringify(Player.Responsive)));\r\n          break;\r\n\r\n        case \"data-fix\":\r\n          dataFix();\r\n          break;\r\n\r\n        default:\r\n          sendLocalSmart(\"bcr_cmds\", BCR_CMDS, MT.COMMANDS);\r\n          break;\r\n      }\r\n    }\r\n  });\r\n}\r\n", "import { BaseModule } from \"../Base/BaseModule\";\r\nimport { PlayerStorage } from \"../Utilities/Data\";\r\nimport { ModVersion } from \"../Utilities/Definition\";\r\nimport { BCR_NEW_VERSION, sendLocalSmart } from \"../Utilities/Messages\";\r\nimport { HookPriority, ModuleCategory, hookFunction } from \"../Utilities/SDK\";\r\n\r\nexport class VersionModule extends BaseModule {\r\n  static isItNewVersion: boolean = false;\r\n\r\n  Load(): void {\r\n    hookFunction(\r\n      \"ChatRoomSync\",\r\n      HookPriority.Observe,\r\n      (args, next) => {\r\n        next(args);\r\n        VersionModule.sendNewVersionMessage();\r\n      },\r\n      ModuleCategory.Global\r\n    );\r\n  }\r\n\r\n  Run(): void {}\r\n\r\n  static isNewVersion(current: string | undefined, candidate: string) {\r\n    if (current !== undefined) {\r\n      const CURRENT_ = current.split(\".\"),\r\n        CANDIDATE_ = candidate.split(\".\");\r\n      for (let i = 0; i < 3; i++) {\r\n        if (CURRENT_[i] === CANDIDATE_[i]) {\r\n          continue;\r\n        }\r\n        return CANDIDATE_[i] > CURRENT_[i];\r\n      }\r\n    }\r\n    if (current === undefined || current === \"\" || !current) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static sendNewVersionMessage() {\r\n    if (PlayerStorage().GlobalModule.doShowNewVersionMessage && VersionModule.isItNewVersion) {\r\n      sendLocalSmart(\"ResponsiveNewVersion\", BCR_NEW_VERSION);\r\n    }\r\n  }\r\n\r\n  static saveVersion() {\r\n    if (PlayerStorage()) {\r\n      PlayerStorage().Version = ModVersion;\r\n    }\r\n  }\r\n\r\n  static loadVersion() {\r\n    if (PlayerStorage()?.Version) {\r\n      return PlayerStorage().Version;\r\n    }\r\n    return;\r\n  }\r\n\r\n  static checkIfNewVersion() {\r\n    let LoadedVersion = VersionModule.loadVersion();\r\n    if (VersionModule.isNewVersion(LoadedVersion, ModVersion)) {\r\n      VersionModule.isItNewVersion = true;\r\n    }\r\n    VersionModule.saveVersion();\r\n  }\r\n}\r\n", "import { BaseModule } from \"../Base/BaseModule\";\r\nimport { isSimpleChat } from \"../Utilities/ChatMessages\";\r\nimport { PlayerStorage } from \"../Utilities/Data\";\r\nimport { HookPriority, ModuleCategory, hookFunction } from \"../Utilities/SDK\";\r\nimport { ResponsesModule } from \"./Responses\";\r\n\r\n/**\r\n * \"Frown\", \"Sad\", \"Pained\", \"Angry\", \"HalfOpen\", \"Open\", \"Ahegao\", \"Moan\",\r\n * \"TonguePinch\", \"LipBite\", \"Happy\", \"Devious\", \"Laughing\", \"Grin\", \"Smirk\", \"Pout\",\r\n */\r\n\r\n/**\r\n * The detection map used to match chunks of speech to a character's facial expression.\r\n * It's sorted by priority.\r\n */\r\nconst letterExpressionMap: { regex: RegExp; expr: [string | null, number] }[] = [\r\n  { regex: /[.?!\u2026~]/, expr: [null, 600] },\r\n  { regex: /[,;]/, expr: [null, 250] },\r\n  //Latin\r\n  { regex: /[a]/, expr: [\"Open\", 400] },\r\n  { regex: /[oeu]/, expr: [\"HalfOpen\", 300] },\r\n  { regex: /[bp]/, expr: [null, 200] },\r\n  { regex: /[mn]/, expr: [null, 500] },\r\n  { regex: /[ij]/, expr: [\"Smirk\", 400] },\r\n  { regex: /[kqrw]/, expr: [\"HalfOpen\", 300] },\r\n  { regex: /[fv]/, expr: [\"LipBite\", 300] },\r\n  { regex: /[cdt]/, expr: [\"TonguePinch\", 200] },\r\n  { regex: /[slz]/, expr: [\"TonguePinch\", 400] },\r\n  { regex: /[ghx]/, expr: [\"Angry\", 300] },\r\n  //Cyrillic\r\n  { regex: /[\u0430\u044F]/, expr: [\"Open\", 400] },\r\n  { regex: /[\u043E\u0435\u0443\u0454\u044E]/, expr: [\"HalfOpen\", 300] },\r\n  { regex: /[\u0431\u043F]/, expr: [null, 200] },\r\n  { regex: /[\u043C\u043D]/, expr: [null, 500] },\r\n  { regex: /[\u0438\u0456\u0436\u0457\u044B]/, expr: [\"Smirk\", 400] },\r\n  { regex: /[y\u043A\u0440]/, expr: [\"HalfOpen\", 300] },\r\n  { regex: /[\u0444\u0432]/, expr: [\"LipBite\", 300] },\r\n  { regex: /[\u0446\u0434\u0442]/, expr: [\"TonguePinch\", 200] },\r\n  { regex: /[\u0441\u043B\u0437]/, expr: [\"TonguePinch\", 400] },\r\n  { regex: /[\u0433\u0445]/, expr: [\"Angry\", 300] }\r\n];\r\n\r\nexport class CharTalkModule extends BaseModule {\r\n  static doAnimateMouth: boolean = true;\r\n\r\n  Load(): void {\r\n    ChatRoomRegisterMessageHandler({\r\n      Description: \"Processes mouth moving on the client\",\r\n      Priority: 500,\r\n      Callback: (data, sender, msg, metadata) => {\r\n        if (data.Type == \"Chat\") {\r\n          CharTalkModule.charTalkHandle(sender, msg);\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n\r\n    hookFunction(\r\n      \"CommonDrawAppearanceBuild\",\r\n      HookPriority.Observe,\r\n      (args, next) => {\r\n        const c: Character = args[0];\r\n\r\n        if (!CharTalkModule.animation?.[c.MemberNumber]) return next(args); // Skip hook execution if animation not running\r\n\r\n        const mouth = InventoryGet(c, \"Mouth\"); // Get mouth property\r\n\r\n        if (!mouth) return next(args);\r\n\r\n        if (!mouth.Property) mouth.Property = {};\r\n\r\n        const realExpression = mouth?.Property?.Expression || null; // Save the real expression\r\n\r\n        mouth.Property.Expression = CharTalkModule.currentExpression?.[c.MemberNumber] || null; // Override the expression for this function\r\n\r\n        const returnValue = next(args); // Call the hooked function\r\n\r\n        mouth.Property.Expression = realExpression; // Restore the real expression for further execution\r\n\r\n        return returnValue; // Preserve any possible return value\r\n      },\r\n      ModuleCategory.CharTalk\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the sent message, checks it for validity,\r\n   * then splits it in chunks and turns it into a list of expression changes\r\n   * before pushing them into the animator.\r\n   */\r\n  static animateSpeech(c: Character, msg: string) {\r\n    const chunks = CharTalkModule.chunkSubstr(msg, 3);\r\n\r\n    const animation = chunks.map((chunk) => {\r\n      const match = letterExpressionMap.find(({ regex }) => regex.test(chunk)) ?? { expr: [null, 200] };\r\n      return match.expr;\r\n    });\r\n\r\n    CharTalkModule.runExpressionAnimation(c, animation);\r\n  }\r\n\r\n  /**\r\n   * The list of expressions to animate with their duration.\r\n   */\r\n  static animation: { [characterNumber: number]: [ExpressionName, number][] } = {};\r\n  static currentExpression: { [characterNumber: number]: ExpressionName } = {};\r\n  static animationFrame = 0;\r\n\r\n  /**\r\n   * Runs animation by changing mouth expression every `step[1]`ms\r\n   */\r\n  static runExpressionAnimationStep(c: Character) {\r\n    if (!CharTalkModule.animation?.[c.MemberNumber]) return;\r\n\r\n    let step = CharTalkModule.animation[c.MemberNumber][CharTalkModule.animationFrame++];\r\n\r\n    CharTalkModule.setLocalMouthExpression(c, step?.[0]);\r\n\r\n    if (CharTalkModule.animationFrame < CharTalkModule.animation?.[c.MemberNumber].length) {\r\n      setTimeout(() => CharTalkModule.runExpressionAnimationStep(c), step[1]);\r\n    } else {\r\n      delete CharTalkModule.animation[c.MemberNumber];\r\n    }\r\n  }\r\n\r\n  static runExpressionAnimation(c: Character, list: any) {\r\n    if (CharTalkModule.animation?.[c.MemberNumber]) return; // Animation running, ignore\r\n\r\n    CharTalkModule.animation[c.MemberNumber] = list;\r\n    CharTalkModule.animationFrame = 0;\r\n\r\n    const mouth = InventoryGet(c, \"Mouth\")?.Property;\r\n\r\n    if (mouth?.Expression && CharTalkModule.animation[c.MemberNumber] !== null) {\r\n      // reset the mouth at the end\r\n      CharTalkModule.animation?.[c.MemberNumber].push([mouth?.Expression, 0]);\r\n    }\r\n\r\n    CharTalkModule.runExpressionAnimationStep(c);\r\n  }\r\n\r\n  /**\r\n   * Splits a string into chunks of \"size\" length\r\n   */\r\n  static chunkSubstr(str: string, size: number) {\r\n    const numChunks = Math.ceil(str.length / size);\r\n    const chunks = new Array(numChunks);\r\n\r\n    for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\r\n      chunks[i] = str.substring(o, o + size);\r\n    }\r\n\r\n    return chunks;\r\n  }\r\n\r\n  static setLocalMouthExpression(c: Character, expressionName: ExpressionName) {\r\n    const mouth = InventoryGet(c, \"Mouth\");\r\n\r\n    if (expressionName != null && !mouth.Asset.Group.AllowExpression.includes(expressionName)) return;\r\n\r\n    CharTalkModule.currentExpression[c.MemberNumber] = expressionName;\r\n\r\n    CharacterRefresh(c, false);\r\n  }\r\n\r\n  static charTalkHandle = (c: Character, msg: string) => {\r\n    if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\r\n    if (!PlayerStorage().GlobalModule.CharTalkEnabled) return;\r\n    if (!c) return;\r\n\r\n    const fIsSimpleChat = !!isSimpleChat(msg);\r\n\r\n    if (fIsSimpleChat && CharTalkModule.doAnimateMouth && c == Player && !ResponsesModule.isOrgasm) {\r\n      CharTalkModule.animateSpeech(c, msg);\r\n    } else if (fIsSimpleChat && CharTalkModule.doAnimateMouth && c != Player) {\r\n      CharTalkModule.animateSpeech(c, msg);\r\n    }\r\n\r\n    if (!fIsSimpleChat) {\r\n      CharTalkModule.doAnimateMouth = false;\r\n      return;\r\n    }\r\n\r\n    if (fIsSimpleChat && !CharTalkModule.doAnimateMouth) {\r\n      CharTalkModule.doAnimateMouth = true;\r\n      CharTalkModule.animateSpeech(c, msg);\r\n    }\r\n\r\n    if (ResponsesModule.isOrgasm) {\r\n      ResponsesModule.isOrgasm = false;\r\n    }\r\n  };\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAGA,UAAI,WAAS,WAAU;AAAC;AAAa,cAAM,IAAE;AAAQ,iBAAS,EAAEA,IAAE;AAAC,gBAAM,iBAAeA,EAAC;AAAE,gBAAMC,KAAE,IAAI,MAAMD,EAAC;AAAE,gBAAM,QAAQ,MAAMC,EAAC,GAAEA;AAAA,QAAC;AAA1E;AAA2E,cAAM,IAAE,IAAI;AAAY,iBAAS,EAAED,IAAE;AAAC,iBAAM,CAAC,CAACA,MAAG,YAAU,OAAOA,MAAG,CAAC,MAAM,QAAQA,EAAC;AAAA,QAAC;AAArD;AAAsD,iBAAS,EAAEA,IAAE;AAAC,gBAAMC,KAAE,oBAAI;AAAI,iBAAOD,GAAE,OAAQ,CAAAA,OAAG,CAACC,GAAE,IAAID,EAAC,KAAGC,GAAE,IAAID,EAAC,CAAE;AAAA,QAAC;AAA9D;AAA+D,cAAM,IAAE,oBAAI,OAAI,IAAE,oBAAI;AAAI,iBAAS,EAAEA,IAAE;AAAC,YAAE,IAAIA,EAAC,MAAI,EAAE,IAAIA,EAAC,GAAE,QAAQ,KAAKA,EAAC;AAAA,QAAE;AAAzC;AAA0C,iBAAS,EAAEA,IAAE;AAAC,gBAAMC,KAAE,CAAC,GAAEC,KAAE,oBAAI,OAAIC,KAAE,oBAAI;AAAI,qBAAUC,MAAK,EAAE,OAAO,GAAE;AAAC,kBAAMC,KAAED,GAAE,SAAS,IAAIJ,GAAE,IAAI;AAAE,gBAAGK,IAAE;AAAC,cAAAJ,GAAE,KAAK,GAAGI,GAAE,KAAK;AAAE,yBAAS,CAACJ,IAAEK,EAAC,KAAID,GAAE,QAAQ,QAAQ;AAAE,gBAAAH,GAAE,IAAID,EAAC,KAAGC,GAAE,IAAID,EAAC,MAAIK,MAAG,EAAE,gBAAgBF,GAAE,8BAA8BJ,GAAE;AAAA;AAAA,EAA2GC;AAAA;AAAA,EAAeC,GAAE,IAAID,EAAC,KAAG;AAAA;AAAA,EAAgBK,IAAG,GAAEJ,GAAE,IAAID,IAAEK,EAAC,GAAEH,GAAE,IAAIC,GAAE,IAAI;AAAA,YAAC;AAAA,UAAC;AAAC,UAAAH,GAAE,KAAM,CAACD,IAAEC,OAAIA,GAAE,WAASD,GAAE,QAAS;AAAE,gBAAMI,KAAE,SAASJ,IAAEC,IAAE;AAAC,gBAAG,MAAIA,GAAE;AAAK,qBAAOD;AAAE,gBAAIE,KAAEF,GAAE,SAAS,EAAE,WAAW,QAAO,IAAI;AAAE,uBAAS,CAACG,IAAEC,EAAC,KAAIH,GAAE,QAAQ;AAAE,cAAAC,GAAE,SAASC,EAAC,KAAG,EAAE,oBAAoBH,GAAE,eAAeG,gBAAe,GAAED,KAAEA,GAAE,WAAWC,IAAEC,EAAC;AAAE,oBAAO,GAAE,MAAM,IAAIF,KAAI;AAAA,UAAC,EAAEF,GAAE,UAASE,EAAC;AAAE,cAAIG,KAAE,gCAASJ,IAAE;AAAC,gBAAIC,IAAEG;AAAE,kBAAMC,KAAE,UAAQD,MAAGH,KAAE,EAAE,oBAAoB,kBAAgB,WAASG,KAAE,SAAOA,GAAE,KAAKH,IAAEF,GAAE,MAAKG,EAAC,GAAEI,KAAEH,GAAE,MAAM,MAAKH,EAAC;AAAE,mBAAO,QAAMK,MAAGA,GAAE,GAAEC;AAAA,UAAC,GAA3J;AAA6J,mBAAQL,KAAED,GAAE,SAAO,GAAEC,MAAG,GAAEA,MAAI;AAAC,kBAAMC,KAAEF,GAAEC,KAAGE,KAAEC;AAAE,YAAAA,KAAE,gCAASJ,IAAE;AAAC,kBAAIC,IAAEG;AAAE,oBAAMC,KAAE,UAAQD,MAAGH,KAAE,EAAE,oBAAoB,cAAY,WAASG,KAAE,SAAOA,GAAE,KAAKH,IAAEF,GAAE,MAAKG,GAAE,GAAG,GAAEI,KAAEJ,GAAE,KAAK,MAAM,MAAK,CAACF,IAAE,CAAAD,OAAG;AAAC,oBAAG,MAAI,UAAU,UAAQ,CAAC,MAAM,QAAQC,EAAC;AAAE,wBAAM,IAAI,MAAM,OAAOE,GAAE,gEAAgE,OAAOH,IAAG;AAAE,uBAAOI,GAAE,KAAK,MAAKJ,EAAC;AAAA,cAAC,CAAC,CAAC;AAAE,qBAAO,QAAMM,MAAGA,GAAE,GAAEC;AAAA,YAAC,GAA7U;AAAA,UAA8U;AAAC,iBAAM,EAAC,OAAMN,IAAE,SAAQC,IAAE,gBAAeC,IAAE,OAAME,IAAE,OAAMD,GAAC;AAAA,QAAC;AAAxxC;AAAyxC,iBAAS,EAAEJ,IAAEC,KAAE,OAAG;AAAC,cAAIG,KAAE,EAAE,IAAIJ,EAAC;AAAE,cAAGI;AAAE,YAAAH,OAAIG,GAAE,cAAY,EAAEA,EAAC;AAAA,eAAO;AAAC,gBAAIH,KAAE;AAAO,kBAAMK,KAAEN,GAAE,MAAM,GAAG;AAAE,qBAAQE,KAAE,GAAEA,KAAEI,GAAE,SAAO,GAAEJ;AAAI,kBAAGD,KAAEA,GAAEK,GAAEJ,MAAI,CAAC,EAAED,EAAC;AAAE,sBAAM,IAAI,MAAM,oBAAoBD,+BAA8BM,GAAE,MAAM,GAAEJ,KAAE,CAAC,EAAE,KAAK,GAAG,iBAAiB;AAAE,kBAAMK,KAAEN,GAAEK,GAAEA,GAAE,SAAO;AAAI,gBAAG,cAAY,OAAOC;AAAE,oBAAM,IAAI,MAAM,oBAAoBP,4BAA2B;AAAE,kBAAMQ,KAAE,SAASR,IAAE;AAAC,kBAAIC,KAAE;AAAG,yBAAUE,MAAK,EAAE,OAAOH,EAAC,GAAE;AAAC,oBAAIA,KAAE,OAAKC,KAAEE;AAAG,yBAAQF,KAAE,GAAEA,KAAE,GAAEA;AAAI,kBAAAD,KAAE,IAAEA,KAAE,aAAWA,OAAI,IAAEA,OAAI;AAAE,gBAAAC,KAAEA,OAAI,IAAED;AAAA,cAAC;AAAC,uBAAQ,KAAGC,QAAK,GAAG,SAAS,EAAE,EAAE,SAAS,GAAE,GAAG,EAAE,YAAY;AAAA,YAAC,EAAEM,GAAE,SAAS,EAAE,WAAW,QAAO,IAAI,CAAC,GAAEE,KAAE,EAAC,MAAKT,IAAE,UAASO,IAAE,cAAaC,GAAC;AAAE,YAAAJ,KAAE,OAAO,OAAO,OAAO,OAAO,CAAC,GAAEK,EAAC,GAAE,EAAC,aAAY,EAAEA,EAAC,GAAE,QAAO,MAAI;AAAA,YAAC,GAAE,SAAQR,IAAE,iBAAgBK,GAAEA,GAAE,SAAO,GAAE,CAAC,GAAEF,GAAE,SAAO,SAASJ,IAAE;AAAC,qBAAO,YAAYC,IAAE;AAAC,uBAAOD,GAAE,YAAY,MAAM,MAAM,MAAK,CAACC,EAAC,CAAC;AAAA,cAAC;AAAA,YAAC,EAAEG,EAAC,GAAE,EAAE,IAAIJ,IAAEI,EAAC,GAAEH,GAAEG,GAAE,mBAAiBA,GAAE;AAAA,UAAM;AAAC,iBAAOA;AAAA,QAAC;AAAn3B;AAAo3B,iBAAS,IAAG;AAAC,qBAAUJ,MAAK,EAAE,OAAO;AAAE,YAAAA,GAAE,cAAY,EAAEA,EAAC;AAAA,QAAC;AAAhD;AAAiD,iBAAS,IAAG;AAAC,gBAAMA,KAAE,oBAAI;AAAI,qBAAS,CAACC,IAAEC,EAAC,KAAI;AAAE,YAAAF,GAAE,IAAIC,IAAE,EAAC,MAAKA,IAAE,UAASC,GAAE,UAAS,cAAaA,GAAE,cAAa,eAAcA,GAAE,QAAO,mBAAkBA,GAAE,QAAQA,GAAE,kBAAiB,cAAa,EAAEA,GAAE,YAAY,MAAM,IAAK,CAAAF,OAAGA,GAAE,GAAI,CAAC,GAAE,eAAc,MAAM,KAAKE,GAAE,YAAY,cAAc,EAAC,CAAC;AAAE,iBAAOF;AAAA,QAAC;AAAlS;AAAmS,cAAM,IAAE,oBAAI;AAAI,iBAAS,EAAEA,IAAE;AAAC,YAAE,IAAIA,GAAE,IAAI,MAAIA,MAAG,EAAE,yBAAyBA,GAAE,uBAAuB,GAAE,EAAE,OAAOA,GAAE,IAAI,GAAEA,GAAE,SAAO,OAAG,EAAE;AAAA,QAAC;AAA9G;AAA+G,iBAAS,EAAEA,IAAEE,IAAE;AAAC,UAAAF,MAAG,YAAU,OAAOA,MAAG,EAAE,uDAAqD,OAAOA,EAAC,GAAE,YAAU,OAAOA,GAAE,QAAMA,GAAE,QAAM,EAAE,uEAAqE,OAAOA,GAAE,IAAI;AAAE,cAAII,KAAE,IAAIJ,GAAE;AAAQ,sBAAU,OAAOA,GAAE,YAAUA,GAAE,YAAU,EAAE,0BAA0BI,qDAAoD,OAAOJ,GAAE,UAAU,GAAEI,KAAE,IAAIJ,GAAE,aAAaA,GAAE,UAAS,YAAU,OAAOA,GAAE,WAAS,EAAE,0BAA0BI,0CAAyC,OAAOJ,GAAE,SAAS,GAAEA,GAAE,eAAaA,GAAE,aAAW,SAAQ,WAASA,GAAE,cAAY,YAAU,OAAOA,GAAE,cAAY,EAAE,0BAA0BI,0DAAyD,OAAOJ,GAAE,SAAS,GAAE,QAAME,OAAIA,KAAE,CAAC,IAAGA,MAAG,YAAU,OAAOA,MAAG,EAAE,0BAA0BE,uDAAsD,OAAOF,IAAG;AAAE,gBAAMG,KAAE,SAAKH,GAAE,cAAaI,KAAE,EAAE,IAAIN,GAAE,IAAI;AAAE,UAAAM,OAAIA,GAAE,gBAAcD,MAAG,EAAE,wBAAwBD;AAAA,mCAA+F,GAAE,EAAEE,EAAC;AAAG,gBAAMC,KAAE,wBAAAP,OAAG;AAAC,gBAAIC,KAAES,GAAE,SAAS,IAAIV,GAAE,IAAI;AAAE,mBAAOC,OAAIA,KAAE,EAAC,OAAM,CAAC,GAAE,SAAQ,oBAAI,MAAG,GAAES,GAAE,SAAS,IAAIV,GAAE,MAAKC,EAAC,IAAGA;AAAA,UAAC,GAApG,MAAsGU,KAAE,wBAACX,IAAEE,OAAI,IAAIC,OAAI;AAAC,gBAAIE,IAAEC;AAAE,kBAAMC,KAAE,UAAQD,MAAGD,KAAE,EAAE,oBAAoB,qBAAmB,WAASC,KAAE,SAAOA,GAAE,KAAKD,IAAEL,IAAEU,GAAE,IAAI;AAAE,YAAAA,GAAE,UAAQ,EAAE,OAAON,wDAAuD;AAAE,kBAAMO,KAAET,GAAE,GAAGC,EAAC;AAAE,mBAAO,QAAMI,MAAGA,GAAE,GAAEI;AAAA,UAAC,GAA5O,MAA8OC,KAAE,EAAC,QAAOD,GAAE,UAAU,MAAI,EAAED,EAAC,CAAE,GAAE,cAAaC,GAAE,gBAAgB,CAACX,IAAEE,IAAEC,OAAI;AAAC,wBAAU,OAAOH,MAAGA,MAAG,EAAE,OAAOI,qEAAoE,OAAOJ,IAAG;AAAE,kBAAMK,KAAE,EAAEL,EAAC,GAAEM,KAAEC,GAAEF,EAAC;AAAE,wBAAU,OAAOH,MAAG,EAAE,OAAOE,+BAA8BJ,sCAAqC,OAAOE,IAAG,GAAE,cAAY,OAAOC,MAAG,EAAE,OAAOC,+BAA8BJ,oCAAmC,OAAOG,IAAG;AAAE,kBAAMQ,KAAE,EAAC,KAAID,GAAE,MAAK,UAASR,IAAE,MAAKC,GAAC;AAAE,mBAAOG,GAAE,MAAM,KAAKK,EAAC,GAAE,EAAE,GAAE,MAAI;AAAC,oBAAMX,KAAEM,GAAE,MAAM,QAAQK,EAAC;AAAE,cAAAX,MAAG,MAAIM,GAAE,MAAM,OAAON,IAAE,CAAC,GAAE,EAAE;AAAA,YAAE;AAAA,UAAC,CAAE,GAAE,eAAcW,GAAE,iBAAiB,CAACX,IAAEE,OAAI;AAAC,wBAAU,OAAOF,MAAGA,MAAG,EAAE,OAAOI,qEAAoE,OAAOJ,IAAG;AAAE,kBAAMK,KAAE,EAAEL,EAAC,GAAEM,KAAEC,GAAEF,EAAC;AAAE,cAAEH,EAAC,KAAG,EAAE,OAAOE,gCAA+BJ,qCAAoC,OAAOE,IAAG;AAAE,uBAAS,CAACC,IAAEE,EAAC,KAAI,OAAO,QAAQH,EAAC;AAAE,0BAAU,OAAOG,KAAEC,GAAE,QAAQ,IAAIH,IAAEE,EAAC,IAAE,SAAOA,KAAEC,GAAE,QAAQ,OAAOH,EAAC,IAAE,EAAE,OAAOC,gCAA+BJ,iCAAgCG,KAAI;AAAE,cAAE;AAAA,UAAC,CAAE,GAAE,eAAcQ,GAAE,iBAAiB,CAAAX,OAAG;AAAC,wBAAU,OAAOA,MAAGA,MAAG,EAAE,OAAOI,qEAAoE,OAAOJ,IAAG;AAAE,kBAAME,KAAE,EAAEF,EAAC;AAAE,YAAAO,GAAEL,EAAC,EAAE,QAAQ,MAAM,GAAE,EAAE;AAAA,UAAC,CAAE,GAAE,cAAaS,GAAE,gBAAgB,CAACX,IAAEE,IAAEC,OAAI;AAAC,wBAAU,OAAOH,MAAGA,MAAG,EAAE,OAAOI,oEAAmE,OAAOJ,IAAG;AAAE,kBAAMK,KAAE,EAAEL,EAAC;AAAE,mBAAO,MAAM,QAAQE,EAAC,KAAG,EAAE,OAAOE,0DAAyD,OAAOF,IAAG,GAAEG,GAAE,SAAS,MAAM,QAAMF,KAAEA,KAAE,YAAWD,EAAC;AAAA,UAAC,CAAE,GAAE,iBAAgBS,GAAE,mBAAmB,CAAAX,OAAG;AAAC,wBAAU,OAAOA,MAAGA,MAAG,EAAE,OAAOI,6DAA4D,OAAOJ,IAAG;AAAE,mBAAO,EAAEA,EAAC,EAAE;AAAA,UAAY,CAAE,EAAC,GAAEU,KAAE,EAAC,MAAKV,GAAE,MAAK,UAASA,GAAE,UAAS,SAAQA,GAAE,SAAQ,YAAWA,GAAE,YAAW,cAAaK,IAAE,KAAIO,IAAE,QAAO,MAAG,UAAS,oBAAI,MAAG;AAAE,iBAAO,EAAE,IAAIZ,GAAE,MAAKU,EAAC,GAAE,OAAO,OAAOE,EAAC;AAAA,QAAC;AAAlrG;AAAmrG,iBAAS,IAAG;AAAC,gBAAMZ,KAAE,CAAC;AAAE,qBAAUC,MAAK,EAAE,OAAO;AAAE,YAAAD,GAAE,KAAK,EAAC,MAAKC,GAAE,MAAK,UAASA,GAAE,UAAS,SAAQA,GAAE,SAAQ,YAAWA,GAAE,WAAU,CAAC;AAAE,iBAAOD;AAAA,QAAC;AAArI;AAAsI,YAAI;AAAE,cAAM,IAAE,WAAS,OAAO,WAAS,OAAO,WAAS,WAAU;AAAC,gBAAMC,KAAE,EAAC,SAAQ,GAAE,YAAW,GAAE,aAAY,GAAE,aAAY,GAAE,iBAAgB,GAAE,oBAAmB,OAAO,KAAK,EAAC,kBAAiB,MAAK,WAAU,MAAK,eAAc,KAAI,CAAC,EAAC;AAAE,iBAAO,IAAEA,IAAE,OAAO,OAAOA,EAAC;AAAA,QAAC,EAAE,KAAG,EAAE,OAAO,QAAQ,KAAG,EAAE,6CAA6C,GAAE,MAAI,OAAO,SAAS,cAAY,EAAE,yEAAyE,OAAO,SAAS,WAAW,GAAE,OAAO,SAAS,YAAU,KAAG,MAAM,2EAA2E,OAAO,SAAS;AAAA,kHAA8H,GAAE,OAAO;AAAU,eAAM,eAAa,OAAO,YAAU,OAAO,eAAe,SAAQ,cAAa,EAAC,OAAM,KAAE,CAAC,GAAE,QAAQ,UAAQ,IAAG;AAAA,MAAC,EAAE;AAAA;AAAA;;;ACHrqO;AAAA;AAAA;AAAA;AAAA;;;ACCO,MAAM,KAAK;AAAA,IAChB,WAAW;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAEA,MAAM,aAAa;AACZ,MAAM,UAAU;AAChB,MAAM,aAAa,GAAG;AACtB,MAAM,gBAAgB,GAAG;AACzB,MAAM,cAAc,GAAG;AACvB,MAAM,eAAe,GAAG;AACxB,MAAM,iBAAiB,GAAG;AAE1B,MAAM,UAAU;AAChB,MAAM,cAAc;AACpB,MAAM,aAAa;AACnB,MAAM,gBAAgB;AAEtB,MAAM,YAAY;;;ACpBlB,MAAM,UAAN,MAAc;AAAA,IACnB,OAAO,OAAO,QAAyB;AACrC,aAAO,SAAS,iBAAiB,KAAK,UAAU,MAAM,CAAC;AAAA,IACzD;AAAA,IAEA,OAAO,OAAO,QAA4B;AACxC,UAAI,IAAI,SAAS,qBAAqB,MAAgB;AACtD,UAAI,OAAO,CAAC;AAEZ,UAAI;AACF,YAAI,UAAU,KAAK,MAAM,CAAW;AACpC,eAAO;AAAA,MACT,QAAE;AAAA,MAAO;AACT,UAAI;AAAM,eAAO;AAAA,IACnB;AAAA,IAEA,OAAO,QAAQ,QAAkB;AAC/B,UAAI,OAAiB,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC;AACtD,UAAI,MAAgB,CAAC;AACrB,aAAO,KAAK,SAAS,GAAG;AACtB,YAAI,IAAI,KAAK,MAAM,KAAK,OAAO,IAAI,KAAK,MAAM;AAC9C,YAAI,KAAK,KAAK,EAAE;AAChB,aAAK,OAAO,GAAG,CAAC;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AAAA,EACF;AA1Ba;;;ACON,MAAM,gBAAgB,6BAAM,OAAO,UAAb;AACtB,MAAM,mBAAmB,6BAAM,OAAO,kBAAkB,UAA/B;AAEzB,WAAS,WAAW;AACzB,QAAI,iBAAiB,GAAG;AACtB,aAAO,WAAW,KAAK,MAAM,SAAS,qBAAqB,iBAAiB,CAAC,CAAC;AAAA,IAChF,WAAW,OAAO,eAAe,iBAAiB;AAKhD,UAAI,OAAO,OAAO,eAAe,mBAAmB,UAAU;AAC5D,eAAQ,OAAO,WAA0B,CAAC;AAAA,MAC5C;AACA,aAAO,WAAW,KAAK,MAAM,SAAS,qBAAqB,OAAO,eAAe,eAAe,CAAC;AAEjG,aAAO,OAAO,eAAe;AAC7B,aAAO,oBAAoB,UAAU,EAAE,gBAAgB,OAAO,eAAe,CAAC;AAAA,IAChF,OAAO;AACL,aAAO,WAA0B,CAAC;AAAA,IACpC;AAAA,EACF;AAlBgB;AAoBT,WAAS,YAAY;AAC1B,QAAI,CAAC,iBAAiB;AAAG,aAAO,kBAAkB,WAAW;AAC7D,QAAI,OAAsB;AAAA,MACxB,SAAS,cAAc,EAAE;AAAA,MACzB,cAAc,cAAc,EAAE;AAAA,MAC9B,iBAAiB,cAAc,EAAE;AAAA,MACjC,gBAAgB,cAAc,EAAE;AAAA,IAClC;AAEA,WAAO,kBAAkB,WAAW,QAAQ,OAAO,IAAI;AACvD,sCAAkC,OAAO;AAAA,EAC3C;AAXgB;AAaT,WAAS,UAAU,iBAA0B,kBAA2B,iBAA0B;AACvG,QAAI,iBAAiB;AACnB,aAAO,SAAS,eAAoC,CAAC;AAAA,IACvD;AAEA,QAAI,kBAAkB;AACpB,aAAO,SAAS,kBAA0C,CAAC;AAAA,IAC7D;AAEA,QAAI,iBAAiB;AACnB,aAAO,SAAS,iBAAsC,CAAC;AAAA,IACzD;AACA,cAAU;AAAA,EACZ;AAbgB;AAeT,WAAS,qBAAqB;AACnC,WAAO,SAAS,kBAA0C;AAAA,MACxD,eAAe,CAAC;AAAA,MAChB,gBAAgB;AAAA,QACd,KAAK,CAAC;AAAA,QACN,OAAO,CAAC;AAAA,QACR,QAAQ,CAAC;AAAA,QACT,KAAK,CAAC;AAAA,QACN,QAAQ,CAAC;AAAA,MACX;AAAA,IACF;AACA,cAAU;AAAA,EACZ;AAZgB;AAcT,WAAS,UAAU;AACxB,QAAI,OAAO,OAAO;AAClB,QAAI,gBAAgB,KAAK,gBAAgB;AAEzC,kBAAc,QAAQ,CAAC,UAAU;AAC/B,UAAI,MAAM,WAAW,QAAW;AAC9B,sBAAc,OAAO,cAAc,QAAQ,KAAK,CAAC;AAAA,MACnD;AAEA,UAAI,OAAO,MAAM,aAAa,UAAU;AACtC,cAAM,YAAY,CAAC,MAAM,SAAS;AAAA,MACpC;AAEA,UAAI,MAAM,aAAa,QAAW;AAChC,cAAM,YAAY,CAAC,EAAE;AAAA,MACvB;AAAA,IACF,CAAC;AAAA,EACH;AAjBgB;AAmBT,WAAS,eAAe;AAC7B,WAAO,OAAO,iBAAiB,iBAAiB;AAChD,WAAO,OAAO,iBAAiB,iBAAiB;AAChD,WAAO,OAAO,iBAAiB,iBAAiB;AAEhD,WAAO,OAAO,iBAAiB;AAC/B,WAAO,OAAO,iBAAiB;AAC/B,WAAO,OAAO,iBAAiB;AAAA,EACjC;AARgB;;;ACrFT,MAAe,aAAf,MAA0B;AAAA,IAC/B,IAAI,iBAAmC;AACrC,aAAO;AAAA,IACT;AAAA,IAGA,IAAI,kBAAiC;AACnC,aAAO,KAAK,YAAY;AAAA,IAC1B;AAAA,IAEA,IAAI,WAA8B;AAChC,UAAI,CAAC,KAAK;AAAiB,eAAO,CAAC;AACnC,UAAI,CAAC,cAAc,GAAG;AACpB,eAAO,WAA0B,CAAC;AAClC,aAAK,wBAAwB;AAAA,MAC/B,WAAW,CAAC,cAAc,EAAE,KAAK;AAAkB,aAAK,wBAAwB;AAChF,aAAO,cAAc,EAAE,KAAK;AAAA,IAC9B;AAAA,IAEA,IAAI,UAAmB;AACrB,UAAI,CAAC,cAAc,GAAG;AAAc,eAAO;AAC3C,aACE,cAAc,EAAE,aAAa,qBAC7B,KAAK,SAAS,sBACb,yBAAyB,KAAM,iBAAiB,UAAU,iBAAiB;AAAA,IAEhF;AAAA,IAEA,OAAO;AACL,WAAK,wBAAwB;AAAA,IAC/B;AAAA,IAEA,0BAAgC;AAC9B,YAAM,UAAU,KAAK;AACrB,YAAM,WAAW,KAAK;AACtB,UAAI,CAAC,WAAW,CAAC;AAAU;AAE3B,oBAAc,EAAE,WAAW,OAAO,OAAO,UAAU,cAAc,EAAE,YAAY,CAAC,CAAC;AAAA,IACnF;AAAA,IAEA,IAAI,kBAA4C;AAC9C,aAAO;AAAA,IACT;AAAA,IAEA,OAAO;AAAA,IAAC;AAAA,IAER,MAAM;AAAA,IAEN;AAAA,IAEA,SAAS;AAAA,IAET;AAAA,EACF;AArDsB;;;ACJf,MAAM,aAAsC,oBAAI,IAAwB;AAExE,WAAS,UAAwB;AACtC,WAAO,CAAC,GAAG,WAAW,OAAO,CAAC;AAAA,EAChC;AAFgB;AAIT,WAAS,eAAqC,QAAc;AACjE,eAAW,IAAI,OAAO,YAAY,MAAM,MAAM;AAC9C,WAAO;AAAA,EACT;AAHgB;;;ACRT,MAAM,cAAN,MAAiB;AAAA,IAStB,OAAO,QAAQ,UAAkB;AAC/B,aAAO,KAAK,UAAU,KAAK,SAAS,WAAW;AAAA,IACjD;AAAA,IAOA,OAAO,YAAY,SAAuB;AACxC,UAAI,CAAC,OAAO;AAAgB,eAAO,iBAAiB,CAAC;AACrD,UAAI,OAAO,eAAe,UAAU;AAAG,eAAO,QAAQ,KAAK,GAAG,mDAAmD;AACjH,aAAO,eAAe,KAAK,OAAO;AAAA,IACpC;AAAA,IAOA,OAAO,YAAY,SAAqC;AACtD,aAAO,OAAO,gBAAgB,QAAQ,OAAO;AAAA,IAC/C;AAAA,IAQA,OAAO,cAAc,UAA8B,UAA4C;AAC7F,UAAI,wBAAwB,MAAM,aAAa;AAAW,iBAAS,QAAkB;AACrF;AAAA,IACF;AAAA,IAQA,OAAO,eAAe,UAA8B,UAA4C;AAC9F,UAAI,wBAAwB,MAAM,aAAa;AAC7C,YAAI,QAAQ,MAAM,YAAW,QAAQ,QAAQ,GAAG,IAAI,EAAE;AAAG,mBAAS,QAAkB;AAAA;AACtF;AAAA,IACF;AAAA,EACF;AAvDO,MAAM,aAAN;AAAM;AACX,gBADW,YACI,WAAU;AACzB,gBAFW,YAEI,SAAQ;;;ACFzB,oCAAkB;;;ACAX,WAAS,aAAa,cAAuB;AAClD,WAAO,kBAAkB,KAAK,CAAC,MAAM,EAAE,gBAAgB,YAAY,KAAK;AAAA,EAC1E;AAFgB;AAIT,WAAS,aAAa,KAAa;AACxC,WAAO,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;AAAA,EACvC;AAFgB;AAIT,WAAS,YAAY,UAAkB,SAAiB;AAC7D,UAAM,aAAa,CAAC,CAAC,SAAS,eAAe,OAAO;AACpD,QAAI;AAAY;AAEhB,UAAM,eAAe,SAAS,cAAc,OAAO;AACnD,iBAAa,KAAK;AAClB,iBAAa,YAAY,SAAS,eAAe,QAAQ,CAAC;AAC1D,aAAS,KAAK,YAAY,YAAY;AAAA,EACxC;AARgB;;;ACNhB,MAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,EACT;AAOO,WAAS,UAAU,MAAa;AACrC,QAAI,OAAO,KAAK,OAAO;AAAU,cAAQ,IAAI,UAAU,KAAK,MAAM,OAAO,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;AAAA;AACzF,cAAQ,IAAI,UAAU,OAAO,KAAK,GAAG,IAAI;AAAA,EAChD;AAHgB;AAKT,WAAS,WAAW,MAAa;AACtC,QAAI,OAAO,KAAK,OAAO;AAAU,cAAQ,KAAK,UAAU,KAAK,MAAM,OAAO,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;AAAA;AAC1F,cAAQ,KAAK,WAAW,OAAO,KAAK,GAAG,IAAI;AAAA,EAClD;AAHgB;AAKT,WAAS,UAAU,MAAa;AACrC,QAAI,OAAO,KAAK,OAAO;AAAU,cAAQ,MAAM,UAAU,KAAK,MAAM,OAAO,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;AAAA;AAC3F,cAAQ,MAAM,UAAU,OAAO,KAAK,GAAG,IAAI;AAAA,EAClD;AAHgB;AAKT,WAAS,YAAY,MAAa;AACvC,QAAI,WAAW;AACb,UAAI,OAAO,KAAK,OAAO;AAAU,gBAAQ,MAAM,UAAU,KAAK,MAAM,OAAO,OAAO,GAAG,KAAK,MAAM,CAAC,CAAC;AAAA;AAC7F,gBAAQ,MAAM,UAAU,OAAO,KAAK,GAAG,IAAI;AAAA,IAClD;AAAA,EACF;AALgB;;;AFvBT,MAAM,MAAM,4BAAAY,QAAM;AAAA,IACvB;AAAA,MACE,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACd;AAAA,IACA;AAAA,MACE,cAAc;AAAA,IAChB;AAAA,EACF;AAkBA,MAAM,mBAAqD,oBAAI,IAAI;AAEnE,WAAS,sBAAsB,QAAqC;AAClE,QAAI,SAAS,iBAAiB,IAAI,MAAM;AACxC,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,QACP,MAAM;AAAA,QACN,OAAO,CAAC;AAAA,MACV;AACA,uBAAiB,IAAI,QAAQ,MAAM;AAAA,IACrC;AACA,WAAO;AAAA,EACT;AAVS;AAYF,WAAS,aACd,QACA,UACA,MACA,SAAgC,MACpB;AACZ,UAAM,OAAO,sBAAsB,MAAM;AAEzC,QAAI,KAAK,MAAM,KAAK,CAAC,MAAM,EAAE,SAAS,IAAI,GAAG;AAC3C,aAAO,uBAAuB,WAAW,IAAI;AAC7C,aAAO,MAAM;AAAA,IACf;AAEA,UAAM,iBAAiB,IAAI,aAAa,QAAQ,UAAU,IAAW;AAErE,SAAK,MAAM,KAAK;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,SAAK,MAAM,KAAK,CAAC,GAAG,MAAM,EAAE,WAAW,EAAE,QAAQ;AACjD,WAAO;AAAA,EACT;AAvBgB;AAuDT,WAAS,WACd,UACA,QACA,UACA;AACA;AAAA,MACE;AAAA,MACA;AAAA,MACA,CAAC,MAAM,SAAS;AACd,YAAI,OAAO,KAAK;AAChB,YAAI,SAAS,aAAa,KAAK,MAAM;AACrC,YAAI,KAAK,QAAQ;AAAY,mBAAS,MAAM,QAAQ,KAAK,SAAS,KAAK,UAAU;AACjF,aAAK,IAAI;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAhBgB;;;AGtGT,MAAM,gBAAN,MAAmB;AAAA,IAGxB,aAAa,OAAO;AAClB,YAAM,OAAO,oBAAoB,YAAY;AAC7C,WAAK,cAAc,MAAM,cAAa,kBAAkB,IAAI;AAAA,IAC9D;AAAA,IAEA,OAAO,QAAQ,QAAgB;AAC7B,aAAO,KAAK,YAAY,WAAW,UAAU;AAAA,IAC/C;AAAA,IAEA,aAAqB,kBAAkB,MAAc;AACnD,YAAM,WAAW,MAAM,MAAM,GAAG,0BAA0B,WAAW;AAErE,UAAI,QAAQ,QAAQ,CAAC,SAAS,IAAI;AAChC,eAAO,cAAa,kBAAkB,IAAI;AAAA,MAC5C;AACA,YAAM,kBAAkB,MAAM,SAAS,KAAK;AAE5C,aAAO,KAAK,kBAAkB,eAAe;AAAA,IAC/C;AAAA,IAEA,OAAe,kBAAkB,SAAS;AACxC,YAAM,eAAe,CAAC;AACtB,YAAM,QAAQ,QAAQ,MAAM,IAAI;AAEhC,iBAAW,QAAQ,OAAO;AAExB,YAAI,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,EAAE,WAAW,GAAG,GAAG;AACrD;AAAA,QACF;AAEA,cAAM,CAAC,KAAK,KAAK,IAAI,KAAK,MAAM,GAAG;AACnC,qBAAa,IAAI,KAAK,KAAK,MAAM,KAAK;AAAA,MACxC;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAvCO,MAAM,eAAN;AAAM;AACX,gBADW,cACJ,eAAc,IAAI,OAAO;AAwC3B,MAAM,UAAU,wBAAC,WAA2B,aAAa,QAAQ,MAAM,GAAvD;;;ACrChB,MAAM,sBAA8B;AACpC,MAAM,sBAA8B;AACpC,MAAM,qBAA+B,CAAC,QAAQ,OAAO,SAAS,UAAU,MAAM;AAQ9E,WAAS,aAAa,WAA8D;AACzF,QAAI,CAAC,IAAI,UAAU;AACjB,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,QAAI,SAAS,mBAAmB;AAChC,WAAO,IAAI,SAAS;AAAA,EACtB;AANgB;;;ACJT,MAAe,gBAAf,MAA4B;AAAA,IAOxB;AAAA,IAET,YAAY,QAAqB;AAC/B,UAAI;AAAQ,aAAK,SAAS;AAG1B,yBAAmB,QAAQ,CAAC,SAAS;AACnC,cAAM,QAAQ,sBAAsB,sBAAsB,KAAK,OAAO;AACtE,YAAI,OAAa,KAAM,UAAU,cAAc,OAAa,OAAQ,WAAW;AAC7E,UAAM,OAAQ,SAAS,MAAM;AAC3B,YAAM,KAAM,MAAM;AAAA,UACpB;AAAA,MACJ,CAAC;AAAA,IACH;AAAA,IAEA,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,QAAgB;AAClB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,UAAkB;AACpB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,QAAQ,SAAiB;AAC3B,0BAAoB;AAAA,IACtB;AAAA,IAEA,IAAI,gBAAwB;AAC1B,aAAO,sBAAsB,KAAK,YAAY;AAAA,IAChD;AAAA,IAEA,aAAa,QAAsC;AACjD,aAAO,aAAa,MAAM;AAAA,IAC5B;AAAA,IAEA,IAAI,WAA8B;AAChC,aAAO,KAAK,OAAO;AAAA,IACrB;AAAA,IAEA,IAAI,qBAAkC;AACpC,aAAO,CAAC,CAAC,CAAC;AAAA,IACZ;AAAA,IAEA,IAAI,YAAuB;AACzB,aAAO,KAAK,mBAAmB,KAAK,IAAI,wBAAwB,GAAG,KAAK,mBAAmB,SAAS,CAAC;AAAA,IACvG;AAAA,IAEA,IAAI,YAAuB;AACzB,aAAO,IAAI,UAAU;AAAA,IACvB;AAAA,IAEA,QAAQ,IAAY;AAClB,aAAO,cAAa,UAAU,cAAa,SAAS,KAAK;AAAA,IAC3D;AAAA,IAEA,QAAQ,IAAY;AAClB,aAAO,cAAa,UAAU,cAAa,QAAQ,KAAK,MAAM,KAAK,CAAC;AAAA,IACtE;AAAA,IAEA,eAAe;AACb,WAAK,mBAAmB,QAAQ,CAAC,MAAM,IAAI,QAAQ;AACjD,YAAI,MAAM,wBAAwB,GAAG;AACnC,eAAK,QAAQ,CAAC,YAAY;AACxB,gBAAI,QAAQ,QAAQ,UAAU,QAAQ,QAAQ;AAAU,mBAAK,YAAY,QAAQ,EAAE;AAAA,UACrF,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IAEA,OAAO;AACL,eAAS,WAAW,oBAAoB,MAAM,CAAC,EAAE,KAAK,OAAO;AAC7D,iBAAW,UAAU,QAAQ,GAAG;AAC9B,YAAI,CAAC,OAAO;AAAgB;AAC5B,YAAI,CAAC,OAAO,KAAK,OAAO,QAAQ,EAAE;AAAQ,iBAAO,wBAAwB;AAAA,MAC3E;AACA,WAAK,mBAAmB;AAAA,QAAQ,CAAC,MAC/B,EAAE,QAAQ,CAAC,SAAS;AAClB,kBAAQ,KAAK;AAAA,iBACN;AACH,kBAAI,QAAQ,mBAAmB,KAAK,IAAI,QAAQ,KAAK,QAAQ,GAAG,KAAK;AACrE,oBAAM,aAAa,gBAAgB,KAAK;AACxC;AAAA,iBACG;AACH,iCAAmB,KAAK,IAAI,UAAU,KAAK,QAAQ,GAAG,KAAK;AAC3D;AAAA;AAAA,QAEN,CAAC;AAAA,MACH;AAEA,4CAAsC,OAAO,gBAAgB;AAAA,IAC/D;AAAA,IAEA,MAAM;AACJ,oBAAa,UAAU,cAAa;AACpC,oBAAa,iBAAiB,WAAW;AAEzC,oBAAa,UAAU;AACvB,iBAAW,YAAY;AAEvB,oBAAc,QAAQ,IAAI,IAAI,KAAK,KAAK;AACxC,eAAS,QAAQ,GAAG,KAAK,YAAY,GAAG,cAAa,SAAS,cAAa,UAAU,cAAa,OAAO,SAAS,SAAS;AAC3H,iBAAW,MAAM,IAAI,IAAI,IAAI,IAAI,SAAS,kBAAkB,YAAY;AAExE,UAAI,KAAK,mBAAmB,SAAS,GAAG;AACtC,mBAAW,YAAY;AACvB,iCAAyB,MAAM,IAAI,KAAK,mBAAmB,MAAM;AACjE,mBAAW,YAAY;AAAA,MACzB;AAEA,WAAK,aAAa;AAElB,WAAK,UAAU,QAAQ,CAAC,MAAM,IAAI,QAAQ;AACxC,gBAAQ,KAAK;AAAA,eACN;AACH,iBAAK,aAAa,KAAK,OAAO,KAAK,aAAa,KAAK,QAAQ,GAAG,IAAI,KAAK,QAAQ;AACjF;AAAA,eACG;AAAA,eACA;AACH,iBAAK,gBAAgB,KAAK,IAAI,KAAK,OAAO,KAAK,aAAa,IAAI,KAAK,QAAQ;AAC7E;AAAA,eACG;AACH,iBAAK,UAAU,KAAK,OAAO,KAAK,aAAa,EAAE;AAC/C;AAAA,eACG;AACH,iBAAK,iBAAiB,KAAK,UAAU,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ;AACjG;AAAA;AAAA,MAEN,CAAC;AAED,oBAAa,UAAU,cAAa;AACpC,iBAAW,YAAY,cAAa;AAAA,IACtC;AAAA,IAEA,QAAQ;AACN,oBAAa,UAAU,cAAa;AACpC,oBAAa,iBAAiB,WAAW;AAEzC,oBAAa,UAAU;AACvB,iBAAW,YAAY;AAEvB,UAAI,QAAQ,MAAM,IAAI,IAAI,EAAE;AAAG,eAAO,KAAK,KAAK;AAChD,UAAI,KAAK,mBAAmB,SAAS;AAAG,kCAA0B,MAAM,IAAI,KAAK,mBAAmB,MAAM;AAE1G,WAAK,UAAU,QAAQ,CAAC,MAAM,IAAI,QAAQ;AACxC,gBAAQ,KAAK;AAAA,eACN;AACH,gBAAI,QAAQ,KAAK,QAAQ,EAAE,IAAI,KAAK,KAAK,QAAQ,EAAE,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,KAAK,UAAU;AACpF,mBAAK,WAAW,CAAC,KAAK,QAAQ,CAAC;AAAA,YACjC;AACA;AAAA,eACG;AACH,gBAAI,QAAQ,KAAK,SAAS,IAAI,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE;AAAG,mBAAK,SAAS;AAC3F;AAAA;AAAA,MAEN,CAAC;AAED,oBAAa,UAAU,cAAa;AACpC,iBAAW,YAAY,cAAa;AAAA,IACtC;AAAA,IAEA,OAAO;AACL,WAAK,mBAAmB;AAAA,QAAQ,CAAC,MAC/B,EAAE,QAAQ,CAAC,SAAS;AAClB,kBAAQ,KAAK;AAAA,iBACN;AACH,kBAAI,CAAC,gBAAgB,aAAa,KAAK,EAAE,CAAC,GAAG;AAC3C,8BAAc,KAAK,EAAE;AACrB;AAAA,cACF;AAAA,iBACG;AACH,mBAAK,WAAW,aAAa,KAAK,EAAE,CAAC;AACrC,4BAAc,KAAK,EAAE;AACrB;AAAA;AAAA,QAEN,CAAC;AAAA,MACH;AAEA,4CAAsC;AACtC,0BAAoB,MAAM;AAE1B,mBAAa,UAAU;AACvB,gBAAU;AAAA,IACZ;AAAA,IAEA,SAAS;AAAA,IAET;AAAA,IAEA,QAAQ,MAAc;AACpB,kBAAY,KAAK,KAAK,MAAM,MAAM,MAAM;AAAA,IAC1C;AAAA,IAEA,aAAa,OAAe,aAAqB,OAAgB,OAAe,WAAoB,OAAO;AACzG,UAAI,aAAa,QAAQ,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,IAAI,IAAI,KAAK,EAAE;AAC/E,kBAAY,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,aAAa,QAAQ,SAAS,MAAM;AAC/G,mBAAa,KAAK,QAAQ,KAAK,IAAI,KAAK,KAAK,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,OAAO,QAAQ;AACtG,UAAI;AAAY,aAAK,QAAQ,QAAQ,WAAW,CAAC;AAAA,IACnD;AAAA,IAEA,iBAAiB,UAAoB,MAAgB,OAAe,OAAe,QAAgB,IAAI,WAAoB,OAAO;AAChI,UAAI,aAAa,QAAQ,SAAS,IAAI,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AACxE,iBAAW,SAAS,IAAI,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,IAAI,QAAQ;AAClF,sBAAgB,OAAO,SAAS,KAAK,IAAI,SAAS,KAAK,IAAI,IAAI,EAAE;AACjE,kBAAY,QAAQ,KAAK,GAAG,SAAS,KAAK,IAAI,SAAS,KAAK,IAAI,KAAK,aAAa,QAAQ,SAAS,MAAM;AAAA,IAC3G;AAAA,IAEA,WAAW,OAAe,OAAe,OAAe,SAAiB,WAAoB,OAAO;AAClG,UAAI,aAAa,QAAQ,KAAK,QAAQ,KAAK,IAAI,SAAS,KAAK,QAAQ,KAAK,IAAI,IAAI,KAAK,EAAE;AACzF,iBAAW,KAAK,QAAQ,KAAK,IAAI,SAAS,KAAK,QAAQ,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,IAAI,QAAQ;AACxG,kBAAY,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,IAAI,UAAU,IAAI,KAAK,QAAQ,KAAK,GAAG,KAAK,aAAa,QAAQ,SAAS,MAAM;AAAA,IAChI;AAAA,IAEA,YAAY,WAAmB;AAC7B,sBAAgB,WAAW,MAAM,MAAM,GAAG,CAAC;AAAA,IAC7C;AAAA,IAEA,gBAAgB,WAAmB,OAAe,aAAqB,OAAe,WAAoB,OAAO;AAC/G,UAAI,aAAa,QAAQ,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,IAAI,IAAI,KAAK,EAAE;AAC/E,kBAAY,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,aAAa,QAAQ,SAAS,MAAM;AAC/G,sBAAgB,WAAW,KAAK,QAAQ,KAAK,IAAI,MAAM,KAAK,KAAK,QAAQ,KAAK,GAAG,KAAK,EAAE;AACxF,UAAI;AAAU,4BAAoB,WAAW,YAAY,MAAM;AAC/D,UAAI,CAAC;AAAU,iBAAS,eAAe,SAAS,GAAG,gBAAgB,UAAU;AAC7E,UAAI;AAAY,aAAK,QAAQ,QAAQ,WAAW,CAAC;AAAA,IACnD;AAAA,IAEA,UAAU,OAAe,aAAqB,OAAe;AAC3D,UAAI,aAAa,QAAQ,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,IAAI,IAAI,KAAK,EAAE;AAC/E,kBAAY,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,aAAa,QAAQ,SAAS,MAAM;AAC/G,UAAI;AAAY,aAAK,QAAQ,QAAQ,WAAW,CAAC;AAAA,IACnD;AAAA,EACF;AArPO,MAAe,eAAf;AAAe;AACpB,gBADoB,cACb,WAAkB;AACzB,gBAFoB,cAEb,WAAkB;AACzB,gBAHoB,cAGb,SAAgB;AACvB,gBAJoB,cAIb,SAAgB;AACvB,gBALoB,cAKb,WAAkB,cAAa;AACtC,gBANoB,cAMb;AAiPT,WAAS,YAAY,GAAW,GAAW,OAAe,MAAc,OAAoC;AAC1G,UAAM,MAAM,WAAW;AACvB,eAAW,YAAY;AACvB,aAAS,GAAG,GAAG,OAAO,IAAI,SAAS;AACnC,kBAAc,GAAG,GAAG,OAAO,IAAI,OAAO;AACtC,gBAAY,MAAM,UAAU,SAAS,IAAI,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,OAAO;AACtF,eAAW,YAAY;AAAA,EACzB;AAPS;;;AC7PF,MAAM,WAAN,cAAuB,aAAa;AAAA,IACzC,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEQ,qBAAoC;AAAA,IAEpC,2BAAoC;AAAA,IAEpC,kBAA2B;AAAA,IAC3B,mBAA4B;AAAA,IAC5B,kBAA2B;AAAA,IAEnC,OAAO;AACL,WAAK,qBAAqB,KAAK,IAAI,IAAI;AACvC,YAAM,KAAK;AAAA,IACb;AAAA,IAEA,MAAM;AACJ,mBAAa,UAAU,aAAa;AACpC,mBAAa,iBAAiB,WAAW;AAEzC,mBAAa,UAAU;AACvB,iBAAW,YAAY;AAEvB,eAAS,QAAQ,qCAAqC,GAAG,KAAM,KAAK,OAAO;AAE3E,eAAS,QAAQ,qBAAqB,GAAG,KAAM,KAAK,SAAS,OAAO;AACpE,eAAS,QAAQ,sCAAsC,GAAG,KAAM,KAAK,OAAO;AAE5E,eAAS,QAAQ,mCAAmC,GAAG,KAAM,KAAK,MAAM;AAExE,eAAS,QAAQ,qCAAqC,GAAG,KAAM,KAAK,OAAO,OAAO;AAElF,YAAM,MAAM,KAAK,IAAI;AACrB,UAAI,MAAM,KAAK,oBAAoB;AACjC;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAG,QAAQ,sBAAsB,MAAM,KAAK,OAAO,KAAK,qBAAqB,OAAO,GAAI;AAAA,UACxF;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,OAAO;AACL,mBAAW,KAAM,KAAK,KAAK,IAAI,QAAQ,sBAAsB,GAAG,OAAO;AAAA,MACzE;AAEA,iBAAW,MAAM,KAAK,KAAK,IAAI,QAAQ,qBAAqB,GAAG,OAAO;AAEtE,iBAAW,YAAY;AAEvB,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL;AAAA,MACF;AACA,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL;AAAA,QACA,KAAK;AAAA,MACP;AACA,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL;AAAA,QACA,KAAK;AAAA,MACP;AACA,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL;AAAA,QACA,KAAK;AAAA,MACP;AAEA,iBAAW,YAAY,aAAa;AAAA,IACtC;AAAA,IAEA,QAAQ;AACN,UAAI,KAAK,uBAAuB;AAAM;AAEtC,UAAI,QAAQ,MAAM,KAAK,KAAK,EAAE;AAAG,eAAO,KAAK,KAAK;AAElD,UAAI,QAAQ,KAAM,KAAK,KAAK,EAAE,KAAK,KAAK,IAAI,KAAK,KAAK;AAAoB,eAAO,KAAK,QAAQ;AAE9F,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE;AAAG,eAAQ,KAAK,2BAA2B,CAAC,KAAK;AAChH,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,KAAK;AACxE,eAAQ,KAAK,kBAAkB,CAAC,KAAK;AACvC,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,KAAK;AACxE,eAAQ,KAAK,mBAAmB,CAAC,KAAK;AACxC,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,KAAK;AACxE,eAAQ,KAAK,kBAAkB,CAAC,KAAK;AAAA,IACzC;AAAA,IAEA,UAAU;AACR,WAAK,qBAAqB;AAC1B,UAAI,KAAK,0BAA0B;AACjC,2BAAmB;AAAA,MACrB,OAAO;AACL,kBAAU,KAAK,iBAAiB,KAAK,kBAAkB,KAAK,eAAe;AAAA,MAC7E;AACA,WAAK,aAAa,IAAI;AAAA,IACxB;AAAA,EACF;AAnHa;;;ACAN,MAAM,cAAN,cAAyB,aAAa;AAAA,IAK3C,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,YAAuB;AACzB,aAAO;AAAA,QACG;AAAA,UACN,MAAM;AAAA,UACN,UAAU,CAAC,aAAa,SAAS,aAAa,OAAO;AAAA,UACrD,MAAM,CAAC,KAAK,EAAE;AAAA,UACd,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,UAAU;AAAA,UACV,WAAW;AACT,mBAAO,KAAK,gCAAgC,QAAQ;AAAA,UACtD;AAAA,QACF;AAAA,QACQ;AAAA,UACN,MAAM;AAAA,UACN,UAAU,CAAC,aAAa,SAAS,aAAa,UAAU,aAAa,QAAQ,EAAE;AAAA,UAC/E,MAAM,CAAC,KAAK,EAAE;AAAA,UACd,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,UAAU;AAAA,UACV,WAAW;AACT,mBAAO,KAAK,kCAAkC,QAAQ;AAAA,UACxD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IAEA,OAAO,eAAe;AACpB,UAAI,YAAW,eAAe,WAAW;AAAG,oBAAW,eAAe;AACtE,aAAO,GAAG,QAAQ,wBAAwB,MAAM,YAAW;AAAA,IAC7D;AAAA,IAEA,OAAO,iBAAiB;AACtB,UAAI,YAAW,YAAY,YAAW,aAAa,SAAS;AAAG;AAC/D,kBAAW,WAAW,yBAAyB,YAAW,UAAU,YAAW,YAAY;AAC3F,kBAAW,eAAe,WAAW,IAAI;AAAA,IAC3C;AAAA,IAEA,OAAO;AACL,kBAAW,eAAe;AAE1B,uBAAiB,qBAAqB;AACtC,UAAI,MAAM,SAAS,eAAe,qBAAqB;AACvD,qBAAe,uBAAuB,aAAa;AAEnD,YAAM,OACJ,WAAW,OAAO,eAAe,WAAW,OAAO,eAAe,IAC9D,WAAW,OAAO,cAAc,KAChC,WAAW,OAAO,eAAe;AAEvC,aAAO,OAAO,IAAI,OAAO;AAAA,QACvB,YAAY,kBAAkB;AAAA,QAC9B,UAAU,OAAO;AAAA,MACnB,CAAC;AAED,YAAM,KAAK;AAAA,IACb;AAAA,IAEA,MAAM;AACJ,YAAM,IAAI;AAEV,UAAI,MAAM,aAAa;AACvB,mBAAa,UAAU;AAEvB,eAAS,YAAW,aAAa,GAAG,aAAa,UAAU,KAAK,aAAa,UAAU,aAAa,OAAO,SAAS,SAAS;AAE7H,mBAAa,UAAU;AAAA,IACzB;AAAA,IAEA,QAAQ;AACN,YAAM,MAAM;AAAA,IACd;AAAA,IAEA,OAAO;AACL,oBAAc,qBAAqB;AACnC,YAAM,KAAK;AAAA,IACb;AAAA,EACF;AAxFO,MAAM,aAAN;AAAM;AACX,gBADW,YACI,gBAAyB,CAAC,UAAU,UAAU,OAAO;AACpE,gBAFW,YAEI,gBAAe;AAC9B,gBAHW,YAGI,YAAW;AAuF5B,MAAM,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACvFxB,MAAM,WAAN,cAAuB,aAAa;AAAA,IACzC,aAA6B,CAAC;AAAA,IAE9B,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,YAAY,QAAa;AACvB,YAAM,MAAM;AAEZ,WAAK,aAAa,OAAO;AAAA,IAC3B;AAAA,IAEA,OAAa;AACX,UAAI,CAAC,IAAI,UAAU,kBAAkB;AACnC,aAAK,aAAa,IAAI;AACtB;AAAA,MACF;AAEA,YAAM,KAAK;AAAA,IACb;AAAA,IAEA,MAAM;AACJ,UAAI,MAAM,aAAa;AACvB,UAAI,OAAO,WAAW;AAEtB,mBAAa,UAAU;AACvB,iBAAW,YAAY;AAEvB,oBAAc,QAAQ,IAAI,IAAI,KAAK,KAAK;AACxC;AAAA,QACE,QAAQ,gBAAgB,EAAE,QAAQ,eAAe,UAAU,IAAI,OAAO,WAAW,aAAa;AAAA,QAC9F,aAAa;AAAA,QACb,aAAa,UAAU,aAAa;AAAA,QACpC;AAAA,QACA;AAAA,MACF;AACA,iBAAW,MAAM,IAAI,IAAI,IAAI,IAAI,SAAS,gBAAgB;AAE1D,iBAAW,YAAY;AACvB,UAAI,IAAI;AACR,iBAAW,UAAU,KAAK,YAAY;AACpC,cAAM,KAAK,KAAK,MAAM,IAAI,CAAC;AAC3B,cAAM,KAAK,IAAI;AAEf,YAAI,OAAO,QAAQ;AAAY;AAE/B,mBAAW,aAAa,UAAU,MAAM,IAAI,MAAM,MAAM,IAAI,KAAK,IAAI,IAAI,SAAS,IAAI,EAAE;AACxF,wBAAgB,OAAO,MAAM,aAAa,UAAU,MAAM,KAAK,IAAI,MAAM,MAAM,KAAK,IAAI,IAAI,EAAE;AAE9F,mBAAW,YAAY;AACvB,oBAAY,QAAQ,mBAAmB,OAAO,MAAM,GAAG,aAAa,UAAU,MAAM,MAAM,IAAI,MAAM,MAAM,IAAI,KAAK,OAAO;AAC1H,mBAAW,YAAY;AAEvB;AAEA,mBAAW,YAAY;AAAA,MACzB;AAEA,iBAAW,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;AAC9C,sBAAgB,yBAAyB,MAAM,KAAK,IAAI,EAAE;AAC1D,kBAAY,SAAS,MAAM,KAAK,KAAK,OAAO;AAE5C,iBAAW,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW,IAAI,mCAAmC,KAAK;AAC1F,sBAAgB,0BAA0B,MAAM,KAAK,IAAI,EAAE;AAC3D,kBAAY,QAAQ,MAAM,KAAK,KAAK,OAAO;AAE3C,iBAAW,MAAM,KAAK,KAAK,IAAI,IAAI,SAAS;AAC5C,sBAAgB,8CAA8C,MAAM,KAAK,IAAI,EAAE;AAC/E,kBAAY,oBAAe,MAAM,KAAK,KAAK,OAAO;AAElD,mBAAa,UAAU;AACvB,iBAAW,YAAY;AAAA,IACzB;AAAA,IAEA,QAAQ;AACN,UAAI,QAAQ,MAAM,IAAI,IAAI,EAAE;AAAG,eAAO,KAAK,KAAK;AAEhD,UAAI,MAAM,aAAa;AACvB,mBAAa,UAAU;AACvB,UAAI,IAAI;AACR,iBAAW,UAAU,KAAK,YAAY;AACpC,cAAM,KAAK,KAAK,MAAM,IAAI,CAAC;AAC3B,cAAM,KAAK,IAAI;AAEf,YAAI,OAAO,QAAQ;AAAY;AAE/B,YAAI,QAAQ,aAAa,UAAU,MAAM,IAAI,MAAM,MAAM,IAAI,KAAK,EAAE,GAAG;AACrE,eAAK,aAAa,MAAM;AACxB;AAAA,QACF;AAEA;AAAA,MACF;AACA,mBAAa,UAAU;AAEvB,UAAI,QAAQ,MAAM,KAAK,KAAK,EAAE;AAAG,aAAK,aAAa,IAAI,SAAS,CAAC;AACjE,UAAI,QAAQ,MAAM,KAAK,KAAK,EAAE;AAAG,eAAO,KAAK,kDAAkD,QAAQ;AACvG,UAAI,QAAQ,MAAM,KAAK,KAAK,EAAE;AAAG,aAAK,aAAa,IAAI,WAAW,CAAC;AAAA,IACrE;AAAA,IAEA,OAAa;AACX,4CAAsC;AACtC,0BAAoB,MAAM;AAC1B,WAAK,aAAa,IAAI;AAAA,IACxB;AAAA,EACF;AA1Ga;;;ACGN,MAAM,OAAN,cAAkB,WAAW;AAAA,IAG1B;AAAA,IACA;AAAA,IACA,oBAAyC;AAAA,IAEjD,IAAI,aAA6B;AAC/B,aAAO,KAAK;AAAA,IACd;AAAA,IAEA,IAAI,WAAqB;AACvB,aAAO,KAAK;AAAA,IACd;AAAA,IAEA,IAAI,mBAAwC;AAC1C,aAAO,KAAK;AAAA,IACd;AAAA,IAEA,IAAI,iBAAiB,WAAyC;AAC5D,UAAI,KAAK,mBAAmB;AAC1B,aAAK,kBAAkB,OAAO;AAAA,MAChC;AACA,UAAI,OAAO,cAAc,UAAU;AACjC,cAAM,MAAM,KAAK,aAAa,KAAK,CAAC,MAAM,EAAE,SAAS,SAAS;AAC9D,YAAI,CAAC;AAAK,gBAAM,8BAA8B;AAC9C,aAAK,oBAAoB;AAAA,MAC3B,OAAO;AACL,aAAK,oBAAoB;AAAA,MAC3B;AAEA,0BAAoB;AACpB,8BAAwB;AAExB,UAAI,gBAAgB;AACpB,UAAI,KAAK,mBAAmB;AAC1B,wBAAgB,sBAAsB,KAAK,mBAAmB;AAC9D,aAAK,kBAAkB,KAAK;AAAA,MAC9B;AAGA,4BAAsB;AAAA,IACxB;AAAA,IAEA,IAAI,mBAA8B;AAChC,aAAO;AAAA,IACT;AAAA,IAEA,cAAc;AACZ,YAAM;AACN,UAAI,KAAI,UAAU;AAChB,cAAM,IAAI,MAAM,0BAA0B;AAAA,MAC5C;AAEA,WAAK,YAAY,IAAI,SAAS,IAAI;AAClC,WAAK,cAAc,CAAC,KAAK,SAAS;AAElC,WAAI,WAAW;AAAA,IACjB;AAAA,IAEA,IAAI,kBAAwB;AAC1B,aAAO;AAAA,IACT;AAAA,IAEA,OAAa;AAEX,iBAAW,UAAU,QAAQ,GAAG;AAC9B,YAAI,CAAC,OAAO;AAAgB;AAE5B,aAAK,YAAY,KAAK,IAAI,OAAO,eAAe,MAAM,CAAC;AAAA,MACzD;AAEA,WAAK,UAAU,aAAa,KAAK;AAEjC,UAAI,WAAW,WAAW,YAAY,YAAY;AAElD,mBAAa,4CAAgD,CAAC,MAAM,SAAS;AAC3E,YAAI,KAAK,mBAAmB;AAC1B,qBAAW,YAAY;AACvB,eAAK,kBAAkB,IAAI;AAC3B,qBAAW,YAAY;AAEvB,eAAK,UAAU;AAEf;AAAA,QACF;AAEA,aAAK,IAAI;AAET,mBAAW,cAAc,UAAU,CAACC,cAAa;AAC/C,qBAAW,MAAM,WAAW,QAAQA,SAAQ,GAAG,IAAI,IAAI,IAAI,SAAS,qBAAqB,QAAQ,mCAAmC,CAAC;AAAA,QACvI,CAAC;AAAA,MACH,CAAC;AAED,mBAAa,8CAAkD,CAAC,MAAM,SAAS;AAC7E,YAAI,KAAK,mBAAmB;AAC1B,eAAK,kBAAkB,MAAM;AAC7B;AAAA,QACF;AAEA,aAAK,IAAI;AAET,mBAAW,eAAe,UAAU,CAACA,cAAa;AAChD,uBAAa,IAAI,SAAS,IAAI,CAAC;AAAA,QACjC,CAAC;AAAA,MACH,CAAC;AAED,mBAAa,mDAAuD,CAAC,MAAM,SAAS;AAClF,YAAI,KAAK,mBAAmB;AAC1B,eAAK,kBAAkB,KAAK;AAC5B;AAAA,QACF;AACA,eAAO,KAAK,IAAI;AAAA,MAClB,CAAC;AAAA,IACH;AAAA,IAEA,YAAY;AACV,UAAI,WAAW;AACb,YAAI,SAAS,KAAK,SAAS,GAAG;AAC5B,qBAAW,KAAK;AAChB,qBAAW,YAAY;AACvB,qBAAW,cAAc;AACzB,qBAAW,UAAU;AACrB,qBAAW,OAAO,GAAG,MAAM;AAC3B,qBAAW,OAAO,KAAM,MAAM;AAC9B,qBAAW,OAAO,QAAQ,CAAC;AAC3B,qBAAW,OAAO,QAAQ,GAAI;AAC9B,qBAAW,OAAO;AAClB,qBAAW,YAAY;AACvB,qBAAW,cAAc;AACzB,qBAAW,SAAS,GAAG,KAAK,KAAK,EAAE;AACnC,qBAAW,WAAW,GAAG,KAAK,KAAK,EAAE;AACrC,mBAAS,MAAM,aAAa,UAAU,KAAK,KAAK,OAAO;AACvD,qBAAW,QAAQ;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAzIO,MAAM,MAAN;AAAM;AACX,gBADW,KACJ,YAAuB;;;ACPzB,MAAM,YAAN,cAAwB,aAAa;AAAA,IAC1C,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,WAAgC;AAClC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,IAAI,YAAuB;AACzB,aAAO;AAAA,QACI;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,qBAAqB;AAAA,UACnD,YAAY,CAAC,QAAS,KAAK,SAAS,oBAAoB;AAAA,QAC1D;AAAA,QACS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,oBAAoB;AAAA,UAClD,YAAY,CAAC,QAAS,KAAK,SAAS,mBAAmB;AAAA,QACzD;AAAA,QACS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,mBAAmB;AAAA,UACjD,YAAY,CAAC,QAAS,KAAK,SAAS,kBAAkB;AAAA,QACxD;AAAA,QACS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,yBAAyB;AAAA,UACvD,YAAY,CAAC,QAAS,KAAK,SAAS,wBAAwB;AAAA,QAC9D;AAAA,QACS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,kBAAkB;AAAA,UAChD,YAAY,CAAC,QAAS,KAAK,SAAS,iBAAiB;AAAA,QACvD;AAAA,QAQS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,8BAA8B;AAAA,UAC5D,YAAY,CAAC,QAAS,KAAK,SAAS,6BAA6B;AAAA,QACnE;AAAA,QACS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,aAAa;AAAA,UACb,SAAS,MAAM,KAAK,UAAU,2BAA2B;AAAA,UACzD,YAAY,CAAC,QAAS,KAAK,SAAS,0BAA0B;AAAA,QAChE;AAAA,MACF;AAAA,IACF;AAAA,IAEA,OAAa;AACX,YAAM,KAAK;AAAA,IACb;AAAA,EACF;AA7Ea;;;ACCN,MAAM,eAAN,cAA2B,WAAW;AAAA,IAC3C,IAAI,iBAAmC;AACrC,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,WAAgC;AAClC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,IAAI,kBAAkB;AACpB,aAA4B;AAAA,QAC1B,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,QAClB,iBAAiB;AAAA,QACjB,yBAAyB;AAAA,QACzB,gBAAgB;AAAA,QAEhB,4BAA4B;AAAA,QAC5B,uBAAuB;AAAA,MACzB;AAAA,IACF;AAAA,IAEA,OAAa;AAAA,IAAE;AAAA,IAEf,MAAY;AAAA,IAAE;AAAA,EAChB;AAzBa;;;ACCN,MAAM,cAAN,cAA0B,aAAa;AAAA,IACpC,iBAAiB;AAAA,IACjB,eAA6B,CAAC,IAAI,IAAI,EAAE;AAAA,IAEhD,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,WAAkC;AACpC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,UAAU,aAAa;AAAA,IAEvB,OAAO;AACL,YAAM,KAAK;AAEX,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,eAAe,IAAI;AACvB,YAAI,CAAC,cAAc,GAAG,iBAAiB,eAAe;AACpD,wBAAc,EAAE,eAAe,gBAAgB;AAAA,YAC7C,MAAwB,CAAC;AAAA,YACzB,MAAM;AAAA,UACR;AAAA,QACF;AACA,aAAK,aAAa,KAAK,cAAc,GAAG,iBAAiB,eAAe,QAAQ;AAAA,MAClF;AAEA,4CAAsC,OAAO,gBAAgB;AAAA,IAC/D;AAAA,IAEA,MAAM;AACJ,UAAI,OAAO,WAAW;AACtB,YAAM,IAAI;AACV,iBAAW,YAAY;AAEvB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,eAAe,IAAI;AAEvB,YAAI,KAAK,aAAa,OAAO;AAC3B,mBAAS,QAAQ,uBAAuB,IAAI,IAAI,gBAAgB,KAAK,QAAQ,YAAY,GAAG,KAAK,QAAQ,YAAY,GAAG,SAAS,MAAM;AACzI,YAAI,KAAK,aAAa,OAAO;AAC3B,mBAAS,KAAK,aAAa,IAAc,KAAK,QAAQ,YAAY,GAAG,KAAK,QAAQ,YAAY,GAAG,SAAS,MAAM;AAElH,aAAK,WAAW,wBAAwB,SAAS,cAAc,GAAG;AAClE,aAAK,WAAW,wBAAwB,SAAS,cAAc,GAAG;AAClE,aAAK,WAAW,0BAA0B,aAAa,cAAc,GAAG;AAAA,MAC1E;AAEA,UAAI,KAAK;AACP,iBAAS,KAAK,gBAAgB,aAAa,UAAU,KAAK,aAAa,UAAU,aAAa,OAAO,SAAS,MAAM;AAEtH,iBAAW,YAAY;AAAA,IACzB;AAAA,IAEA,QAAQ;AACN,YAAM,MAAM;AAEZ,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,eAAe,IAAI;AAEvB,aAAK,qBAAqB,YAAY;AACtC,aAAK,sBAAsB,YAAY;AACvC,aAAK,uBAAuB,YAAY;AAAA,MAC1C;AAAA,IACF;AAAA,IAEA,OAAO;AACL,4CAAsC;AACtC,0BAAoB,MAAM;AAC1B,WAAK,iBAAiB;AACtB,YAAM,KAAK;AAAA,IACb;AAAA,IAEA,YAAY,WAAmB,aAAqB;AAClD,UAAI,YAAY,KAAK,YAAY,GAAG;AAClC,gBAAQ,sBAAsB,WAAW;AACzC,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,OAAO,KAAK,cAAc,GAAG,iBAAiB,UAAU,EAAE,QAAQ;AACrE,sBAAc,EAAE,eAAe,aAAgC,CAAC;AAAA,MAClE;AAEA,UAAI,WAA6B;AAAA,QAC/B,cAAc,cAAc,EAAE;AAAA,QAC9B,iBAAiB,cAAc,EAAE;AAAA,MACnC;AAEA,oBAAc,EAAE,eAAe,aAAa;AAAA,QAC1C,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,YAAY,WAAmB;AAC7B,UAAI,YAAY,KAAK,YAAY,GAAG;AAClC,gBAAQ,sBAAsB,WAAW;AACzC,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,OAAO,KAAK,cAAc,GAAG,iBAAiB,UAAU,EAAE,QAAQ;AACrE,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,cAAc,EAAE,eAAe,WAAW;AACrD,UAAI,CAAC,MAAM;AACT,eAAO;AAAA,MACT;AAEA,UAAI,MAAM;AACR,sBAAc,EAAE,eAAe,KAAK;AACpC,sBAAc,EAAE,kBAAkB,KAAK;AAAA,MACzC;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,cAAc,WAAmB;AAC/B,UAAI,YAAY,KAAK,YAAY,GAAG;AAClC,gBAAQ,sBAAsB,WAAW;AACzC,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,OAAO,KAAK,cAAc,GAAG,iBAAiB,UAAU,EAAE,QAAQ;AACrE,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,KAAK,cAAc,GAAG,iBAAiB,UAAU,EAAE,QAAQ;AACpE,sBAAc,EAAE,eAAe,aAAgC,CAAC;AAChE,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IAEA,qBAAqB,cAAsB;AACzC,UAAI,cAAc,eAAe;AACjC,UAAI,QAAQ,KAAK,QAAQ,YAAY,IAAI,KAAK,KAAK,QAAQ,YAAY,IAAI,IAAI,KAAK,EAAE,GAAG;AACvF,YAAI,eAAe,OAAO,QAAQ,iBAAiB,CAAC;AAEpD,YAAI,iBAAiB;AAAM;AAC3B,aAAK,aAAa,eAAe;AACjC,YAAI,KAAK,aAAa,iBAAiB,IAAI;AACzC,eAAK,YAAY,cAAc,EAAE;AACjC,eAAK,iBAAiB,GAAG,QAAQ,uBAAuB,KAAK,gBAAgB,QAAQ,8BAA8B;AAAA,QACrH;AACA,YAAI,KAAK,aAAa,iBAAiB,IAAI;AACzC,eAAK,YAAY,cAAc,KAAK,aAAa,YAAsB;AACvE,eAAK,iBAAiB,GAAG,QAAQ,uBAAuB,MAAM,KAAK,aAAa,iBAAiB;AAAA,YAC/F;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AAAA,IACF;AAAA,IAEA,sBAAsB,cAAsB;AAC1C,UAAI,cAAc,eAAe;AACjC,UAAI,QAAQ,KAAK,QAAQ,YAAY,IAAI,KAAK,KAAK,QAAQ,YAAY,IAAI,IAAI,KAAK,EAAE,GAAG;AACvF,YAAI,CAAC,KAAK,YAAY,YAAY,GAAG;AACnC,eAAK,iBAAiB,GAAG,QAAQ,uBAAuB,KAAK,gBAAgB,QAAQ,iCAAiC;AACtH;AAAA,QACF;AACA,YAAI,KAAK,aAAa,iBAAiB;AACrC,eAAK,iBAAiB,GAAG,QAAQ,uBAAuB,KAAK,gBAAgB,QAAQ,+BAA+B;AACtH,YAAI,KAAK,aAAa,iBAAiB;AACrC,eAAK,iBAAiB,GAAG,QAAQ,uBAAuB,MAAM,KAAK,aAAa,iBAAiB;AAAA,YAC/F;AAAA,UACF;AACF;AAAA,MACF;AAAA,IACF;AAAA,IAEA,uBAAuB,cAAsB;AAC3C,UAAI,cAAc,eAAe;AACjC,UAAI,QAAQ,KAAK,QAAQ,YAAY,IAAI,KAAK,KAAK,QAAQ,YAAY,IAAI,IAAI,KAAK,EAAE,GAAG;AACvF,YAAI,KAAK,aAAa,iBAAiB;AAAM;AAE7C,YAAI,KAAK,cAAc,YAAY,GAAG;AACpC,cAAI,KAAK,aAAa,iBAAiB,IAAI;AACzC,iBAAK,iBAAiB,GAAG,QAAQ,uBAAuB,KAAK,gBAAgB,QAAQ,gCAAgC;AACrH;AAAA,UACF;AACA,cAAI,KAAK,aAAa,iBAAiB,IAAI;AACzC,iBAAK,iBAAiB,GAAG,QAAQ,uBAAuB,MAAM,KAAK,aAAa,iBAAiB;AAAA,cAC/F;AAAA,YACF;AACA,iBAAK,aAAa,eAAe;AACjC;AAAA,UACF;AAAA,QACF;AAEA,YAAI,CAAC,KAAK,cAAc,YAAY,GAAG;AACrC,eAAK,iBAAiB,GAAG,QAAQ,uBAAuB,KAAK,gBAAgB,QAAQ,4CAA4C;AACjI;AAAA,QACF;AACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AA5Ma;;;ACDN,MAAM,iBAAN,cAA6B,WAAW;AAAA,IAC7C,IAAI,WAAkC;AACpC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,IAAI,iBAAmC;AACrC,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,kBAAkB;AACpB,aAA8B,CAAC;AAAA,IACjC;AAAA,IAEA,OAAa;AAAA,IAAC;AAAA,IAEd,MAAY;AAAA,IAAC;AAAA,EACf;AAhBa;;;ACDN,WAAS,oBAAoB,MAAwD;AAC1F,QAAI,iBAAiB,iBAAiB,eAAe;AACrD,aAAS,KAAK,MAAM;AAClB,UAAI,EAAE;AAAiB,0BAAkB,EAAE,cAAc,EAAE,gBAAgB;AAAA,eAClE,EAAE;AAAiB,0BAAkB,EAAE,cAAc,EAAE,gBAAgB;AAAA,eACvE,EAAE;AAAgB,wBAAgB,EAAE;AAAA,eACpC,EAAE;AAAc,uBAAe,EAAE;AAAA,IAC5C;AACA,QAAI,oBAAoB,UAAa,oBAAoB,UAAa,kBAAkB,UAAa,iBAAiB;AACpH,aAAO;AACT,WAAO,EAAE,iBAAiB,iBAAiB,eAAe,aAAa;AAAA,EACzE;AAXgB;AAaT,WAAS,aAAa,KAAa;AACxC,WACE,IAAI,KAAK,EAAE,SAAS,KACpB,8BAA8B,MAC9B,CAAC,IAAI,WAAW,GAAG,KACnB,CAAC,IAAI,WAAW,GAAG,KACnB,CAAC,IAAI,WAAW,GAAG,KACnB,CAAC,IAAI,WAAW,GAAG,KACnB,CAAC,IAAI,WAAW,GAAG,KACnB,CAAC,IAAI,WAAW,GAAG,KACnB,CAAC,IAAI,WAAW,MAAM;AAAA,EAE1B;AAZgB;AAcT,WAAS,6BAA6B,SAAiB,KAAc,QAAoB;AAC9F,QAAI,CAAC;AAAK;AAEV,UAAM,OAAO,cAAc,EAAE;AAC7B,QAAI,KAAK,yBAAyB,aAAa,OAAO,GAAG;AACvD,aAAO,yBAAyB,SAAS,GAAG;AAAA,IAC9C;AAEA,WAAO,sBAAsB,GAAG;AAAA,EAClC;AATgB;AAWT,WAAS,gBAAgB;AAC9B,iCAA6B,aAAa,WAAW,GAAG,UAAU,QAAQ,GAAG,MAAM;AAAA,EACrF;AAFgB;AAIT,WAAS,eAAe;AAC7B,QAAI,aAAa,aAAa,WAAW,CAAC;AAAG,mCAA6B,aAAa,WAAW,GAAG,GAAG;AAAA,EAC1G;AAFgB;AAIT,WAAS,gBAAgB,MAAoB,OAAwC;AAC1F,UAAM,SAAS,aAAa,KAAK,gBAAgB,YAAY;AAC7D,UAAM,WAAW,cAAc,OAAO,SAAS;AAE/C,QAAI,SAAS,KAAK,EAAE,MAAM,KAAK;AAC7B,aAAO,WAAW,SAAS,MAAM,CAAC,GAAG,MAAM;AAAA,IAC7C;AAEA,UAAM,eAAe;AAErB,iCAA6B,aAAa,WAAW,GAAG,cAAc,MAAM;AAAA,EAC9E;AAXgB;AAaT,WAAS,WAAW,QAAgB,SAA2B,MAAM;AAC1E,QAAI,MAAM,gBAAgB,QAAQ,MAAM;AACxC,eAAW,gBAAgB;AAAA,MACzB,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAY;AAAA,QACV,EAAE,KAAK,QAAQ,MAAM,MAAM;AAAA,QAC3B,EAAE,KAAK,4BAAQ,MAAM,MAAM;AAAA,QAC3B,EAAE,KAAK,4BAAQ,MAAM,MAAM;AAAA,QAC3B,EAAE,KAAK,QAAQ,MAAM,MAAM;AAAA,QAC3B,EAAE,KAAK,UAAU,MAAM,MAAM;AAAA,QAC7B,EAAE,KAAK,yFAAmB,MAAM,MAAM;AAAA,QACtC,EAAE,KAAK,OAAO,MAAM,IAAI;AAAA,MAC1B;AAAA,IACF,CAAC;AAAA,EACH;AAfgB;AAiBhB,WAAS,yBAAyB,SAAiB,KAAa;AAC9D,QAAI,CAAC;AAAK;AACV,iBAAa,aAAa,UAAU,SAAS,GAAG;AAChD,qBAAiB;AAAA,EACnB;AAJS;AAMT,WAAS,sBAAsB,KAAa;AAC1C,QAAI,CAAC;AAAK;AAEV,QAAI,mCAAmC;AACvC,sBAAkB,EAAE;AACpB,QAAI,SAAS,aAAa,WAAW;AAErC,iBAAa,aAAa,GAAG;AAC7B,qBAAiB;AACjB,iBAAa,aAAa,MAAM;AAChC,sBAAkB,gCAAgC;AAAA,EACpD;AAXS;AAaT,WAAS,gBAAgB,KAAa,QAAoB;AACxD,UAAM,iBAAiB,4BAA4B,MAAM;AACzD,UAAM,aAAa,kBAAkB,MAAM;AAE3C,UAAM,gBAAgB,mBAAmB,YAAY,QAAQ;AAC7D,UAAM,mBAAmB,mBAAmB,YAAY,QAAQ;AAChE,UAAM,kBAAkB,mBAAmB,YAAY,QAAQ;AAE/D,UAAM,oBAAoB,4BAA4B,MAAM;AAC5D,UAAM,aAAa,kBAAkB,MAAM;AAE3C,UAAM,gBAAgB,sBAAsB,YAAY,QAAQ;AAChE,UAAM,mBAAmB,sBAAsB,YAAY,QAAQ;AACnE,UAAM,kBACJ,eAAe,aAAc,mBAAmB,YAAY,YAAY,YAAa,sBAAsB,YAAY,QAAQ;AAEjI,WAAO,IACJ,WAAW,oBAAoB,UAAU,EACzC,WAAW,6BAA6B,aAAa,EACrD,WAAW,kCAAkC,gBAAgB,EAC7D,WAAW,iCAAiC,eAAe,EAC3D,WAAW,oBAAoB,UAAU,EACzC,WAAW,mCAAmC,aAAa,EAC3D,WAAW,wCAAwC,gBAAgB,EACnE,WAAW,uCAAuC,eAAe;AAAA,EACtE;AAzBS;AA2BT,WAAS,eAAe,KAAe;AACrC,UAAM,MAAM,aAAa,IAAI,MAAM;AAEnC,WAAO,IAAI;AAAA,EACb;AAJS;AAMT,WAAS,UAAU,UAAyD;AAC1E,WAAO,eAAe,cAAc,EAAE,gBAAgB,eAAe,SAAS;AAAA,EAChF;AAFS;AAeT,WAAS,cAAc,WAAqB;AAC1C,WAAO,eAAe,SAAS;AAAA,EACjC;AAFS;;;AC7IT,MAAM,uBAAuB,6BAAM;AACjC,UAAM,gBAAgB,wBAAC,aAAqB;AAC1C,YAAM,OAAO,OAAO,IAAI,UAAU,OAAO,EAAE,aAAa,QAAQ;AAEhE,cAAQ;AAAA,aACD;AACH,iBAAO,KAAK,YAAY,KAAK;AAAA,aAC1B;AACH,iBAAO,KAAK,YAAY,KAAK;AAAA,aAC1B;AACH,iBAAO,KAAK,YAAY,KAAK,cAAc,KAAK,WAAW;AAAA,aACxD;AACH,iBAAO,KAAK,YAAY,KAAK,cAAc,KAAK,WAAW;AAAA;AAE3D;AAAA;AAAA,IAEN,GAfsB;AAiBtB,QACE,cAAc,EAAE,aAAa,+BAC5B,cAAc,4BAA4B,KACzC,cAAc,2BAA2B,KACzC,cAAc,uBAAuB,KACrC,cAAc,wBAAwB,IACxC;AACA,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT,GA5B6B;AA8BtB,MAAM,eAAe,wBAAC,MAAiB;AAC5C,QAAI,CAAC,cAAc,EAAE,aAAa;AAAmB;AACrD,QAAI,CAAC,cAAc,EAAE,aAAa;AAAkB;AACpD,QAAI,kBAAkB,cAAc,CAAC;AAAQ;AAC7C,QAAI,OAAO,iBAAiB,EAAE;AAAc;AAC5C,QAAI,CAAC,cAAc,EAAE,gBAAgB,eAAe;AAAQ;AAC5D,QAAI;AAAsB;AAC1B,QAAI,OAAO,OAAO,CAAC,qBAAqB;AAAG;AAE3C,oBAAgB,WAAW;AAC3B,kBAAc;AAAA,EAChB,GAX4B;AAarB,MAAM,iBAAiB,wBAAC,MAAoB,UAA+B;AAChF,QAAI,CAAC,cAAc,EAAE,aAAa;AAAmB;AACrD,QAAI,CAAC,cAAc,EAAE,aAAa;AAAkB;AACpD,QAAI,kBAAkB,cAAc,CAAC;AAAQ;AAC7C,QAAI,KAAK,gBAAgB,iBAAiB,OAAO;AAAc;AAC/D,QAAI,CAAC,SAAS,CAAC,OAAO;AAAW;AACjC,QAAI,CAAC,MAAM,eAAe,KAAK,gBAAgB,iBAAiB,KAAK,gBAAgB;AAAc;AACnG,QAAI,OAAO,UAAU,SAAS,KAAK,gBAAgB,YAAY;AAAG;AAClE,QAAI,OAAO,OAAO,CAAC,qBAAqB;AAAG;AAE3C,oBAAgB,MAAM,KAAK;AAAA,EAC7B,GAX8B;AAavB,MAAM,cAAc,wBAAC,SAAc;AACxC,QAAI,CAAC,cAAc,EAAE,aAAa;AAAmB;AACrD,QAAI,CAAC,cAAc,EAAE,aAAa;AAAgB;AAClD,QAAI,kBAAkB,cAAc,CAAC;AAAQ;AAC7C,QAAI,EAAE,iBAAiB,cAAc,aAAa,QAAQ,KAAK;AAAe;AAC9E,QAAI,OAAO,OAAO,CAAC,qBAAqB;AAAG;AAE3C,iBAAa;AAAA,EACf,GAR2B;;;ACxDpB,MAAM,gBAAN,cAA2B,aAAa;AAAA,IAC7C,gBAAwB;AAAA,IACxB,cAAuB;AAAA,IACvB,YAAqB;AAAA,IACrB,cAAmC,CAAC;AAAA,IAEpC,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,OAAe;AACjB,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,WAAmC;AACrC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,IAAI,wBAAyD;AAC3D,UAAI,UAAU,KAAK,WAAW,GAAG,QAAQ;AACzC,UAAI,YAAY,KAAK,aAAa,GAAG,QAAQ;AAC7C,UAAI,QAAQ,KAAK,kBAAkB,SAAS,SAAS;AACrD,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,aAAyB;AAC3B,UAAI,CAAC,OAAO;AAAY,eAAO,CAAC;AAAA;AAE9B,eAAO,wBAAwB,cAAc,OAAO,WAAW,MAAM,KAAK,EAAE;AAAA,UAAO,CAAC,MAClF,KAAK,0BAA0B,KAAK,oBAAoB,GAAG,OAAO,UAAW,CAAC;AAAA,QAChF;AAAA,IACJ;AAAA,IAEA,IAAI,qBAAkC;AACpC,aAAO;AAAA,QACL,CAAC;AAAA,QACD;AAAA,UACW;AAAA,YACP,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,SAAS,MAAM,cAAa,eAAe,KAAK,UAAU,gBAAgB,GAAG;AAAA,YAC7E,YAAY,CAAC,QAAQ;AACnB,mBAAK,SAAS,eAAe,MAAM,cAAa,cAAc,GAAG,KAAK,KAAK,SAAS,eAAe;AAAA,YACrG;AAAA,UACF;AAAA,UACS;AAAA,YACP,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,SAAS,MAAM,cAAa,eAAe,KAAK,UAAU,gBAAgB,KAAK;AAAA,YAC/E,YAAY,CAAC,QAAQ;AACnB,mBAAK,SAAS,eAAe,QAAQ,cAAa,cAAc,GAAG,KAAK,KAAK,SAAS,eAAe;AAAA,YACvG;AAAA,UACF;AAAA,UACS;AAAA,YACP,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,SAAS,MAAM,cAAa,eAAe,KAAK,UAAU,gBAAgB,MAAM;AAAA,YAChF,YAAY,CAAC,QAAQ;AACnB,mBAAK,SAAS,eAAe,SAAS,cAAa,cAAc,GAAG,KAAK,KAAK,SAAS,eAAe;AAAA,YACxG;AAAA,UACF;AAAA,UACS;AAAA,YACP,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,SAAS,MAAM,cAAa,eAAe,KAAK,UAAU,gBAAgB,GAAG;AAAA,YAC7E,YAAY,CAAC,QAAQ;AACnB,mBAAK,SAAS,eAAe,MAAM,cAAa,cAAc,GAAG,KAAK,KAAK,SAAS,eAAe;AAAA,YACrG;AAAA,UACF;AAAA,UACS;AAAA,YACP,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,aAAa;AAAA,YACb,SAAS,MAAM,cAAa,eAAe,KAAK,UAAU,gBAAgB,MAAM;AAAA,YAChF,YAAY,CAAC,QAAQ;AACnB,mBAAK,SAAS,eAAe,SAAS,cAAa,cAAc,GAAG,KAAK,KAAK,SAAS,eAAe;AAAA,YACxG;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IAyBA,OAAO,wBAAwB,UAAwB,OAAoC;AACzF,YAAM,gBAAgB,mBAAmB,OAAO,WAAW,EAAE,KAAK,CAAC,QAAQ,IAAI,SAAS,QAAQ;AAEhG,aAAO,eAAe,cACjB,OAAO,cAAc,eAAe,YAAY,cAAc,SAAS,cAAc,YAAY,SAAS,KAAK,IAChH;AAAA,IACN;AAAA,IAEA,OAAO;AACL,UAAI,CAAC,KAAK;AAAU,iBAAS,uBAAuB;AACpD,YAAM,KAAK;AACX,4BAAsB,eAAe;AAErC,WAAK,YAAY,eAAe;AAEhC,4CAAsC,OAAO,gBAAgB;AAAA,IAC/D;AAAA,IAEA,MAAM;AACJ,UAAI,OAAO,WAAW;AAEtB,iBAAW,YAAY;AAEvB,YAAM,IAAI;AAEV,UAAI,yBAAyB,GAAG;AAE9B,iBAAS,SAAS,YAAY;AAC5B,cAAI,MAAM,OAAO,KAAK,CAAC,MAAM,wBAAwB,wBAAwB,cAAc,MAAM,IAAI,EAAE;AACrG,+BAAmB,QAAQ,MAAM,MAAM,KAAK,IAAI,IAAI,GAAG,aAAa,GAAG,KAAK,aAAa,MAAM,IAAI,CAAC;AAAA,QACxG;AAEA,YAAI,OAAO,cAAc,MAAM;AAC7B,cAAI,WAAW,KAAK,WAAW,KAAK,iBAAiB;AACrD,6BAAmB,QAAQ,OAAO,WAAW,MAAM,KAAK,IAAI,IAAI,GAAG,MAAM;AACzE,qBAAW,YAAY;AACvB;AAAA,YACE;AAAA,YACA,KAAK,QAAQ,CAAC;AAAA,YACd;AAAA,YACA;AAAA,YACA,KAAK,iBAAiB,UAAU,OAAO,UAAU;AAAA,YACjD;AAAA,YACA;AAAA,YACA,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AACA,qBAAW,YAAY;AACvB,cAAI,CAAC,CAAC,UAAU;AACd,gBAAI,QAAQ,YAAY,OAAO,cAAc,eAAe,SAAS,OAAO;AAC5E,gBAAI,SAAS,KAAK,QAAQ,MAAM,IAAI,IAAI;AACtC,sBAAQ;AAAA,YACV;AACA,4BAAgB,OAAO,MAAM,KAAK,QAAQ,CAAC,IAAI,IAAI,KAAK,GAAG;AAC3D,0BAAc,MAAM,KAAK,QAAQ,CAAC,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC9D,iBAAK,oBAAoB;AAAA,UAC3B;AAAA,QACF,OAAO;AACL,mBAAS,QAAQ,4BAA4B,GAAG,KAAK,QAAQ,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,SAAS,OAAO;AAAA,QACpG;AAAA,MACF;AAEA,UAAI,yBAAyB;AAAG,aAAK,YAAY,eAAe;AAChE,iBAAW,YAAY;AAAA,IACzB;AAAA,IAEA,QAAQ;AACN,UAAI,MAAM,aAAa;AACvB,mBAAa,UAAU;AACvB,YAAM,MAAM;AAEZ,UAAI,yBAAyB,GAAG;AAC9B,mBAAW,SAAS,YAAY;AAC9B,cAAI,MAAM,OAAO,KAAK,CAAC,MAAM,wBAAwB,wBAAwB,cAAc,MAAM,IAAI,EAAE,QAAQ;AAC7G,kBAAM,OAAO,MAAM,KAAK,KAAK,CAAC,MAAM,oBAAoB,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC;AAClF,gBAAI,MAAM;AAER,kBAAI,OAAO;AAAY,qBAAK,kBAAkB,KAAK,qBAAqB;AAExE,kBAAI,OAAO,eAAe;AAAO,uBAAO,KAAK,cAAc;AAC3D,qBAAO,aAAa;AACpB,kBAAI,aAAa,KAAK;AACtB,kBAAI,KAAK,iBAAiB,WAAW;AAAQ,qBAAK,gBAAgB;AAClE,mBAAK,kBAAkB,KAAK,qBAAqB;AAAA,YACnD;AAAA,UACF;AAAA,QACF;AAEA,YAAI,OAAO,cAAc,MAAM;AAC7B,cAAI,aAAa,KAAK;AAEtB,cAAI,QAAQ,KAAK,QAAQ,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,KAAK,EAAE,GAAG;AACtD,iBAAK,kBAAkB,KAAK,qBAAqB;AACjD,gBAAI,UAAU,KAAK,QAAQ,CAAC,IAAI;AAAK,mBAAK,iBAAiB,WAAW,SAAS,KAAK,gBAAgB,KAAK,WAAW;AAAA;AAC/G,mBAAK,iBAAiB,KAAK,gBAAgB,KAAK,WAAW;AAChE,iBAAK,kBAAkB,KAAK,qBAAqB;AAAA,UACnD;AAAA,QACF;AAEA,aAAK,yBAAyB;AAAA,MAChC;AAEA,mBAAa,UAAU;AAAA,IACzB;AAAA,IAEA,OAAO;AACL,WAAK,kBAAkB,KAAK,qBAAqB;AACjD,oBAAc,eAAe;AAE7B,4CAAsC;AACtC,0BAAoB,MAAM;AAC1B,aAAO,aAAa;AACpB,YAAM,KAAK;AAAA,IACb;AAAA,IAEA,aAAa;AACX,aAAO,KAAK,WAAW,KAAK;AAAA,IAC9B;AAAA,IAEA,eAAe;AACb,aAAO,OAAO;AAAA,IAChB;AAAA,IAEA,aAAa,WAA2B;AACtC,UAAI,mBAAmB,KAAK,UAAU,eAAe,KAAK,CAAC,MAAM,EAAE,UAAU,SAAS,SAAS,CAAC;AAChG,aAAO,mBAAmB,cAAc;AAAA,IAC1C;AAAA,IAEA,kBAAkB,SAAiB,SAAkD;AACnF,aAAO,KAAK,UAAU,eAAe,KAAK,CAAC,MAAM,EAAE,WAAW,WAAW,EAAE,UAAU,SAAS,OAAO,CAAC;AAAA,IACxG;AAAA,IAEA,0BAA0B,SAAiB;AACzC,UAAI,CAAC;AAAoB,+BAAuB;AAChD,UAAI,CAAC;AAAoB;AAEzB,eAAS,IAAI,GAAG,IAAI,mBAAmB,QAAQ;AAAK,YAAI,mBAAmB,GAAG,MAAM;AAAS,iBAAO;AACpG,aAAO;AAAA,IACT;AAAA,IAEA,oBAAoB,UAAoB,OAAmB;AACzD,UAAI,YAAY,MAAM;AACtB,UAAI,OAAO,SAAS,GAAG;AACrB,YAAI,aAAa;AAAa,sBAAY;AAC1C,YAAI,aAAa;AAAsB,sBAAY;AAAA,MACrD;AAEA,aAAO,mBAAmB,aAAa,SAAS;AAAA,IAClD;AAAA,IAEA,iBAAiB,UAAoB,OAAmB;AACtD,UAAI,CAAC;AAAU,eAAO;AAEtB,UAAI,MAAM,KAAK,oBAAoB,UAAU,KAAK;AAElD,aAAO,uBAAuB,GAAG;AAAA,IACnC;AAAA,IAEA,gBAAgB;AACd,aAAO,aAAa;AACpB,WAAK,YAAY,eAAe;AAAA,IAClC;AAAA,IAEA,kBAAkB,OAAwC;AACxD,WAAK,gBAAgB,iBAAiB,cAAa,eAAe,OAAO,SAAqB,KAAK,CAAC,CAAC;AAAA,IACvG;AAAA,IAEA,kBAAkB,OAAwC;AACxD,UAAI,YAAY,aAAa,eAAe;AAC5C,UAAI;AACJ,UAAI;AACJ,YAAM,iBAAiB,cAAa,cAAc,SAAS;AAE3D,UAAI,aAAa,MAAM,gBAAgB;AACrC,YAAI,CAAC;AAAO,kBAAQ,KAAK,oBAAoB,KAAK;AAClD,YAAI,CAAC,KAAK,WAAW;AACnB,kBAAQ,KAAK,WAAW,OAAO,cAAc;AAC7C,oBAAU,KAAK,aAAa,OAAO,cAAc;AAAA,QACnD;AAEA,YAAI,KAAK,aAAa,EAAE,SAAS;AAAU,gBAAM,YAAY,kBAAkB,MAAM;AAErF,aAAK,SAAS,cAAc,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,cAAc,EAAE,OAAO,CAAC;AAAA,MAC/E;AAAA,IACF;AAAA,IAEA,WAAW,OAA4B;AACrC,UAAI,CAAC;AAAO;AACZ,UAAI,OAAO,KAAK,UAAU,eAAe,KAAK,CAAC,QAAQ,IAAI,YAAY,MAAM,WAAW,IAAI,cAAc,MAAM,SAAS;AAEzH,UAAI,MAAM,UAAU,UAAU,GAAG;AAC/B,aAAK,SAAS,gBAAgB,KAAK,UAAU,cAAc,OAAO,CAAC,MAAM;AACvE,iBAAO,EAAE,EAAE,WAAW,MAAM,WAAW,EAAE,aAAa,MAAM;AAAA,QAC9D,CAAC;AAAA,MACH,OAAO;AACL,cAAM,WAAW,OAAO,MAAM,WAAW,QAAQ,KAAK,aAAa,GAAG,IAAI,GAAG,CAAC;AAAA,MAChF;AAEA,WAAK,gBAAgB,iBAAiB,CAAC,CAAC;AAAA,IAC1C;AAAA,IAWA,WAAW,OAA4B,gBAA0B;AAE/D,YAAM,4BAA4B,KAAK,UAAU,cAAc;AAG/D,UAAI,eAAe,KAAK,UAAU,eAAe,KAAK,CAAC,QAAQ;AAC7D,eACE,IAAI,WAAW,KAAK,WAAW,EAAE,QACjC,CAAC,IAAI,UAAU,SAAS,KAAK,aAAa,EAAE,IAAI,MAC/C,KAAK,UAAU,IAAI,SAAS,MAAM,6BACjC,IAAI,gBAAgB,MAAM;AAAA,MAEhC,CAAC;AAED,UAAI,CAAC;AAAc,eAAO;AAE1B,mBAAa,UAAU,KAAK,KAAK,aAAa,GAAG,IAAI;AAErD,YAAM,OAAO,KAAK,UAAU,eAAe,KAAK,CAAC,QAAQ,IAAI,YAAY,MAAM,WAAW,IAAI,cAAc,MAAM,SAAS;AAC3H,YAAM,WAAW,OAAO,MAAM,WAAW,QAAQ,KAAK,aAAa,GAAG,IAAI,GAAG,CAAC;AAE9E,WAAK,WAAW,KAAK;AACrB,aAAO;AAAA,IACT;AAAA,IAWA,aAAa,OAA4B,gBAA0B;AAEjE,YAAM,8BAA8B,KAAK,UAAU,cAAc;AAGjE,UAAI,iBAAiB,KAAK,UAAU,eAAe,KAAK,CAAC,QAAQ;AAC/D,eACE,IAAI,WAAW,KAAK,WAAW,EAAE,QACjC,MAAM,QAAQ,IAAI,SAAS,KAC3B,IAAI,UAAU,SAAS,KACvB,IAAI,UAAU,SAAS,KAAK,aAAa,EAAE,IAAI,MAC9C,KAAK,UAAU,IAAI,SAAS,MAAM,+BACjC,IAAI,gBAAgB,MAAM;AAAA,MAEhC,CAAC;AAED,UAAI,CAAC;AAAgB,eAAO;AAE5B,qBAAe,UAAU,OAAO,eAAe,UAAU,QAAQ,KAAK,aAAa,GAAG,IAAI,GAAG,CAAC;AAE9F,YAAM,WAAW,KAAK,eAAe,KAAK,WAAW,EAAE,MAAM,KAAK,aAAa,EAAE,MAAM,gBAAgB,MAAM,WAAW;AACxH,WAAK,SAAS,cAAc,KAAK,QAAQ;AAEzC,aAAO;AAAA,IACT;AAAA,IAEA,eAAe,SAAiB,SAAiB,WAAsB,aAA4C;AACjH,aAA4B;AAAA,QAC1B;AAAA,QACA,WAAW,CAAC,OAAO;AAAA,QACnB,WAAW,aAAa,CAAC,EAAE;AAAA,QAC3B,aAAa,eAAe;AAAA,MAC9B;AAAA,IACF;AAAA,IAEA,oBAAoB,UAAgE;AAClF,UAAI,CAAC,UAAU;AACb,mBAAW,KAAK,eAAe,KAAK,WAAW,GAAG,MAAM,KAAK,aAAa,GAAG,QAAQ,EAAE;AACvF,aAAK,SAAS,cAAc,KAAK,QAAQ;AACzC,aAAK,kBAAkB,KAAK,qBAAqB;AAAA,MACnD;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,UAAU,OAAwC;AAChD,WAAK,cAAc;AAAA,IACrB;AAAA,IAEA,WAAW,OAAwC;AACjD,UAAI,OAAO,KAAK,KAAK,WAAW,EAAE,WAAW;AAAG;AAChD,UAAI,CAAC;AAAO,gBAAQ,KAAK,oBAAoB,KAAK;AAElD,YAAM,YAAY,KAAK,YAAY,aAAa,CAAC,EAAE;AACnD,WAAK,kBAAkB,KAAK;AAC5B,UAAI,cAAa,wBAAwB,KAAK,WAAW,GAAG,MAAM,KAAK,aAAa,GAAG,IAAI;AACzF,cAAM,cAAc,KAAK,YAAY;AAAA,IACzC;AAAA,IAEA,2BAA2B;AACzB,UAAI,QAAQ,KAAK;AACjB,WAAK,cAAc,cAAa,wBAAwB,KAAK,WAAW,GAAG,MAAM,KAAK,aAAa,GAAG,IAAI;AAG1G,UAAI,CAAC,CAAC,SAAS,QAAQ,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,EAAE,GAAG;AACrD,aAAK,WAAW,KAAK;AAAA,MACvB;AAEA,UAAI,QAAQ,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,EAAE,GAAG;AAC1C,aAAK,UAAU,KAAK;AAAA,MACtB;AAEA,UAAI,QAAQ,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,EAAE,GAAG;AAC1C,aAAK,WAAW,KAAK;AAAA,MACvB;AAGA,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE,KAAK,KAAK,aAAa;AACpF,gBAAQ,KAAK,oBAAoB,KAAK;AACtC,cAAM,cAAc,CAAC,MAAM;AAAA,MAC7B;AAGA,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE,GAAG;AAChE,aAAK,YAAY,CAAC,KAAK;AAAA,MACzB;AAAA,IACF;AAAA,IAEA,sBAAsB;AACpB,UAAI,gBAAgB,KAAK;AAEzB,UAAI,CAAC,CAAC,eAAe;AACnB,mBAAW,YAAY;AACvB,mBAAW,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,IAAI,KAAK,SAAS,QAAW,QAAQ,4BAA4B,CAAC;AACxG,mBAAW,YAAY;AAAA,MACzB;AAEA,iBAAW,YAAY;AACvB,iBAAW,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,SAAS,QAAW,QAAQ,2BAA2B,CAAC;AACtG,sBAAgB,oBAAoB,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,EAAE;AACjE,iBAAW,YAAY;AAEvB,iBAAW,YAAY;AACvB,iBAAW,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,SAAS,QAAW,QAAQ,4BAA4B,CAAC;AACvG,sBAAgB,oBAAoB,MAAM,KAAK,QAAQ,CAAC,GAAG,IAAI,EAAE;AACjE,iBAAW,YAAY;AAGvB,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,eAAe,eAAe;AAAA,QAC9B;AAAA,QACA,CAAC,KAAK;AAAA,MACR;AAGA,WAAK,aAAa,qCAAqC,qCAAqC,KAAK,aAAa,OAAO,CAAC;AAEtH,WAAK,gBAAgB,iBAAiB,oCAAoC,oCAAoC,GAAG,KAAK;AAAA,IACxH;AAAA,IAEA,gBAAgB,WAAmB,OAAY;AAC7C,UAAI,UAAU,SAAS,eAAe,SAAS;AAC/C,UAAI,CAAC,CAAC,WAAW,SAAS;AAAM,gBAAQ,QAAQ;AAAA,IAClD;AAAA,IAEA,gBAAgB,WAAmB,OAAe,aAAqB,OAAe,WAAoB,OAAO;AAC/G,UAAI,aAAa,QAAQ,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK,IAAI,IAAI,KAAK,EAAE;AAC/E,YAAM,UAAU,CAAC,CAAC,cAAa,cAAc,aAAa,SAAS,CAAC;AAEpE;AAAA,QACE,UAAU,GAAG,QAAQ,KAAK,MAAM,GAAG,QAAQ,KAAK;AAAA,QAChD,KAAK,QAAQ,KAAK;AAAA,QAClB,KAAK,QAAQ,KAAK;AAAA,QAClB;AAAA,QACA,aAAa,QAAQ;AAAA,QACrB;AAAA,MACF;AAEA,sBAAgB,WAAW,KAAK,QAAQ,KAAK,IAAI,MAAM,KAAK,KAAK,QAAQ,KAAK,GAAG,KAAK,EAAE;AACxF,UAAI;AAAU,4BAAoB,WAAW,YAAY,MAAM;AAC/D,UAAI,CAAC;AAAU,iBAAS,eAAe,SAAS,GAAG,gBAAgB,UAAU;AAC7E,UAAI;AAAY,aAAK,QAAQ,QAAQ,WAAW,CAAC;AAAA,IACnD;AAAA,EACF;AAvfO,MAAM,eAAN;AAAM;AA2FX,gBA3FW,cA2FJ,iBAAgB,CAAC,UAAkB;AACxC,QAAI,MAAM,IAAI;AAEd,UAAM,qBAAqB,wBAACC,WAAe;AACzC,UAAI,CAAC,MAAM,QAAQA,MAAK;AAAG,eAAO;AAClC,UAAI,CAAEA,OAAgB,MAAM,CAAC,MAAM,OAAO,MAAM,QAAQ;AAAG,eAAO;AAClE,aAAOA;AAAA,IACT,GAJ2B;AAM3B,QAAI;AACF,UAAI,OAAO,KAAK,MAAM,GAAG;AACzB,aAAO,mBAAmB,IAAI;AAAA,IAChC,SAAS,GAAP;AACA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,gBA5GW,cA4GJ,kBAAiB,CAAC,UAAoB;AAC3C,QAAI,CAAC,SAAS,MAAM,WAAW;AAAG,aAAO;AACzC,QAAI,SAAS,KAAK,UAAU,KAAK;AACjC,WAAO,OAAO,UAAU,GAAG,OAAO,SAAS,CAAC;AAAA,EAC9C;;;ACpHF,MAAM,mBAAmB;AAAA,IACvB,MAAM,CAAC,QAAQ,WAAW,WAAW,QAAQ,KAAK;AAAA,IAClD,QAAQ,CAAC,WAAW,eAAe,cAAc,QAAQ;AAAA,IACzD,MAAM,CAAC,QAAQ,SAAS,OAAO;AAAA,IAE/B,KAAK,CAAC,IAAI,IAAI,MAAM,kBAAQ,MAAM,WAAM;AAAA,IACxC,OAAO,CAAC,YAAO,QAAQ,MAAM,aAAQ,UAAK;AAAA,IAC1C,QAAQ,CAAC,MAAM,SAAS,eAAU;AAAA,IAClC,KAAK,CAAC,kBAAa,QAAQ,WAAW,YAAO;AAAA,IAC7C,QAAQ,CAAC,uBAAuB,+BAA+B,gCAAgC,yBAAyB;AAAA,EAC1H;AAEA,MAAM,UAAU,wBAAC,QAAgB;AAC/B,QAAI,cAAc;AAElB,QAAI,QAAQ,gBAAgB,cAAc,MAAM;AAC9C,oBAAc,KAAK;AAAA,QAEjB,SAAS,qBAAqB,QAAQ,gBAAgB,cAAc,IAAI;AAAA,MAC1E;AAAA,IACF;AAEA,WAAO,cAAe,cAAc,OAAO,cAAc,OAAO,iBAAiB,OAAQ,iBAAiB;AAAA,EAC5G,GAXgB;AAaT,WAAS,6BAA6B;AAC3C,WAA+B;AAAA,MAC7B,eAAe;AAAA,QACb;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,UAAU;AAAA,UACtB,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,UAAU;AAAA,UACtB,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,aAAa,sBAAsB,cAAc,UAAU;AAAA,UACvE,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,YAAY,YAAY,YAAY,cAAc,aAAa,cAAc,YAAY,aAAa,WAAW;AAAA,UAC7H,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,YAAY,YAAY,aAAa,sBAAsB,YAAY,WAAW;AAAA,UAC9F,WAAW,QAAQ,MAAM;AAAA,QAC3B;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,YAAY,cAAc,eAAe,YAAY,aAAa,YAAY,UAAU;AAAA,UACpG,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,WAAW,QAAQ,MAAM;AAAA,QAC3B;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW,CAAC,YAAY,YAAY,cAAc,aAAa,cAAc,cAAc,YAAY,YAAY,WAAW;AAAA,UAC9H,WAAW,QAAQ,QAAQ;AAAA,QAC7B;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,WAAW,QAAQ,QAAQ;AAAA,QAC7B;AAAA,MACF;AAAA,MACA,gBAAgB;AAAA,QACd,KAAK,QAAQ,KAAK;AAAA,QAClB,OAAO,QAAQ,OAAO;AAAA,QACtB,QAAQ,QAAQ,QAAQ;AAAA,QACxB,KAAK,QAAQ,KAAK;AAAA,QAClB,QAAQ,QAAQ,QAAQ;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AAtJgB;;;ACjBT,MAAM,kBAAN,cAA8B,WAAW;AAAA,IAG9C,IAAI,WAAmC;AACrC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,IAAI,iBAAmC;AACrC,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,kBAAkB;AACpB,aAAO,2BAA2B;AAAA,IACpC;AAAA,IAEA,OAAa;AACX,qDAA2D,CAAC,MAAM,QAAQ,KAAK,aAAa;AAC1F,cAAM,OAAO,oBAAoB,QAAQ;AACzC,YAAI,CAAC;AAAM;AACX,YAAI,QAAQ,KAAK,kBAAkB,MAAM,cAAc,MAAM,aAAa;AAE1E,uBAAe,MAAM,KAAK;AAC1B,iBAAS,IAAI;AAAA,MACf,CAAC;AAGD;AAAA,QACE;AAAA;AAAA,QAEA,CAAC,MAAM,SAAS;AACd,cAAI,OAAO,KAAK;AAEhB,cAAI,CAAC,KAAK,gBAAgB,CAAC,gBAAgB,KAAK,aAAa;AAAS,mBAAO,KAAK,IAAI;AACtF,cAAI,CAAC,OAAO,sBAAsB;AAAqB,mBAAO,KAAK,IAAI;AAEvE,sBAAY,IAAI;AAChB,eAAK,IAAI;AAAA,QACX;AAAA;AAAA,MAEF;AAGA;AAAA,QACE;AAAA;AAAA,QAEA,CAAC,MAAM,SAAS;AACd,uBAAa,KAAK,EAAe;AACjC,eAAK,IAAI;AAAA,QACX;AAAA;AAAA,MAEF;AAAA,IACF;AAAA,IAEA,MAAY;AAAA,IAAC;AAAA,IAEb,kBAAkB,SAA6B,SAA8D;AAC3G,aAAO,KAAK,SAAS,cAAc,KAAK,CAAC,QAAQ,IAAI,YAAY,WAAW,IAAI,UAAU,SAAS,OAAO,CAAC;AAAA,IAC7G;AAAA,EACF;AA1Da;AACX,gBADW,iBACJ,YAAoB;;;;;;ACPtB,MAAM,WAAoB;AAAA;AAAA;AAAA,gEAG+B;AAAA,gEACA;AAAA,gEACA;AAAA,gEACA;AAAA,gEACA;AAAA;AAAA;AAAA;AAKzD,MAAM,kBAA2B;AAAA;AAAA,4GAEoE;AAAA;AAAA,gEAE5C;AAAA,gEACA;AAAA;AAAA;AAIzD,MAAM,kBAA2B;AAAA,yIACiG;AAAA;AAGlI,MAAM,qBAA8B;AAAA;AAAA;AAIpC,MAAM,sBAA+B;AAAA;AAAA;AAIrC,MAAM,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB/B,WAAS,eAAe,IAAY,SAAiB,kBAA2B;AACrF,UAAM,MAAM,SAAS,cAAc,KAAK;AACxC,QAAI,KAAK;AACT,QAAI,aAAa,SAAS,+BAA+B;AACzD,QAAI,aAAa,aAAa,oBAAoB,CAAC;AACnD,QAAI,aAAa,eAAe,QAAQ,eAAe,EAAE;AAEzD,QAAI,YACF,QAAQ,WAAW,OAAQ,EAAE,IACpB,mEAAmE;AAE9E,uBAAmB,GAAG;AACtB,QAAI,CAAC;AAAkB;AACvB,eAAW,MAAM,KAAK,OAAO,GAAG,mBAAmB,GAAI;AAAA,EACzD;AAdgB;;;AClDT,WAAS,eAAe;AAC7B,mBAAe;AAAA,MACb,KAAK;AAAA,MACL,aAAa;AAAA,MACb,QAAQ,CAAC,MAAc,SAAiB,WAAqB;AAC3D,gBAAQ;AAAA,eACD;AACH,kBAAM,OAAO,cAAc,EAAE;AAC7B,iBAAK,oBAAoB,CAAC,KAAK;AAC/B,gBAAI,KAAK,mBAAmB;AAC1B,6BAAe,kBAAkB,oBAAoB,GAAG,IAAI;AAAA,YAC9D;AACA,gBAAI,CAAC,KAAK,mBAAmB;AAC3B,6BAAe,kBAAkB,qBAAqB,GAAG,IAAI;AAAA,YAC/D;AACA;AAAA,eAEG;AACH,2BAAe,YAAY,aAAa;AACxC;AAAA,eAEG;AACH,2BAAe,WAAW,iBAAiB,GAAG,IAAI;AAClD;AAAA,eAEG;AACH,sBAAU,UAAU,UAAU,SAAS,iBAAiB,KAAK,UAAU,OAAO,UAAU,CAAC,CAAC;AAC1F;AAAA,eAEG;AACH,oBAAQ;AACR;AAAA;AAGA,2BAAe,YAAY,UAAU,GAAG,QAAQ;AAChD;AAAA;AAAA,MAEN;AAAA,IACF,CAAC;AAAA,EACH;AAvCgB;;;ACET,MAAM,iBAAN,cAA4B,WAAW;AAAA,IAG5C,OAAa;AACX;AAAA,QACE;AAAA;AAAA,QAEA,CAAC,MAAM,SAAS;AACd,eAAK,IAAI;AACT,yBAAc,sBAAsB;AAAA,QACtC;AAAA;AAAA,MAEF;AAAA,IACF;AAAA,IAEA,MAAY;AAAA,IAAC;AAAA,IAEb,OAAO,aAAa,SAA6B,WAAmB;AAClE,UAAI,YAAY,QAAW;AACzB,cAAM,WAAW,QAAQ,MAAM,GAAG,GAChC,aAAa,UAAU,MAAM,GAAG;AAClC,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI,SAAS,OAAO,WAAW,IAAI;AACjC;AAAA,UACF;AACA,iBAAO,WAAW,KAAK,SAAS;AAAA,QAClC;AAAA,MACF;AACA,UAAI,YAAY,UAAa,YAAY,MAAM,CAAC,SAAS;AACvD,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA,IAEA,OAAO,wBAAwB;AAC7B,UAAI,cAAc,EAAE,aAAa,2BAA2B,eAAc,gBAAgB;AACxF,uBAAe,wBAAwB,eAAe;AAAA,MACxD;AAAA,IACF;AAAA,IAEA,OAAO,cAAc;AACnB,UAAI,cAAc,GAAG;AACnB,sBAAc,EAAE,UAAU;AAAA,MAC5B;AAAA,IACF;AAAA,IAEA,OAAO,cAAc;AACnB,UAAI,cAAc,GAAG,SAAS;AAC5B,eAAO,cAAc,EAAE;AAAA,MACzB;AACA;AAAA,IACF;AAAA,IAEA,OAAO,oBAAoB;AACzB,UAAI,gBAAgB,eAAc,YAAY;AAC9C,UAAI,eAAc,aAAa,eAAe,UAAU,GAAG;AACzD,uBAAc,iBAAiB;AAAA,MACjC;AACA,qBAAc,YAAY;AAAA,IAC5B;AAAA,EACF;AA5DO,MAAM,gBAAN;AAAM;AACX,gBADW,eACJ,kBAA0B;;;ACQnC,MAAM,sBAA0E;AAAA,IAC9E,EAAE,OAAO,WAAW,MAAM,CAAC,MAAM,GAAG,EAAE;AAAA,IACtC,EAAE,OAAO,QAAQ,MAAM,CAAC,MAAM,GAAG,EAAE;AAAA,IAEnC,EAAE,OAAO,OAAO,MAAM,CAAC,QAAQ,GAAG,EAAE;AAAA,IACpC,EAAE,OAAO,SAAS,MAAM,CAAC,YAAY,GAAG,EAAE;AAAA,IAC1C,EAAE,OAAO,QAAQ,MAAM,CAAC,MAAM,GAAG,EAAE;AAAA,IACnC,EAAE,OAAO,QAAQ,MAAM,CAAC,MAAM,GAAG,EAAE;AAAA,IACnC,EAAE,OAAO,QAAQ,MAAM,CAAC,SAAS,GAAG,EAAE;AAAA,IACtC,EAAE,OAAO,UAAU,MAAM,CAAC,YAAY,GAAG,EAAE;AAAA,IAC3C,EAAE,OAAO,QAAQ,MAAM,CAAC,WAAW,GAAG,EAAE;AAAA,IACxC,EAAE,OAAO,SAAS,MAAM,CAAC,eAAe,GAAG,EAAE;AAAA,IAC7C,EAAE,OAAO,SAAS,MAAM,CAAC,eAAe,GAAG,EAAE;AAAA,IAC7C,EAAE,OAAO,SAAS,MAAM,CAAC,SAAS,GAAG,EAAE;AAAA,IAEvC,EAAE,OAAO,QAAQ,MAAM,CAAC,QAAQ,GAAG,EAAE;AAAA,IACrC,EAAE,OAAO,WAAW,MAAM,CAAC,YAAY,GAAG,EAAE;AAAA,IAC5C,EAAE,OAAO,QAAQ,MAAM,CAAC,MAAM,GAAG,EAAE;AAAA,IACnC,EAAE,OAAO,QAAQ,MAAM,CAAC,MAAM,GAAG,EAAE;AAAA,IACnC,EAAE,OAAO,WAAW,MAAM,CAAC,SAAS,GAAG,EAAE;AAAA,IACzC,EAAE,OAAO,SAAS,MAAM,CAAC,YAAY,GAAG,EAAE;AAAA,IAC1C,EAAE,OAAO,QAAQ,MAAM,CAAC,WAAW,GAAG,EAAE;AAAA,IACxC,EAAE,OAAO,SAAS,MAAM,CAAC,eAAe,GAAG,EAAE;AAAA,IAC7C,EAAE,OAAO,SAAS,MAAM,CAAC,eAAe,GAAG,EAAE;AAAA,IAC7C,EAAE,OAAO,QAAQ,MAAM,CAAC,SAAS,GAAG,EAAE;AAAA,EACxC;AAEO,MAAM,kBAAN,cAA6B,WAAW;AAAA,IAG7C,OAAa;AACX,qCAA+B;AAAA,QAC7B,aAAa;AAAA,QACb,UAAU;AAAA,QACV,UAAU,CAAC,MAAM,QAAQ,KAAK,aAAa;AACzC,cAAI,KAAK,QAAQ,QAAQ;AACvB,4BAAe,eAAe,QAAQ,GAAG;AACzC,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,CAAC;AAED;AAAA,QACE;AAAA;AAAA,QAEA,CAAC,MAAM,SAAS;AACd,gBAAM,IAAe,KAAK;AAE1B,cAAI,CAAC,gBAAe,YAAY,EAAE;AAAe,mBAAO,KAAK,IAAI;AAEjE,gBAAM,QAAQ,aAAa,GAAG,OAAO;AAErC,cAAI,CAAC;AAAO,mBAAO,KAAK,IAAI;AAE5B,cAAI,CAAC,MAAM;AAAU,kBAAM,WAAW,CAAC;AAEvC,gBAAM,iBAAiB,OAAO,UAAU,cAAc;AAEtD,gBAAM,SAAS,aAAa,gBAAe,oBAAoB,EAAE,iBAAiB;AAElF,gBAAM,cAAc,KAAK,IAAI;AAE7B,gBAAM,SAAS,aAAa;AAE5B,iBAAO;AAAA,QACT;AAAA;AAAA,MAEF;AAAA,IACF;AAAA,IAOA,OAAO,cAAc,GAAc,KAAa;AAC9C,YAAM,SAAS,gBAAe,YAAY,KAAK,CAAC;AAEhD,YAAM,YAAY,OAAO,IAAI,CAAC,UAAU;AACtC,cAAM,QAAQ,oBAAoB,KAAK,CAAC,EAAE,MAAM,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,GAAG,EAAE;AAChG,eAAO,MAAM;AAAA,MACf,CAAC;AAED,sBAAe,uBAAuB,GAAG,SAAS;AAAA,IACpD;AAAA,IAYA,OAAO,2BAA2B,GAAc;AAC9C,UAAI,CAAC,gBAAe,YAAY,EAAE;AAAe;AAEjD,UAAI,OAAO,gBAAe,UAAU,EAAE,cAAc,gBAAe;AAEnE,sBAAe,wBAAwB,GAAG,OAAO,EAAE;AAEnD,UAAI,gBAAe,iBAAiB,gBAAe,YAAY,EAAE,cAAc,QAAQ;AACrF,mBAAW,MAAM,gBAAe,2BAA2B,CAAC,GAAG,KAAK,EAAE;AAAA,MACxE,OAAO;AACL,eAAO,gBAAe,UAAU,EAAE;AAAA,MACpC;AAAA,IACF;AAAA,IAEA,OAAO,uBAAuB,GAAc,MAAW;AACrD,UAAI,gBAAe,YAAY,EAAE;AAAe;AAEhD,sBAAe,UAAU,EAAE,gBAAgB;AAC3C,sBAAe,iBAAiB;AAEhC,YAAM,QAAQ,aAAa,GAAG,OAAO,GAAG;AAExC,UAAI,OAAO,cAAc,gBAAe,UAAU,EAAE,kBAAkB,MAAM;AAE1E,wBAAe,YAAY,EAAE,cAAc,KAAK,CAAC,OAAO,YAAY,CAAC,CAAC;AAAA,MACxE;AAEA,sBAAe,2BAA2B,CAAC;AAAA,IAC7C;AAAA,IAKA,OAAO,YAAY,KAAa,MAAc;AAC5C,YAAM,YAAY,KAAK,KAAK,IAAI,SAAS,IAAI;AAC7C,YAAM,SAAS,IAAI,MAAM,SAAS;AAElC,eAAS,IAAI,GAAG,IAAI,GAAG,IAAI,WAAW,EAAE,GAAG,KAAK,MAAM;AACpD,eAAO,KAAK,IAAI,UAAU,GAAG,IAAI,IAAI;AAAA,MACvC;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,OAAO,wBAAwB,GAAc,gBAAgC;AAC3E,YAAM,QAAQ,aAAa,GAAG,OAAO;AAErC,UAAI,kBAAkB,QAAQ,CAAC,MAAM,MAAM,MAAM,gBAAgB,SAAS,cAAc;AAAG;AAE3F,sBAAe,kBAAkB,EAAE,gBAAgB;AAEnD,uBAAiB,GAAG,KAAK;AAAA,IAC3B;AAAA,EA6BF;AAtJO,MAAM,iBAAN;AAAM;AACX,gBADW,gBACJ,kBAA0B;AA6DjC,gBA9DW,gBA8DJ,aAAuE,CAAC;AAC/E,gBA/DW,gBA+DJ,qBAAmE,CAAC;AAC3E,gBAhEW,gBAgEJ,kBAAiB;AA2DxB,gBA3HW,gBA2HJ,kBAAiB,CAAC,GAAc,QAAgB;AACrD,QAAI,CAAC,cAAc,EAAE,aAAa;AAAmB;AACrD,QAAI,CAAC,cAAc,EAAE,aAAa;AAAiB;AACnD,QAAI,CAAC;AAAG;AAER,UAAM,gBAAgB,CAAC,CAAC,aAAa,GAAG;AAExC,QAAI,iBAAiB,gBAAe,kBAAkB,KAAK,UAAU,CAAC,gBAAgB,UAAU;AAC9F,sBAAe,cAAc,GAAG,GAAG;AAAA,IACrC,WAAW,iBAAiB,gBAAe,kBAAkB,KAAK,QAAQ;AACxE,sBAAe,cAAc,GAAG,GAAG;AAAA,IACrC;AAEA,QAAI,CAAC,eAAe;AAClB,sBAAe,iBAAiB;AAChC;AAAA,IACF;AAEA,QAAI,iBAAiB,CAAC,gBAAe,gBAAgB;AACnD,sBAAe,iBAAiB;AAChC,sBAAe,cAAc,GAAG,GAAG;AAAA,IACrC;AAEA,QAAI,gBAAgB,UAAU;AAC5B,sBAAgB,WAAW;AAAA,IAC7B;AAAA,EACF;;;A7B9KF,WAAS,WAAW;AAClB,WAAO,WAAW;AAClB,QAAI,iBAAiB,QAAQ,kBAAkB,SAAS;AACtD,mBAAa,iBAAiB,GAAG,CAAC,MAAM,SAAS;AAC/C,iBAAS,gCAAgC,IAAI;AAC7C,aAAK,IAAI;AACT,cAAM,WAAW,KAAK;AACtB,YAAI,YAAY,OAAO,SAAS,SAAS,YAAY,OAAO,SAAS,gBAAgB,UAAU;AAC7F,eAAK;AAAA,QACP;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,aAAO,yBAAyB;AAChC,WAAK;AAAA,IACP;AAAA,EACF;AAfS;AAiBF,WAAS,OAAO;AACrB,QAAI,OAAO;AAAkB;AAE7B,iBAAa,KAAK;AAElB,gBAAY,cAAW,WAAW;AAElC,eAAW,YAAY,YAAY;AAEnC,aAAS;AACT,iBAAa;AAEb,QAAI,CAAC,YAAY,GAAG;AAClB,aAAO;AACP;AAAA,IACF;AACA,iBAAa;AAEb,kBAAc,kBAAkB;AAEhC,cAAU;AAEV,WAAO,mBAAmB;AAC1B,WAAO,oBAAoB,YAAY;AAAA,EACzC;AAxBgB;AA0BhB,WAAS,cAAuB;AAC9B,mBAAe,IAAI,IAAI,CAAC;AACxB,mBAAe,IAAI,aAAa,CAAC;AACjC,mBAAe,IAAI,gBAAgB,CAAC;AACpC,mBAAe,IAAI,eAAe,CAAC;AACnC,mBAAe,IAAI,cAAc,CAAC;AAClC,mBAAe,IAAI,eAAe,CAAC;AAEnC,eAAW,KAAK,QAAQ,GAAG;AACzB,QAAE,KAAK;AAAA,IACT;AAEA,eAAW,KAAK,QAAQ,GAAG;AACzB,QAAE,KAAK;AAAA,IACT;AAEA,eAAW,KAAK,QAAQ,GAAG;AACzB,QAAE,IAAI;AAAA,IACR;AAEA,WAAO,iBAAiB;AACxB,WAAO;AAAA,EACT;AAtBS;AAwBF,WAAS,SAAe;AAC7B,kBAAc;AAEd,WAAO,OAAO;AACd,WAAO,WAAW;AAClB,WAAO;AAAA,EACT;AANgB;AAQhB,WAAS,gBAAgB;AACvB,eAAW,KAAK,QAAQ,GAAG;AACzB,QAAE,OAAO;AAAA,IACX;AAAA,EACF;AAJS;AAMT,WAAS;",
  "names": ["o", "e", "t", "n", "r", "i", "a", "c", "l", "d", "g", "s", "p", "bcMod", "modIndex", "input"]
}
