{"version":3,"file":"dexie.js","sources":["../node_modules/dexie/dist/modern/dexie.mjs"],"sourcesContent":["/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 4.0.7, Sun May 26 2024\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string' && hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj == null ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = new Set(intrinsicTypeNames.map(t => _global[t]));\nfunction cloneSimpleObjectTree(o) {\n    const rv = {};\n    for (const k in o)\n        if (hasOwn(o, k)) {\n            const v = o[k];\n            rv[k] = !v || typeof v !== 'object' || intrinsicTypes.has(v.constructor) ? v : cloneSimpleObjectTree(v);\n        }\n    return rv;\n}\nfunction objectIsEmpty(o) {\n    for (const k in o)\n        if (hasOwn(o, k))\n            return false;\n    return true;\n}\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(x) {\n    if (!x || typeof x !== 'object')\n        return x;\n    let rv = circularRefs.get(x);\n    if (rv)\n        return rv;\n    if (isArray(x)) {\n        rv = [];\n        circularRefs.set(x, rv);\n        for (var i = 0, l = x.length; i < l; ++i) {\n            rv.push(innerDeepClone(x[i]));\n        }\n    }\n    else if (intrinsicTypes.has(x.constructor)) {\n        rv = x;\n    }\n    else {\n        const proto = getProto(x);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs.set(x, rv);\n        for (var prop in x) {\n            if (hasOwn(x, prop)) {\n                rv[prop] = innerDeepClone(x[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nfunction delArrayItem(a, x) {\n    const i = a.indexOf(x);\n    if (i >= 0)\n        a.splice(i, 1);\n    return i >= 0;\n}\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, this.failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n}\n\nvar INTERNAL = {};\nconst ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nfunction schedulePhysicalTick() {\n    queueMicrotask(physicalTick);\n}\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\nrejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: nop,\n    pgp: false,\n    env: {},\n    finalize: nop\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            if (this._consoleTask)\n                rv._consoleTask = this._consoleTask;\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            return DexiePromise.resolve(onFinally()).then(() => value);\n        }, err => {\n            return DexiePromise.resolve(onFinally()).then(() => PromiseReject(err));\n        });\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        var ret, value = promise._value;\n        if (!promise._state && rejectingErrors.length)\n            rejectingErrors = [];\n        ret = debug && promise._consoleTask ? promise._consoleTask.run(() => cb(value)) : cb(value);\n        if (!promise._state && rejectingErrors.indexOf(value) === -1) {\n            markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction physicalTick() {\n    usePSD(globalPSD, () => {\n        beginMicroTickScope() && endMicroTickScope();\n    });\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.awaits = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        queueMicrotask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                queueMicrotask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction execInGlobalContext(cb) {\n    if (Promise === NativePromise && task.echoes === 0) {\n        if (zoneEchoes === 0) {\n            cb();\n        }\n        else {\n            enqueueNativeMicroTask(cb);\n        }\n    }\n    else {\n        setTimeout(cb, 0);\n    }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._state.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db.close({ disableAutoOpen: false });\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            if (mode === 'readwrite')\n                try {\n                    trans.idbtrans.commit();\n                }\n                catch { }\n            return mode === 'readonly' ? result : trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '4.0.7';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nfunction Entity() {\n    throw exceptions.Type();\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        const task = debug && typeof console !== 'undefined' && console.createTask && console.createTask(`Dexie: ${mode === 'readonly' ? 'read' : 'write'} ${this.name}`);\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            let p = trans && trans.db._novip === this.db._novip ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n            if (task) {\n                p._consoleTask = task;\n                p = p.catch(err => {\n                    console.trace(err);\n                    return rejection(err);\n                });\n            }\n            return p;\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        if (keyOrCrit == null)\n            return rejection(new exceptions.Type(`Invalid argument to Table.get()`));\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => {\n            if (ix.compound &&\n                keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0)) {\n                for (let i = 0; i < keyPaths.length; ++i) {\n                    if (keyPaths.indexOf(ix.keyPath[i]) === -1)\n                        return false;\n                }\n                return true;\n            }\n            return false;\n        }).sort((a, b) => a.keyPath.length - b.keyPath.length)[0];\n        if (compoundIndex && this.db._maxKey !== maxString) {\n            const keyPathsInValidOrder = compoundIndex.keyPath.slice(0, keyPaths.length);\n            return this\n                .where(keyPathsInValidOrder)\n                .equals(keyPathsInValidOrder.map(kp => indexOrCrit[kp]));\n        }\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit from a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            return idb.cmp(a, b) === 0;\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        const { db, name: tableName } = this;\n        this.schema.mappedClass = constructor;\n        if (constructor.prototype instanceof Entity) {\n            constructor = class extends constructor {\n                get db() { return db; }\n                table() { return tableName; }\n            };\n        }\n        const inheritedProps = new Set();\n        for (let proto = constructor.prototype; proto; proto = getProto(proto)) {\n            Object.getOwnPropertyNames(proto).forEach(propName => inheritedProps.add(propName));\n        }\n        const readHook = (obj) => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (let m in obj)\n                if (!inheritedProps.has(m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkUpdate(keysAndChanges) {\n        const coreTable = this.core;\n        const keys = keysAndChanges.map((entry) => entry.key);\n        const changeSpecs = keysAndChanges.map((entry) => entry.changes);\n        const offsetMap = [];\n        return this._trans('readwrite', (trans) => {\n            return coreTable.getMany({ trans, keys, cache: 'clone' }).then((objs) => {\n                const resultKeys = [];\n                const resultObjs = [];\n                keysAndChanges.forEach(({ key, changes }, idx) => {\n                    const obj = objs[idx];\n                    if (obj) {\n                        for (const keyPath of Object.keys(changes)) {\n                            const value = changes[keyPath];\n                            if (keyPath === this.schema.primKey.keyPath) {\n                                if (cmp(value, key) !== 0) {\n                                    throw new exceptions.Constraint(`Cannot update primary key in bulkUpdate()`);\n                                }\n                            }\n                            else {\n                                setByKeyPath(obj, keyPath, value);\n                            }\n                        }\n                        offsetMap.push(idx);\n                        resultKeys.push(key);\n                        resultObjs.push(obj);\n                    }\n                });\n                const numEntries = resultKeys.length;\n                return coreTable\n                    .mutate({\n                    trans,\n                    type: 'put',\n                    keys: resultKeys,\n                    values: resultObjs,\n                    updates: {\n                        keys,\n                        changeSpecs\n                    }\n                })\n                    .then(({ numFailures, failures }) => {\n                    if (numFailures === 0)\n                        return numEntries;\n                    for (const offset of Object.keys(failures)) {\n                        const mappedOffset = offsetMap[Number(offset)];\n                        if (mappedOffset != null) {\n                            const failure = failures[offset];\n                            delete failures[offset];\n                            failures[mappedOffset] = failure;\n                        }\n                    }\n                    throw new BulkError(`${this.name}.bulkUpdate(): ${numFailures} of ${numEntries} operations failed`, failures);\n                });\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nconst PropModSymbol = Symbol();\nclass PropModification {\n    execute(value) {\n        if (this.add !== undefined) {\n            const term = this.add;\n            if (isArray(term)) {\n                return [...(isArray(value) ? value : []), ...term].sort();\n            }\n            if (typeof term === 'number')\n                return (Number(value) || 0) + term;\n            if (typeof term === 'bigint') {\n                try {\n                    return BigInt(value) + term;\n                }\n                catch {\n                    return BigInt(0) + term;\n                }\n            }\n            throw new TypeError(`Invalid term ${term}`);\n        }\n        if (this.remove !== undefined) {\n            const subtrahend = this.remove;\n            if (isArray(subtrahend)) {\n                return isArray(value) ? value.filter(item => !subtrahend.includes(item)).sort() : [];\n            }\n            if (typeof subtrahend === 'number')\n                return Number(value) - subtrahend;\n            if (typeof subtrahend === 'bigint') {\n                try {\n                    return BigInt(value) - subtrahend;\n                }\n                catch {\n                    return BigInt(0) - subtrahend;\n                }\n            }\n            throw new TypeError(`Invalid subtrahend ${subtrahend}`);\n        }\n        const prefixToReplace = this.replacePrefix?.[0];\n        if (prefixToReplace && typeof value === 'string' && value.startsWith(prefixToReplace)) {\n            return this.replacePrefix[1] + value.substring(prefixToReplace.length);\n        }\n        return value;\n    }\n    constructor(spec) {\n        Object.assign(this, spec);\n    }\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    let anythingModified = false;\n                    for (let i = 0; i < numKeys; ++i) {\n                        let keyPath = keyPaths[i];\n                        let val = changes[keyPath];\n                        let origVal = getByKeyPath(item, keyPath);\n                        if (val instanceof PropModification) {\n                            setByKeyPath(item, keyPath, val.execute(origVal));\n                            anythingModified = true;\n                        }\n                        else if (origVal !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const criteria = isPlainKeyRange(ctx) &&\n                    ctx.limit === Infinity &&\n                    (typeof changes !== 'function' || changes === deleteCallback) && {\n                    index: ctx.index,\n                    range: ctx.range\n                };\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes,\n                                isAdditionalChunk: offset > 0\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria,\n                                isAdditionalChunk: offset > 0\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            (ctx.isPrimKey || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        this._cmp = this._ascending = cmp;\n        this._descending = (a, b) => cmp(b, a);\n        this._max = (a, b) => cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n        if (!this._IDBKeyRange)\n            throw new exceptions.MissingAPI();\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks(db, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace(db, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi(db, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    if (idbUpgradeTrans.objectStoreNames.contains('$meta') && !globalSchema.$meta) {\n        globalSchema.$meta = createTableSchema(\"$meta\", parseIndexSyntax(\"\")[0], []);\n        db._storeNames.push('$meta');\n    }\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else {\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            return getExistingVersion(db, trans, oldVersion)\n                .then(oldVersion => updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans))\n                .catch(rejectTransaction);\n        }\n    });\n}\nfunction patchCurrentVersion(db, idbUpgradeTrans) {\n    createMissingTables(db._dbSchema, idbUpgradeTrans);\n    if (idbUpgradeTrans.db.version % 10 === 0 && !idbUpgradeTrans.objectStoreNames.contains('$meta')) {\n        idbUpgradeTrans.db.createObjectStore('$meta').add(Math.ceil((idbUpgradeTrans.db.version / 10) - 1), 'version');\n    }\n    const globalSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    adjustToExistingIndexNames(db, db._dbSchema, idbUpgradeTrans);\n    const diff = getSchemaDiff(globalSchema, db._dbSchema);\n    for (const tableChange of diff.change) {\n        if (tableChange.change.length || tableChange.recreate) {\n            console.warn(`Unable to patch indexes of table ${tableChange.name} because it has changes on the type of index or primary key.`);\n            return;\n        }\n        const store = idbUpgradeTrans.objectStore(tableChange.name);\n        tableChange.add.forEach(idx => {\n            if (debug)\n                console.debug(`Dexie upgrade patch: Creating missing index ${tableChange.name}.${idx.src}`);\n            addIndex(store, idx);\n        });\n    }\n}\nfunction getExistingVersion(db, trans, oldVersion) {\n    if (trans.storeNames.includes('$meta')) {\n        return trans.table('$meta').get('version').then(metaVersion => {\n            return metaVersion != null ? metaVersion : oldVersion;\n        });\n    }\n    else {\n        return DexiePromise.resolve(oldVersion);\n    }\n}\nfunction updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    if (versToRun.length === 0) {\n        return DexiePromise.resolve();\n    }\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            const newSchema = version._cfg.dbschema;\n            deleteRemovedTables(newSchema, idbtrans);\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n        queue.push(idbtrans => {\n            if (db.idbdb.objectStoreNames.contains('$meta')) {\n                if (Math.ceil(db.idbdb.version / 10) === version._cfg.version) {\n                    db.idbdb.deleteObjectStore('$meta');\n                    delete db._dbSchema.$meta;\n                    db._storeNames = db._storeNames.filter(name => name !== '$meta');\n                }\n                else {\n                    idbtrans.objectStore('$meta').put(version._cfg.version, 'version');\n                }\n            }\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto)) {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            if (debug)\n                console.debug('Dexie: Creating missing table', tableName);\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", true, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema(db, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames(db, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                primKey.unique = true;\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    const diff = (target.r?.d || 0) - (target.l?.d || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        if (target[part])\n            mergeRanges(target[part], newSet[part]);\n        else\n            target[part] = cloneSimpleObjectTree(newSet[part]);\n    });\n    return target;\n}\n\nfunction obsSetsOverlap(os1, os2) {\n    return os1.all || os2.all || Object.keys(os1).some((key) => os2[key] && rangesOverlap(os2[key], os1[key]));\n}\n\nconst cache = {};\n\nlet unsignaledParts = {};\nlet isTaskEnqueued = false;\nfunction signalSubscribersLazily(part, optimistic = false) {\n    extendObservabilitySet(unsignaledParts, part);\n    if (!isTaskEnqueued) {\n        isTaskEnqueued = true;\n        setTimeout(() => {\n            isTaskEnqueued = false;\n            const parts = unsignaledParts;\n            unsignaledParts = {};\n            signalSubscribersNow(parts, false);\n        }, 0);\n    }\n}\nfunction signalSubscribersNow(updatedParts, deleteAffectedCacheEntries = false) {\n    const queriesToSignal = new Set();\n    if (updatedParts.all) {\n        for (const tblCache of Object.values(cache)) {\n            collectTableSubscribers(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n        }\n    }\n    else {\n        for (const key in updatedParts) {\n            const parts = /^idb\\:\\/\\/(.*)\\/(.*)\\//.exec(key);\n            if (parts) {\n                const [, dbName, tableName] = parts;\n                const tblCache = cache[`idb://${dbName}/${tableName}`];\n                if (tblCache)\n                    collectTableSubscribers(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n            }\n        }\n    }\n    queriesToSignal.forEach((requery) => requery());\n}\nfunction collectTableSubscribers(tblCache, updatedParts, outQueriesToSignal, deleteAffectedCacheEntries) {\n    const updatedEntryLists = [];\n    for (const [indexName, entries] of Object.entries(tblCache.queries.query)) {\n        const filteredEntries = [];\n        for (const entry of entries) {\n            if (obsSetsOverlap(updatedParts, entry.obsSet)) {\n                entry.subscribers.forEach((requery) => outQueriesToSignal.add(requery));\n            }\n            else if (deleteAffectedCacheEntries) {\n                filteredEntries.push(entry);\n            }\n        }\n        if (deleteAffectedCacheEntries)\n            updatedEntryLists.push([indexName, filteredEntries]);\n    }\n    if (deleteAffectedCacheEntries) {\n        for (const [indexName, filteredEntries] of updatedEntryLists) {\n            tblCache.queries.query[indexName] = filteredEntries;\n        }\n    }\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    let nativeVerToOpen = Math.round(db.verno * 10);\n    let schemaPatchMode = false;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    const tryOpenDB = () => new DexiePromise((resolve, reject) => {\n        throwIfCancelled();\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        const dbName = db.name;\n        const req = state.autoSchema || !nativeVerToOpen ?\n            indexedDB.open(dbName) :\n            indexedDB.open(dbName, nativeVerToOpen);\n        if (!req)\n            throw new exceptions.MissingAPI();\n        req.onerror = eventRejectHandler(reject);\n        req.onblocked = wrap(db._fireOnBlocked);\n        req.onupgradeneeded = wrap(e => {\n            upgradeTransaction = req.transaction;\n            if (state.autoSchema && !db._options.allowEmptyDB) {\n                req.onerror = preventDefault;\n                upgradeTransaction.abort();\n                req.result.close();\n                const delreq = indexedDB.deleteDatabase(dbName);\n                delreq.onsuccess = delreq.onerror = wrap(() => {\n                    reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                });\n            }\n            else {\n                upgradeTransaction.onerror = eventRejectHandler(reject);\n                const oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                wasCreated = oldVer < 1;\n                db.idbdb = req.result;\n                if (schemaPatchMode) {\n                    patchCurrentVersion(db, upgradeTransaction);\n                }\n                runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n            }\n        }, reject);\n        req.onsuccess = wrap(() => {\n            upgradeTransaction = null;\n            const idbdb = db.idbdb = req.result;\n            const objectStoreNames = slice(idbdb.objectStoreNames);\n            if (objectStoreNames.length > 0)\n                try {\n                    const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                    if (state.autoSchema)\n                        readGlobalSchema(db, idbdb, tmpTrans);\n                    else {\n                        adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                        if (!verifyInstalledSchema(db, tmpTrans) && !schemaPatchMode) {\n                            console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Dexie will add missing parts and increment native version number to workaround this.`);\n                            idbdb.close();\n                            nativeVerToOpen = idbdb.version + 1;\n                            schemaPatchMode = true;\n                            return resolve(tryOpenDB());\n                        }\n                    }\n                    generateMiddlewareStacks(db, tmpTrans);\n                }\n                catch (e) {\n                }\n            connections.push(db);\n            idbdb.onversionchange = wrap(ev => {\n                state.vcFired = true;\n                db.on(\"versionchange\").fire(ev);\n            });\n            idbdb.onclose = wrap(ev => {\n                db.on(\"close\").fire(ev);\n            });\n            if (wasCreated)\n                _onDatabaseCreated(db._deps, dbName);\n            resolve();\n        }, reject);\n    }).catch(err => {\n        switch (err?.name) {\n            case \"UnknownError\":\n                if (state.PR1398_maxLoop > 0) {\n                    state.PR1398_maxLoop--;\n                    console.warn('Dexie: Workaround for Chrome UnknownError on open()');\n                    return tryOpenDB();\n                }\n                break;\n            case \"VersionError\":\n                if (nativeVerToOpen > 0) {\n                    nativeVerToOpen = 0;\n                    return tryOpenDB();\n                }\n                break;\n        }\n        return DexiePromise.reject(err);\n    });\n    return DexiePromise.race([\n        openCanceller,\n        (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(tryOpenDB)\n    ]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        if (state.openCanceller === openCanceller) {\n            state.onReadyBeingFired = null;\n            state.isBeingOpened = false;\n        }\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    }).then(() => {\n        if (wasCreated) {\n            const everything = {};\n            db.tables.forEach(table => {\n                table.schema.indexes.forEach(idx => {\n                    if (idx.name)\n                        everything[`idb://${db.name}/${table.name}/${idx.name}`] = new RangeSet(-Infinity, [[[]]]);\n                });\n                everything[`idb://${db.name}/${table.name}/`] = everything[`idb://${db.name}/${table.name}/:dels`] = new RangeSet(-Infinity, [[[]]]);\n            });\n            globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME).fire(everything);\n            signalSubscribersNow(everything, true);\n        }\n        return db;\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        trans.explicit = true;\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                trans.idbtrans._explicit = true;\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db.close({ disableAutoOpen: false });\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    name: isVirtual\n                        ? `${keyPathAlias}(virtual-from:${lowLevelIndex.name})`\n                        : lowLevelIndex.name,\n                    lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index: index.lowLevelIndex,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isCachableContext(ctx, table) {\n    return (ctx.trans.mode === 'readonly' &&\n        !!ctx.subscr &&\n        !ctx.trans.explicit &&\n        ctx.trans.db._options.cache !== 'disabled' &&\n        !table.schema.primaryKey.outbound);\n}\n\nfunction isCachableRequest(type, req) {\n    switch (type) {\n        case 'query':\n            return req.values && !req.unique;\n        case 'get':\n            return false;\n        case 'getMany':\n            return false;\n        case 'count':\n            return false;\n        case 'openCursor':\n            return false;\n    }\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    name: \"Observability\",\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            transaction: (stores, mode, options) => {\n                if (PSD.subscr && mode !== 'readonly') {\n                    throw new exceptions.ReadOnly(`Readwrite transaction in liveQuery context. Querier source: ${PSD.querier}`);\n                }\n                return core.transaction(stores, mode, options);\n            },\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey, indexes } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const indexesWithAutoIncPK = primaryKey.autoIncrement && indexes.filter((index) => index.compound && index.keyPath.includes(primaryKey.keyPath));\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = req.mutatedParts || (req.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [getEffectiveKeys(primaryKey, req).filter(id => id), req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        if (isArray(keys)) {\n                            pkRangeSet.addKeys(keys);\n                            const oldObjs = type === 'delete' || keys.length === newObjs.length ? getFromTransactionCache(keys, oldCache) : null;\n                            if (!oldObjs) {\n                                delsRangeSet.addKeys(keys);\n                            }\n                            if (oldObjs || newObjs) {\n                                trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                            }\n                        }\n                        else if (keys) {\n                            const range = { from: keys.lower, to: keys.upper };\n                            delsRangeSet.add(range);\n                            pkRangeSet.add(range);\n                        }\n                        else {\n                            pkRangeSet.add(FULL_RANGE);\n                            delsRangeSet.add(FULL_RANGE);\n                            schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                        }\n                        return table.mutate(req).then((res) => {\n                            if (keys && (req.type === 'add' || req.type === 'put')) {\n                                pkRangeSet.addKeys(res.results);\n                                if (indexesWithAutoIncPK) {\n                                    indexesWithAutoIncPK.forEach(idx => {\n                                        const idxVals = req.values.map(v => idx.extractKey(v));\n                                        const pkPos = idx.keyPath.findIndex(prop => prop === primaryKey.keyPath);\n                                        res.results.forEach(pk => idxVals[pkPos] = pk);\n                                        getRangeSet(idx.name).addKeys(idxVals);\n                                    });\n                                }\n                            }\n                            trans.mutatedParts = extendObservabilitySet(trans.mutatedParts || {}, mutatedParts);\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => [\n                    index,\n                    new RangeSet(range.lower ?? core.MIN_KEY, range.upper ?? core.MAX_KEY),\n                ];\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach((method) => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        const isLiveQuery = !!subscr;\n                        let cachable = isCachableContext(PSD, table) && isCachableRequest(method, req);\n                        const obsSet = cachable\n                            ? req.obsSet = {}\n                            : subscr;\n                        if (isLiveQuery) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (obsSet[part] ||\n                                    (obsSet[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            if (method === 'query' && queriedIndex.isPrimaryKey && !req.values) {\n                                delsRangeSet.add(queriedRanges);\n                            }\n                            else {\n                                getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            }\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nfunction adjustOptimisticFromFailures(tblCache, req, res) {\n    if (res.numFailures === 0)\n        return req;\n    if (req.type === 'deleteRange') {\n        return null;\n    }\n    const numBulkOps = req.keys\n        ? req.keys.length\n        : 'values' in req && req.values\n            ? req.values.length\n            : 1;\n    if (res.numFailures === numBulkOps) {\n        return null;\n    }\n    const clone = { ...req };\n    if (isArray(clone.keys)) {\n        clone.keys = clone.keys.filter((_, i) => !(i in res.failures));\n    }\n    if ('values' in clone && isArray(clone.values)) {\n        clone.values = clone.values.filter((_, i) => !(i in res.failures));\n    }\n    return clone;\n}\n\nfunction isAboveLower(key, range) {\n    return range.lower === undefined\n        ? true\n        : range.lowerOpen\n            ? cmp(key, range.lower) > 0\n            : cmp(key, range.lower) >= 0;\n}\nfunction isBelowUpper(key, range) {\n    return range.upper === undefined\n        ? true\n        : range.upperOpen\n            ? cmp(key, range.upper) < 0\n            : cmp(key, range.upper) <= 0;\n}\nfunction isWithinRange(key, range) {\n    return isAboveLower(key, range) && isBelowUpper(key, range);\n}\n\nfunction applyOptimisticOps(result, req, ops, table, cacheEntry, immutable) {\n    if (!ops || ops.length === 0)\n        return result;\n    const index = req.query.index;\n    const { multiEntry } = index;\n    const queryRange = req.query.range;\n    const primaryKey = table.schema.primaryKey;\n    const extractPrimKey = primaryKey.extractKey;\n    const extractIndex = index.extractKey;\n    const extractLowLevelIndex = (index.lowLevelIndex || index).extractKey;\n    let finalResult = ops.reduce((result, op) => {\n        let modifedResult = result;\n        const includedValues = op.type === 'add' || op.type === 'put'\n            ? op.values.filter((v) => {\n                const key = extractIndex(v);\n                return multiEntry && isArray(key)\n                    ? key.some((k) => isWithinRange(k, queryRange))\n                    : isWithinRange(key, queryRange);\n            }).map(v => {\n                v = deepClone(v);\n                if (immutable)\n                    Object.freeze(v);\n                return v;\n            })\n            : [];\n        switch (op.type) {\n            case 'add':\n                modifedResult = result.concat(req.values\n                    ? includedValues\n                    : includedValues.map((v) => extractPrimKey(v)));\n                break;\n            case 'put':\n                const keySet = new RangeSet().addKeys(op.values.map((v) => extractPrimKey(v)));\n                modifedResult = result\n                    .filter((item) => {\n                    const key = req.values ? extractPrimKey(item) : item;\n                    return !rangesOverlap(new RangeSet(key), keySet);\n                })\n                    .concat(req.values\n                    ? includedValues\n                    : includedValues.map((v) => extractPrimKey(v)));\n                break;\n            case 'delete':\n                const keysToDelete = new RangeSet().addKeys(op.keys);\n                modifedResult = result.filter((item) => {\n                    const key = req.values ? extractPrimKey(item) : item;\n                    return !rangesOverlap(new RangeSet(key), keysToDelete);\n                });\n                break;\n            case 'deleteRange':\n                const range = op.range;\n                modifedResult = result.filter((item) => !isWithinRange(extractPrimKey(item), range));\n                break;\n        }\n        return modifedResult;\n    }, result);\n    if (finalResult === result)\n        return result;\n    finalResult.sort((a, b) => cmp(extractLowLevelIndex(a), extractLowLevelIndex(b)) ||\n        cmp(extractPrimKey(a), extractPrimKey(b)));\n    if (req.limit && req.limit < Infinity) {\n        if (finalResult.length > req.limit) {\n            finalResult.length = req.limit;\n        }\n        else if (result.length === req.limit && finalResult.length < req.limit) {\n            cacheEntry.dirty = true;\n        }\n    }\n    return immutable ? Object.freeze(finalResult) : finalResult;\n}\n\nfunction areRangesEqual(r1, r2) {\n    return (cmp(r1.lower, r2.lower) === 0 &&\n        cmp(r1.upper, r2.upper) === 0 &&\n        !!r1.lowerOpen === !!r2.lowerOpen &&\n        !!r1.upperOpen === !!r2.upperOpen);\n}\n\nfunction compareLowers(lower1, lower2, lowerOpen1, lowerOpen2) {\n    if (lower1 === undefined)\n        return lower2 !== undefined ? -1 : 0;\n    if (lower2 === undefined)\n        return 1;\n    const c = cmp(lower1, lower2);\n    if (c === 0) {\n        if (lowerOpen1 && lowerOpen2)\n            return 0;\n        if (lowerOpen1)\n            return 1;\n        if (lowerOpen2)\n            return -1;\n    }\n    return c;\n}\nfunction compareUppers(upper1, upper2, upperOpen1, upperOpen2) {\n    if (upper1 === undefined)\n        return upper2 !== undefined ? 1 : 0;\n    if (upper2 === undefined)\n        return -1;\n    const c = cmp(upper1, upper2);\n    if (c === 0) {\n        if (upperOpen1 && upperOpen2)\n            return 0;\n        if (upperOpen1)\n            return -1;\n        if (upperOpen2)\n            return 1;\n    }\n    return c;\n}\nfunction isSuperRange(r1, r2) {\n    return (compareLowers(r1.lower, r2.lower, r1.lowerOpen, r2.lowerOpen) <= 0 &&\n        compareUppers(r1.upper, r2.upper, r1.upperOpen, r2.upperOpen) >= 0);\n}\n\nfunction findCompatibleQuery(dbName, tableName, type, req) {\n    const tblCache = cache[`idb://${dbName}/${tableName}`];\n    if (!tblCache)\n        return [];\n    const queries = tblCache.queries[type];\n    if (!queries)\n        return [null, false, tblCache, null];\n    const indexName = req.query ? req.query.index.name : null;\n    const entries = queries[indexName || ''];\n    if (!entries)\n        return [null, false, tblCache, null];\n    switch (type) {\n        case 'query':\n            const equalEntry = entries.find((entry) => entry.req.limit === req.limit &&\n                entry.req.values === req.values &&\n                areRangesEqual(entry.req.query.range, req.query.range));\n            if (equalEntry)\n                return [\n                    equalEntry,\n                    true,\n                    tblCache,\n                    entries,\n                ];\n            const superEntry = entries.find((entry) => {\n                const limit = 'limit' in entry.req ? entry.req.limit : Infinity;\n                return (limit >= req.limit &&\n                    (req.values ? entry.req.values : true) &&\n                    isSuperRange(entry.req.query.range, req.query.range));\n            });\n            return [superEntry, false, tblCache, entries];\n        case 'count':\n            const countQuery = entries.find((entry) => areRangesEqual(entry.req.query.range, req.query.range));\n            return [countQuery, !!countQuery, tblCache, entries];\n    }\n}\n\nfunction subscribeToCacheEntry(cacheEntry, container, requery, signal) {\n    cacheEntry.subscribers.add(requery);\n    signal.addEventListener(\"abort\", () => {\n        cacheEntry.subscribers.delete(requery);\n        if (cacheEntry.subscribers.size === 0) {\n            enqueForDeletion(cacheEntry, container);\n        }\n    });\n}\nfunction enqueForDeletion(cacheEntry, container) {\n    setTimeout(() => {\n        if (cacheEntry.subscribers.size === 0) {\n            delArrayItem(container, cacheEntry);\n        }\n    }, 3000);\n}\n\nconst cacheMiddleware = {\n    stack: 'dbcore',\n    level: 0,\n    name: 'Cache',\n    create: (core) => {\n        const dbName = core.schema.name;\n        const coreMW = {\n            ...core,\n            transaction: (stores, mode, options) => {\n                const idbtrans = core.transaction(stores, mode, options);\n                if (mode === 'readwrite') {\n                    const ac = new AbortController();\n                    const { signal } = ac;\n                    const endTransaction = (wasCommitted) => () => {\n                        ac.abort();\n                        if (mode === 'readwrite') {\n                            const affectedSubscribers = new Set();\n                            for (const storeName of stores) {\n                                const tblCache = cache[`idb://${dbName}/${storeName}`];\n                                if (tblCache) {\n                                    const table = core.table(storeName);\n                                    const ops = tblCache.optimisticOps.filter((op) => op.trans === idbtrans);\n                                    if (idbtrans._explicit && wasCommitted && idbtrans.mutatedParts) {\n                                        for (const entries of Object.values(tblCache.queries.query)) {\n                                            for (const entry of entries.slice()) {\n                                                if (obsSetsOverlap(entry.obsSet, idbtrans.mutatedParts)) {\n                                                    delArrayItem(entries, entry);\n                                                    entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else if (ops.length > 0) {\n                                        tblCache.optimisticOps = tblCache.optimisticOps.filter((op) => op.trans !== idbtrans);\n                                        for (const entries of Object.values(tblCache.queries.query)) {\n                                            for (const entry of entries.slice()) {\n                                                if (entry.res != null &&\n                                                    idbtrans.mutatedParts\n) {\n                                                    if (wasCommitted && !entry.dirty) {\n                                                        const freezeResults = Object.isFrozen(entry.res);\n                                                        const modRes = applyOptimisticOps(entry.res, entry.req, ops, table, entry, freezeResults);\n                                                        if (entry.dirty) {\n                                                            delArrayItem(entries, entry);\n                                                            entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                        }\n                                                        else if (modRes !== entry.res) {\n                                                            entry.res = modRes;\n                                                            entry.promise = DexiePromise.resolve({ result: modRes });\n                                                        }\n                                                    }\n                                                    else {\n                                                        if (entry.dirty) {\n                                                            delArrayItem(entries, entry);\n                                                        }\n                                                        entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            affectedSubscribers.forEach((requery) => requery());\n                        }\n                    };\n                    idbtrans.addEventListener('abort', endTransaction(false), {\n                        signal,\n                    });\n                    idbtrans.addEventListener('error', endTransaction(false), {\n                        signal,\n                    });\n                    idbtrans.addEventListener('complete', endTransaction(true), {\n                        signal,\n                    });\n                }\n                return idbtrans;\n            },\n            table(tableName) {\n                const downTable = core.table(tableName);\n                const primKey = downTable.schema.primaryKey;\n                const tableMW = {\n                    ...downTable,\n                    mutate(req) {\n                        const trans = PSD.trans;\n                        if (primKey.outbound ||\n                            trans.db._options.cache === 'disabled' ||\n                            trans.explicit\n                        ) {\n                            return downTable.mutate(req);\n                        }\n                        const tblCache = cache[`idb://${dbName}/${tableName}`];\n                        if (!tblCache)\n                            return downTable.mutate(req);\n                        const promise = downTable.mutate(req);\n                        if ((req.type === 'add' || req.type === 'put') && (req.values.length >= 50 || getEffectiveKeys(primKey, req).some(key => key == null))) {\n                            promise.then((res) => {\n                                const reqWithResolvedKeys = {\n                                    ...req,\n                                    values: req.values.map((value, i) => {\n                                        const valueWithKey = primKey.keyPath?.includes('.')\n                                            ? deepClone(value)\n                                            : {\n                                                ...value,\n                                            };\n                                        setByKeyPath(valueWithKey, primKey.keyPath, res.results[i]);\n                                        return valueWithKey;\n                                    })\n                                };\n                                const adjustedReq = adjustOptimisticFromFailures(tblCache, reqWithResolvedKeys, res);\n                                tblCache.optimisticOps.push(adjustedReq);\n                                queueMicrotask(() => req.mutatedParts && signalSubscribersLazily(req.mutatedParts));\n                            });\n                        }\n                        else {\n                            tblCache.optimisticOps.push(req);\n                            req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                            promise.then((res) => {\n                                if (res.numFailures > 0) {\n                                    delArrayItem(tblCache.optimisticOps, req);\n                                    const adjustedReq = adjustOptimisticFromFailures(tblCache, req, res);\n                                    if (adjustedReq) {\n                                        tblCache.optimisticOps.push(adjustedReq);\n                                    }\n                                    req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                                }\n                            });\n                            promise.catch(() => {\n                                delArrayItem(tblCache.optimisticOps, req);\n                                req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                            });\n                        }\n                        return promise;\n                    },\n                    query(req) {\n                        if (!isCachableContext(PSD, downTable) || !isCachableRequest(\"query\", req))\n                            return downTable.query(req);\n                        const freezeResults = PSD.trans?.db._options.cache === 'immutable';\n                        const { requery, signal } = PSD;\n                        let [cacheEntry, exactMatch, tblCache, container] = findCompatibleQuery(dbName, tableName, 'query', req);\n                        if (cacheEntry && exactMatch) {\n                            cacheEntry.obsSet = req.obsSet;\n                        }\n                        else {\n                            const promise = downTable.query(req).then((res) => {\n                                const result = res.result;\n                                if (cacheEntry)\n                                    cacheEntry.res = result;\n                                if (freezeResults) {\n                                    for (let i = 0, l = result.length; i < l; ++i) {\n                                        Object.freeze(result[i]);\n                                    }\n                                    Object.freeze(result);\n                                }\n                                else {\n                                    res.result = deepClone(result);\n                                }\n                                return res;\n                            }).catch(error => {\n                                if (container && cacheEntry)\n                                    delArrayItem(container, cacheEntry);\n                                return Promise.reject(error);\n                            });\n                            cacheEntry = {\n                                obsSet: req.obsSet,\n                                promise,\n                                subscribers: new Set(),\n                                type: 'query',\n                                req,\n                                dirty: false,\n                            };\n                            if (container) {\n                                container.push(cacheEntry);\n                            }\n                            else {\n                                container = [cacheEntry];\n                                if (!tblCache) {\n                                    tblCache = cache[`idb://${dbName}/${tableName}`] = {\n                                        queries: {\n                                            query: {},\n                                            count: {},\n                                        },\n                                        objs: new Map(),\n                                        optimisticOps: [],\n                                        unsignaledParts: {}\n                                    };\n                                }\n                                tblCache.queries.query[req.query.index.name || ''] = container;\n                            }\n                        }\n                        subscribeToCacheEntry(cacheEntry, container, requery, signal);\n                        return cacheEntry.promise.then((res) => {\n                            return {\n                                result: applyOptimisticOps(res.result, req, tblCache?.optimisticOps, downTable, cacheEntry, freezeResults),\n                            };\n                        });\n                    },\n                };\n                return tableMW;\n            },\n        };\n        return coreMW;\n    },\n};\n\nfunction vipify(target, vipDb) {\n    return new Proxy(target, {\n        get(target, prop, receiver) {\n            if (prop === 'db')\n                return vipDb;\n            return Reflect.get(target, prop, receiver);\n        }\n    });\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            cache: 'cloned',\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3,\n            autoOpen: options.autoOpen,\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close({ disableAutoOpen: false });\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(cacheExistingValuesMiddleware);\n        this.use(cacheMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        const vipDB = new Proxy(this, {\n            get: (_, prop, receiver) => {\n                if (prop === '_vip')\n                    return true;\n                if (prop === 'table')\n                    return (tableName) => vipify(this.table(tableName), vipDB);\n                const rv = Reflect.get(_, prop, receiver);\n                if (rv instanceof Table)\n                    return vipify(rv, vipDB);\n                if (prop === 'tables')\n                    return rv.map(t => vipify(t, vipDB));\n                if (prop === '_createTransaction')\n                    return function () {\n                        const tx = rv.apply(this, arguments);\n                        return vipify(tx, vipDB);\n                    };\n                return rv;\n            }\n        });\n        this.vip = vipDB;\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._state.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return usePSD(globalPSD,\n        () => dexieOpen(this));\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this.idbdb = null;\n        }\n        if (!state.isBeingOpened) {\n            state.dbReadyPromise = new DexiePromise(resolve => {\n                state.dbReadyResolve = resolve;\n            });\n            state.openCanceller = new DexiePromise((_, reject) => {\n                state.cancelOpen = reject;\n            });\n        }\n    }\n    close({ disableAutoOpen } = { disableAutoOpen: true }) {\n        const state = this._state;\n        if (disableAutoOpen) {\n            if (state.isBeingOpened) {\n                state.cancelOpen(new exceptions.DatabaseClosed());\n            }\n            this._close();\n            state.autoOpen = false;\n            state.dbOpenError = new exceptions.DatabaseClosed();\n        }\n        else {\n            this._close();\n            state.autoOpen = this._options.autoOpen ||\n                state.isBeingOpened;\n            state.openComplete = false;\n            state.dbOpenError = null;\n        }\n    }\n    delete(closeOptions = { disableAutoOpen: true }) {\n        const hasInvalidArguments = arguments.length > 0 && typeof arguments[0] !== 'object';\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close(closeOptions);\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasInvalidArguments)\n                throw new exceptions.InvalidArgument(\"Invalid closeOptions argument to db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nfunction liveQuery(querier) {\n    let hasValue = false;\n    let currentValue;\n    const observable = new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(ctx) {\n            const wasRootExec = beginMicroTickScope();\n            try {\n                if (scopeFuncIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let rv = newScope(querier, ctx);\n                if (scopeFuncIsAsync) {\n                    rv = rv.finally(decrementExpectedAwaits);\n                }\n                return rv;\n            }\n            finally {\n                wasRootExec && endMicroTickScope();\n            }\n        }\n        let closed = false;\n        let abortController;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                if (closed)\n                    return;\n                closed = true;\n                if (abortController)\n                    abortController.abort();\n                if (startedListening)\n                    globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let startedListening = false;\n        const doQuery = () => execInGlobalContext(_doQuery);\n        function shouldNotify() {\n            return obsSetsOverlap(currentObs, accumMuts);\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const _doQuery = () => {\n            if (closed ||\n                !domDeps.indexedDB)\n             {\n                return;\n            }\n            accumMuts = {};\n            const subscr = {};\n            if (abortController)\n                abortController.abort();\n            abortController = new AbortController();\n            const ctx = {\n                subscr,\n                signal: abortController.signal,\n                requery: doQuery,\n                querier,\n                trans: null\n            };\n            const ret = execute(ctx);\n            Promise.resolve(ret).then((result) => {\n                hasValue = true;\n                currentValue = result;\n                if (closed || ctx.signal.aborted) {\n                    return;\n                }\n                accumMuts = {};\n                currentObs = subscr;\n                if (!objectIsEmpty(currentObs) && !startedListening) {\n                    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                    startedListening = true;\n                }\n                execInGlobalContext(() => !closed && observer.next && observer.next(result));\n            }, (err) => {\n                hasValue = false;\n                if (!['DatabaseClosedError', 'AbortError'].includes(err?.name)) {\n                    if (!closed)\n                        execInGlobalContext(() => {\n                            if (closed)\n                                return;\n                            observer.error && observer.error(err);\n                        });\n                }\n            });\n        };\n        setTimeout(doQuery, 0);\n        return subscription;\n    });\n    observable.hasValue = () => hasValue;\n    observable.getValue = () => currentValue;\n    return observable;\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    cache,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                detail: updatedParts\n            });\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n        signalSubscribersNow(updateParts, true);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nlet bc;\nlet createBC = () => { };\nif (typeof BroadcastChannel !== 'undefined') {\n    createBC = () => {\n        bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n        bc.onmessage = ev => ev.data && propagateLocally(ev.data);\n    };\n    createBC();\n    if (typeof bc.unref === 'function') {\n        bc.unref();\n    }\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n}\n\nif (typeof addEventListener !== 'undefined') {\n    addEventListener('pagehide', (event) => {\n        if (!Dexie$1.disableBfCache && event.persisted) {\n            if (debug)\n                console.debug('Dexie: handling persisted pagehide');\n            bc?.close();\n            for (const db of connections) {\n                db.close({ disableAutoOpen: false });\n            }\n        }\n    });\n    addEventListener('pageshow', (event) => {\n        if (!Dexie$1.disableBfCache && event.persisted) {\n            if (debug)\n                console.debug('Dexie: handling persisted pageshow');\n            createBC();\n            propagateLocally({ all: new RangeSet(-Infinity, [[]]) });\n        }\n    });\n}\n\nfunction add(value) {\n    return new PropModification({ add: value });\n}\n\nfunction remove(value) {\n    return new PropModification({ remove: value });\n}\n\nfunction replacePrefix(a, b) {\n    return new PropModification({ replacePrefix: [a, b] });\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug);\n\nexport { Dexie$1 as Dexie, Entity, PropModSymbol, PropModification, RangeSet, add, cmp, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap, remove, replacePrefix };\n//# sourceMappingURL=dexie.mjs.map\n"],"names":["_global","keys","isArray","extend","obj","extension","key","getProto","_hasOwn","hasOwn","prop","props","proto","setProp","defineProperty","functionOrGetSet","options","derive","Child","Parent","getOwnPropertyDescriptor","getPropertyDescriptor","pd","_slice","slice","args","start","end","override","origFunc","overridedFactory","assert","b","asap$1","fn","arrayToObject","array","extractor","result","item","i","nameAndValue","getByKeyPath","keyPath","rv","l","val","period","innerObj","setByKeyPath","value","currentKeyPath","remainingKeyPath","delByKeyPath","kp","shallowClone","m","concat","flatten","a","intrinsicTypeNames","num","t","intrinsicTypes","cloneSimpleObjectTree","o","k","v","objectIsEmpty","circularRefs","deepClone","any","innerDeepClone","x","toString","toStringTag","iteratorSymbol","getIteratorOf","delArrayItem","NO_CHAR_ARRAY","getArrayOf","arrayLike","it","isAsyncFunction","dexieErrorNames","idbDomErrorNames","errorList","defaultTexts","DexieError","name","msg","getMultiErrorMessage","failures","ModifyError","successCount","failedKeys","BulkError","pos","errnames","BaseException","exceptions","fullName","msgOrInner","inner","exceptionMap","mapError","domError","message","fullNameExceptions","nop","mirror","pureFunctionChain","f1","f2","callBoth","on1","on2","hookCreatingChain","res","onsuccess","onerror","res2","hookDeletingChain","hookUpdatingChain","modifications","reverseStoppableEventChain","promisableChain","thiz","debug","setDebug","filter","INTERNAL","ZONE_ECHO_LIMIT","resolvedNativePromise","nativePromiseProto","resolvedGlobalPromise","globalP","nativeP","nativePromiseThen","NativePromise","patchGlobalPromise","schedulePhysicalTick","physicalTick","asap","callback","microtickQueue","needsNewPhysicalTick","isOutsideMicroTick","unhandledErrors","rejectingErrors","rejectionMapper","globalPSD","PSD","numScheduledCalls","tickFinalizers","DexiePromise","psd","handleRejection","executePromiseTask","thenProp","microTaskId","totalEchoes","then","onFulfilled","onRejected","possibleAwait","cleanup","decrementExpectedAwaits","resolve","reject","propagateToListener","Listener","nativeAwaitCompatibleWrap","type","handler","err","PromiseReject","onFinally","ms","handle","snapShot","zone","values","onPossibleParallellAsync","remaining","newScope","usePSD","zoneProps","run_at_end_of_this_or_next_physical_tick","possiblePromises","results","p","reason","failure","promise","shouldExecuteTick","beginMicroTickScope","propagateAllListeners","endMicroTickScope","ex","addPossiblyUnhandledError","listeners","len","finalizePhysicalTick","listener","cb","callListener","ret","markErrorAsHandled","e","wasRootExec","callbacks","unhandledErrs","finalizers","finalizer","wrap","errorCatcher","outerScope","switchToZone","task","taskCounter","zoneStack","zoneEchoes","zone_id_counter","a1","a2","parent","incrementExpectedAwaits","possiblePromise","rejection","zoneEnterEcho","targetZone","zoneLeaveEcho","bEnteringZone","currentZone","GlobalPromise","targetEnv","a3","outerZone","execInGlobalContext","tempTransaction","db","mode","storeNames","trans","DEXIE_VERSION","maxString","minKey","INVALID_KEY_ARGUMENT","STRING_EXPECTED","connections","DBNAMES_DB","READONLY","READWRITE","combine","filter1","filter2","AnyRange","workaroundForUndefinedPrimKey","Entity","cmp","ta","tb","compareUint8Arrays","getUint8Array","compareArrays","al","bl","tsTag","Table","writeLocked","tableName","checkTableInTransaction","keyOrCrit","indexOrCrit","keyPaths","compoundIndex","ix","keyPathsInValidOrder","idxByName","idb","equals","idx","filterFunction","prevIndex","prevFilterFn","index","thenShortcut","offset","numRows","constructor","inheritedProps","propName","readHook","Class","content","auto","objToAdd","lastResult","keyOrObject","objects","keysOrOptions","wantResults","numObjects","objectsToAdd","numFailures","objectsToPut","keysAndChanges","coreTable","entry","changeSpecs","offsetMap","objs","resultKeys","resultObjs","changes","numEntries","mappedOffset","numKeys","Events","ctx","evs","eventName","subscriber","add","chainFunction","defaultFunction","addConfiguredEvents","context","cfg","makeClassConstructor","prototype","createTableConstructor","tableSchema","isPlainKeyRange","ignoreLimitFilter","addFilter","addReplayFilter","factory","isLimitFilter","curr","addMatchFilter","getIndexOrStore","coreSchema","openCursor","iter","coreTrans","set","union","cursor","advance","primaryKey","iterate","cursorPromise","valueMapper","mappedFn","c","wrappedFn","advancer","PropModification","term","subtrahend","prefixToReplace","spec","Collection","count","parts","lastPart","lastIndex","getval","order","sorter","aVal","bVal","offsetLeft","rowsLeft","bIncludeStopEntry","indexName","strKey","found","modifyer","anythingModified","origVal","outbound","extractKey","limit","totalFailures","applyMutateResult","expectedCount","criteria","deleteCallback","nextChunk","addValues","putValues","putKeys","deleteKeys","origValue","range","coreRange","createCollectionConstructor","whereClause","keyRangeGenerator","keyRange","error","whereCtx","table","readingHook","simpleCompare","simpleCompareReverse","fail","collectionOrWhereClause","T","collection","WhereClause","emptyCollection","rangeEqual","upperFactory","dir","s","lowerFactory","nextCasing","lowerKey","upperNeedle","lowerNeedle","length","llp","lwrKeyChar","addIgnoreCaseAlgorithm","match","needles","suffix","upper","lower","compare","upperNeedles","lowerNeedles","direction","nextKeySuffix","needlesLen","initDirection","needleBounds","needle","nb","createRange","firstPossibleNeedle","lowestPossibleCasing","casing","lowerOpen","upperOpen","includeLower","includeUpper","str","n","ranges","ascending","descending","min","max","includeLowers","includeUppers","addRange","newRange","sortDirection","rangeSorter","rangePos","keyIsBeyondCurrentEntry","keyIsBeforeCurrentEntry","keyWithinCurrentRange","checkKey","createWhereClauseConstructor","orCollection","eventRejectHandler","event","preventDefault","DEXIE_STORAGE_MUTATED_EVENT_NAME","STORAGE_MUTATED_DOM_EVENT_NAME","globalEvents","Transaction","fnAndPSD","idbtrans","idbdb","dbOpenError","ev","bWriteLock","promiseLike","root","store","spin","currentWaitPromise","memoizedTables","transactionBoundTable","createTransactionConstructor","dbschema","chromeTransactionDurability","wasActive","createIndexSpec","unique","multi","compound","isPrimKey","nameFromKeyPath","createTableSchema","primKey","indexes","safariMultiStoreFix","getMaxKey","IdbKeyRange","getKeyExtractor","getSinglePathKeyExtractor","arrayify","_id_counter","getKeyPathAlias","createDBCore","tmpTrans","extractSchema","tables","autoIncrement","indexByKeyPath","multiEntry","makeIDBKeyRange","createDbCoreTable","mutate","isAddOrPut","req","reqs","errorHandler","args1","args2","done","query","reverse","source","_cursorContinue","_cursorContinuePrimaryKey","_cursorAdvance","doThrowCursorIsNotStarted","doThrowCursorIsStopped","gotOne","iterationPromise","resolveIteration","rejectIteration","guardedCallback","hasGetAll","request","nonInfinitLimit","idbKeyRange","keyCount","callbackCount","successHandler","schema","tableMap","createMiddlewareStack","stackImpl","middlewares","down","create","createMiddlewareStacks","IDBKeyRange","indexedDB","generateMiddlewareStacks","stacks","tbl","setApiOnPlace","tableNames","propDesc","removeTablesApi","lowerVersionFirst","runUpgraders","oldVersion","idbUpgradeTrans","globalSchema","parseIndexSyntax","rejectTransaction","transless","createTable","getExistingVersion","updateTablesAndIndexes","patchCurrentVersion","createMissingTables","buildGlobalSchema","adjustToExistingIndexNames","diff","getSchemaDiff","tableChange","addIndex","metaVersion","queue","versions","versToRun","version","oldSchema","newSchema","tuple","change","idxName","contentUpgrade","upgradeSchema","contentUpgradeIsAsync","returnValue","promiseFollowed","decrementor","deleteRemovedTables","runQueue","oldDef","newDef","oldIndexes","newIndexes","oldIdx","newIdx","storeName","j","idbindex","readGlobalSchema","verifyInstalledSchema","installedSchema","ch","dexieName","indexSpec","primKeyAndIndexes","indexNum","Version","stores","outSchema","storesSpec","upgradeFunction","createVersionConstructor","versionNumber","getDbNamesTable","dbNamesDB","Dexie$1","hasDatabasesNative","getDatabaseNames","infos","info","_onDatabaseCreated","_onDatabaseDeleted","vip","idbReady","isSafari","intervalId","tryIdb","isEmptyRange","node","RangeSet","fromOrTree","to","rangeSet","mergeRanges","getRangeSetIterator","target","from","left","right","rebalance","rightWasCutOff","newSet","_addRangeSet","r","rangesOverlap","rangeSet1","rangeSet2","i1","nextResult1","i2","nextResult2","state","keyProvided","rootClone","oldRootRight","computeDepth","extendObservabilitySet","part","obsSetsOverlap","os1","os2","cache","unsignaledParts","isTaskEnqueued","signalSubscribersLazily","optimistic","signalSubscribersNow","updatedParts","deleteAffectedCacheEntries","queriesToSignal","tblCache","collectTableSubscribers","dbName","requery","outQueriesToSignal","updatedEntryLists","entries","filteredEntries","dexieOpen","openCanceller","nativeVerToOpen","schemaPatchMode","throwIfCancelled","resolveDbReady","upgradeTransaction","wasCreated","tryOpenDB","delreq","oldVer","objectStoreNames","fireRemainders","remainders","everything","awaitIterator","iterator","callNext","doThrow","onSuccess","step","onError","getNext","next","extractTransactionArgs","_tableArgs_","scopeFunc","enterTransactionScope","parentTransaction","scopeFuncIsAsync","pad","createVirtualIndexMiddleware","indexLookup","allVirtualIndexes","addVirtualIndexes","keyTail","lowLevelIndex","keyPathAlias","indexList","keyLength","isVirtual","virtualIndex","virtualKeyPath","findBestIndex","translateRange","translateRequest","createVirtualCursor","_continue","virtualIndexMiddleware","getObjectDiff","prfx","ap","bp","apTypeName","bpTypeName","getEffectiveKeys","hooksMiddleware","downCore","downTable","dxTrans","deleting","creating","updating","addPutOrDelete","deleteRange","getExistingValues","existingValues","contexts","existingValue","generatedPrimaryKey","objectDiff","additionalChanges","requestedValue","deleteNextChunk","effectiveKeys","getFromTransactionCache","clone","cacheExistingValuesMiddleware","core","cachedResult","isCachableContext","isCachableRequest","observabilityMiddleware","FULL_RANGE","indexesWithAutoIncPK","tableClone","mutatedParts","getRangeSet","pkRangeSet","delsRangeSet","newObjs","id","oldCache","oldObjs","trackAffectedIndexes","idxVals","pkPos","pk","getRange","readSubscribers","method","subscr","isLiveQuery","obsSet","queriedIndex","queriedRanges","keysPromise","resultingKeys","pKeys","wantValues","pkey","addAffectedIndex","addKeyOrKeys","_","oldKey","newKey","adjustOptimisticFromFailures","numBulkOps","isAboveLower","isBelowUpper","isWithinRange","applyOptimisticOps","ops","cacheEntry","immutable","queryRange","extractPrimKey","extractIndex","extractLowLevelIndex","finalResult","op","modifedResult","includedValues","keySet","keysToDelete","areRangesEqual","r1","r2","compareLowers","lower1","lower2","lowerOpen1","lowerOpen2","compareUppers","upper1","upper2","upperOpen1","upperOpen2","isSuperRange","findCompatibleQuery","queries","equalEntry","countQuery","subscribeToCacheEntry","container","signal","enqueForDeletion","cacheMiddleware","ac","endTransaction","wasCommitted","affectedSubscribers","freezeResults","modRes","reqWithResolvedKeys","valueWithKey","adjustedReq","exactMatch","vipify","vipDb","receiver","deps","addons","subscribe","bSticky","unsubscribe","vipDB","tx","addon","versionInstance","stack","level","mw","disableAutoOpen","closeOptions","hasInvalidArguments","doDelete","onlyIfCompatible","idbMode","enterTransaction","symbolObservable","Observable","complete","domDeps","liveQuery","querier","hasValue","currentValue","observable","observer","execute","closed","abortController","accumMuts","currentObs","subscription","startedListening","mutationListener","doQuery","_doQuery","shouldNotify","Dexie","databaseName","generatorFn","promiseOrFunction","optionalTimeout","propagatingLocally","detail","propagateLocally","updateParts","wasMe","bc","createBC","changedParts"],"mappings":"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","x_google_ignoreList":[0]}