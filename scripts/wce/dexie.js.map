{"version":3,"file":"dexie.js","names":["DexieError","type","resolve","reject","props","task","trans","keys","i","args","Table","count","ctx","Collection","cmp","direction","addRange","ranges","WhereClause","p","Transaction","db","tables","compound","keyPath","result","req","openCursor","query","hasGetAll","oldVersion","Version","indexedDB","target","primaryKey","dxTrans","cache","key","state"],"sources":["../node_modules/dexie/dist/modern/dexie.mjs"],"sourcesContent":["/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 4.0.11, Wed Jan 15 2025\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string' && hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj == null ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = new Set(intrinsicTypeNames.map(t => _global[t]));\nfunction cloneSimpleObjectTree(o) {\n    const rv = {};\n    for (const k in o)\n        if (hasOwn(o, k)) {\n            const v = o[k];\n            rv[k] = !v || typeof v !== 'object' || intrinsicTypes.has(v.constructor) ? v : cloneSimpleObjectTree(v);\n        }\n    return rv;\n}\nfunction objectIsEmpty(o) {\n    for (const k in o)\n        if (hasOwn(o, k))\n            return false;\n    return true;\n}\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(x) {\n    if (!x || typeof x !== 'object')\n        return x;\n    let rv = circularRefs.get(x);\n    if (rv)\n        return rv;\n    if (isArray(x)) {\n        rv = [];\n        circularRefs.set(x, rv);\n        for (var i = 0, l = x.length; i < l; ++i) {\n            rv.push(innerDeepClone(x[i]));\n        }\n    }\n    else if (intrinsicTypes.has(x.constructor)) {\n        rv = x;\n    }\n    else {\n        const proto = getProto(x);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs.set(x, rv);\n        for (var prop in x) {\n            if (hasOwn(x, prop)) {\n                rv[prop] = innerDeepClone(x[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nfunction delArrayItem(a, x) {\n    const i = a.indexOf(x);\n    if (i >= 0)\n        a.splice(i, 1);\n    return i >= 0;\n}\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, this.failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n}\n\nvar INTERNAL = {};\nconst ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nfunction schedulePhysicalTick() {\n    queueMicrotask(physicalTick);\n}\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\nrejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: nop,\n    pgp: false,\n    env: {},\n    finalize: nop\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            if (this._consoleTask)\n                rv._consoleTask = this._consoleTask;\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            return DexiePromise.resolve(onFinally()).then(() => value);\n        }, err => {\n            return DexiePromise.resolve(onFinally()).then(() => PromiseReject(err));\n        });\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n    if (NativePromise.withResolvers)\n        DexiePromise.withResolvers = NativePromise.withResolvers;\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        var ret, value = promise._value;\n        if (!promise._state && rejectingErrors.length)\n            rejectingErrors = [];\n        ret = debug && promise._consoleTask ? promise._consoleTask.run(() => cb(value)) : cb(value);\n        if (!promise._state && rejectingErrors.indexOf(value) === -1) {\n            markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction physicalTick() {\n    usePSD(globalPSD, () => {\n        beginMicroTickScope() && endMicroTickScope();\n    });\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.awaits = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        queueMicrotask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                queueMicrotask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction execInGlobalContext(cb) {\n    if (Promise === NativePromise && task.echoes === 0) {\n        if (zoneEchoes === 0) {\n            cb();\n        }\n        else {\n            enqueueNativeMicroTask(cb);\n        }\n    }\n    else {\n        setTimeout(cb, 0);\n    }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._state.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db.close({ disableAutoOpen: false });\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            if (mode === 'readwrite')\n                try {\n                    trans.idbtrans.commit();\n                }\n                catch { }\n            return mode === 'readonly' ? result : trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '4.0.11';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nfunction Entity() {\n    throw exceptions.Type();\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        const task = debug && typeof console !== 'undefined' && console.createTask && console.createTask(`Dexie: ${mode === 'readonly' ? 'read' : 'write'} ${this.name}`);\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            let p = trans && trans.db._novip === this.db._novip ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n            if (task) {\n                p._consoleTask = task;\n                p = p.catch(err => {\n                    console.trace(err);\n                    return rejection(err);\n                });\n            }\n            return p;\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        if (keyOrCrit == null)\n            return rejection(new exceptions.Type(`Invalid argument to Table.get()`));\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => {\n            if (ix.compound &&\n                keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0)) {\n                for (let i = 0; i < keyPaths.length; ++i) {\n                    if (keyPaths.indexOf(ix.keyPath[i]) === -1)\n                        return false;\n                }\n                return true;\n            }\n            return false;\n        }).sort((a, b) => a.keyPath.length - b.keyPath.length)[0];\n        if (compoundIndex && this.db._maxKey !== maxString) {\n            const keyPathsInValidOrder = compoundIndex.keyPath.slice(0, keyPaths.length);\n            return this\n                .where(keyPathsInValidOrder)\n                .equals(keyPathsInValidOrder.map(kp => indexOrCrit[kp]));\n        }\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit from a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        function equals(a, b) {\n            return cmp(a, b) === 0;\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        const { db, name: tableName } = this;\n        this.schema.mappedClass = constructor;\n        if (constructor.prototype instanceof Entity) {\n            constructor = class extends constructor {\n                get db() { return db; }\n                table() { return tableName; }\n            };\n        }\n        const inheritedProps = new Set();\n        for (let proto = constructor.prototype; proto; proto = getProto(proto)) {\n            Object.getOwnPropertyNames(proto).forEach(propName => inheritedProps.add(propName));\n        }\n        const readHook = (obj) => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (let m in obj)\n                if (!inheritedProps.has(m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkUpdate(keysAndChanges) {\n        const coreTable = this.core;\n        const keys = keysAndChanges.map((entry) => entry.key);\n        const changeSpecs = keysAndChanges.map((entry) => entry.changes);\n        const offsetMap = [];\n        return this._trans('readwrite', (trans) => {\n            return coreTable.getMany({ trans, keys, cache: 'clone' }).then((objs) => {\n                const resultKeys = [];\n                const resultObjs = [];\n                keysAndChanges.forEach(({ key, changes }, idx) => {\n                    const obj = objs[idx];\n                    if (obj) {\n                        for (const keyPath of Object.keys(changes)) {\n                            const value = changes[keyPath];\n                            if (keyPath === this.schema.primKey.keyPath) {\n                                if (cmp(value, key) !== 0) {\n                                    throw new exceptions.Constraint(`Cannot update primary key in bulkUpdate()`);\n                                }\n                            }\n                            else {\n                                setByKeyPath(obj, keyPath, value);\n                            }\n                        }\n                        offsetMap.push(idx);\n                        resultKeys.push(key);\n                        resultObjs.push(obj);\n                    }\n                });\n                const numEntries = resultKeys.length;\n                return coreTable\n                    .mutate({\n                    trans,\n                    type: 'put',\n                    keys: resultKeys,\n                    values: resultObjs,\n                    updates: {\n                        keys,\n                        changeSpecs\n                    }\n                })\n                    .then(({ numFailures, failures }) => {\n                    if (numFailures === 0)\n                        return numEntries;\n                    for (const offset of Object.keys(failures)) {\n                        const mappedOffset = offsetMap[Number(offset)];\n                        if (mappedOffset != null) {\n                            const failure = failures[offset];\n                            delete failures[offset];\n                            failures[mappedOffset] = failure;\n                        }\n                    }\n                    throw new BulkError(`${this.name}.bulkUpdate(): ${numFailures} of ${numEntries} operations failed`, failures);\n                });\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nclass PropModification {\n    execute(value) {\n        const spec = this[\"@@propmod\"];\n        if (spec.add !== undefined) {\n            const term = spec.add;\n            if (isArray(term)) {\n                return [...(isArray(value) ? value : []), ...term].sort();\n            }\n            if (typeof term === 'number')\n                return (Number(value) || 0) + term;\n            if (typeof term === 'bigint') {\n                try {\n                    return BigInt(value) + term;\n                }\n                catch {\n                    return BigInt(0) + term;\n                }\n            }\n            throw new TypeError(`Invalid term ${term}`);\n        }\n        if (spec.remove !== undefined) {\n            const subtrahend = spec.remove;\n            if (isArray(subtrahend)) {\n                return isArray(value) ? value.filter(item => !subtrahend.includes(item)).sort() : [];\n            }\n            if (typeof subtrahend === 'number')\n                return Number(value) - subtrahend;\n            if (typeof subtrahend === 'bigint') {\n                try {\n                    return BigInt(value) - subtrahend;\n                }\n                catch {\n                    return BigInt(0) - subtrahend;\n                }\n            }\n            throw new TypeError(`Invalid subtrahend ${subtrahend}`);\n        }\n        const prefixToReplace = spec.replacePrefix?.[0];\n        if (prefixToReplace && typeof value === 'string' && value.startsWith(prefixToReplace)) {\n            return spec.replacePrefix[1] + value.substring(prefixToReplace.length);\n        }\n        return value;\n    }\n    constructor(spec) {\n        this[\"@@propmod\"] = spec;\n    }\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return cmp(aVal, bVal) * order;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    let anythingModified = false;\n                    for (let i = 0; i < numKeys; ++i) {\n                        let keyPath = keyPaths[i];\n                        let val = changes[keyPath];\n                        let origVal = getByKeyPath(item, keyPath);\n                        if (val instanceof PropModification) {\n                            setByKeyPath(item, keyPath, val.execute(origVal));\n                            anythingModified = true;\n                        }\n                        else if (origVal !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            let limit = 200;\n            const modifyChunkSize = this.db._options.modifyChunkSize;\n            if (modifyChunkSize) {\n                if (typeof modifyChunkSize == 'object') {\n                    limit = modifyChunkSize[coreTable.name] || modifyChunkSize['*'] || 200;\n                }\n                else {\n                    limit = modifyChunkSize;\n                }\n            }\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const criteria = isPlainKeyRange(ctx) &&\n                    ctx.limit === Infinity &&\n                    (typeof changes !== 'function' || changes === deleteCallback) && {\n                    index: ctx.index,\n                    range: ctx.range\n                };\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes,\n                                isAdditionalChunk: offset > 0\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria,\n                                isAdditionalChunk: offset > 0\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            (ctx.isPrimKey || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        this._cmp = this._ascending = cmp;\n        this._descending = (a, b) => cmp(b, a);\n        this._max = (a, b) => cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n        if (!this._IDBKeyRange)\n            throw new exceptions.MissingAPI();\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks(db, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace(db, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi(db, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    if (idbUpgradeTrans.objectStoreNames.contains('$meta') && !globalSchema.$meta) {\n        globalSchema.$meta = createTableSchema(\"$meta\", parseIndexSyntax(\"\")[0], []);\n        db._storeNames.push('$meta');\n    }\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else {\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            return getExistingVersion(db, trans, oldVersion)\n                .then(oldVersion => updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans))\n                .catch(rejectTransaction);\n        }\n    });\n}\nfunction patchCurrentVersion(db, idbUpgradeTrans) {\n    createMissingTables(db._dbSchema, idbUpgradeTrans);\n    if (idbUpgradeTrans.db.version % 10 === 0 && !idbUpgradeTrans.objectStoreNames.contains('$meta')) {\n        idbUpgradeTrans.db.createObjectStore('$meta').add(Math.ceil((idbUpgradeTrans.db.version / 10) - 1), 'version');\n    }\n    const globalSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    adjustToExistingIndexNames(db, db._dbSchema, idbUpgradeTrans);\n    const diff = getSchemaDiff(globalSchema, db._dbSchema);\n    for (const tableChange of diff.change) {\n        if (tableChange.change.length || tableChange.recreate) {\n            console.warn(`Unable to patch indexes of table ${tableChange.name} because it has changes on the type of index or primary key.`);\n            return;\n        }\n        const store = idbUpgradeTrans.objectStore(tableChange.name);\n        tableChange.add.forEach(idx => {\n            if (debug)\n                console.debug(`Dexie upgrade patch: Creating missing index ${tableChange.name}.${idx.src}`);\n            addIndex(store, idx);\n        });\n    }\n}\nfunction getExistingVersion(db, trans, oldVersion) {\n    if (trans.storeNames.includes('$meta')) {\n        return trans.table('$meta').get('version').then(metaVersion => {\n            return metaVersion != null ? metaVersion : oldVersion;\n        });\n    }\n    else {\n        return DexiePromise.resolve(oldVersion);\n    }\n}\nfunction updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    if (versToRun.length === 0) {\n        return DexiePromise.resolve();\n    }\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            const newSchema = version._cfg.dbschema;\n            deleteRemovedTables(newSchema, idbtrans);\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n        queue.push(idbtrans => {\n            if (db.idbdb.objectStoreNames.contains('$meta')) {\n                if (Math.ceil(db.idbdb.version / 10) === version._cfg.version) {\n                    db.idbdb.deleteObjectStore('$meta');\n                    delete db._dbSchema.$meta;\n                    db._storeNames = db._storeNames.filter(name => name !== '$meta');\n                }\n                else {\n                    idbtrans.objectStore('$meta').put(version._cfg.version, 'version');\n                }\n            }\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto)) {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            if (debug)\n                console.debug('Dexie: Creating missing table', tableName);\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", true, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema(db, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames(db, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                primKey.unique = true;\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    hasKey(key) {\n        const node = getRangeSetIterator(this).next(key).value;\n        return node && cmp(node.from, key) <= 0 && cmp(node.to, key) >= 0;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    const diff = (target.r?.d || 0) - (target.l?.d || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        if (target[part])\n            mergeRanges(target[part], newSet[part]);\n        else\n            target[part] = cloneSimpleObjectTree(newSet[part]);\n    });\n    return target;\n}\n\nfunction obsSetsOverlap(os1, os2) {\n    return os1.all || os2.all || Object.keys(os1).some((key) => os2[key] && rangesOverlap(os2[key], os1[key]));\n}\n\nconst cache = {};\n\nlet unsignaledParts = {};\nlet isTaskEnqueued = false;\nfunction signalSubscribersLazily(part, optimistic = false) {\n    extendObservabilitySet(unsignaledParts, part);\n    if (!isTaskEnqueued) {\n        isTaskEnqueued = true;\n        setTimeout(() => {\n            isTaskEnqueued = false;\n            const parts = unsignaledParts;\n            unsignaledParts = {};\n            signalSubscribersNow(parts, false);\n        }, 0);\n    }\n}\nfunction signalSubscribersNow(updatedParts, deleteAffectedCacheEntries = false) {\n    const queriesToSignal = new Set();\n    if (updatedParts.all) {\n        for (const tblCache of Object.values(cache)) {\n            collectTableSubscribers(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n        }\n    }\n    else {\n        for (const key in updatedParts) {\n            const parts = /^idb\\:\\/\\/(.*)\\/(.*)\\//.exec(key);\n            if (parts) {\n                const [, dbName, tableName] = parts;\n                const tblCache = cache[`idb://${dbName}/${tableName}`];\n                if (tblCache)\n                    collectTableSubscribers(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n            }\n        }\n    }\n    queriesToSignal.forEach((requery) => requery());\n}\nfunction collectTableSubscribers(tblCache, updatedParts, outQueriesToSignal, deleteAffectedCacheEntries) {\n    const updatedEntryLists = [];\n    for (const [indexName, entries] of Object.entries(tblCache.queries.query)) {\n        const filteredEntries = [];\n        for (const entry of entries) {\n            if (obsSetsOverlap(updatedParts, entry.obsSet)) {\n                entry.subscribers.forEach((requery) => outQueriesToSignal.add(requery));\n            }\n            else if (deleteAffectedCacheEntries) {\n                filteredEntries.push(entry);\n            }\n        }\n        if (deleteAffectedCacheEntries)\n            updatedEntryLists.push([indexName, filteredEntries]);\n    }\n    if (deleteAffectedCacheEntries) {\n        for (const [indexName, filteredEntries] of updatedEntryLists) {\n            tblCache.queries.query[indexName] = filteredEntries;\n        }\n    }\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    let nativeVerToOpen = Math.round(db.verno * 10);\n    let schemaPatchMode = false;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    const tryOpenDB = () => new DexiePromise((resolve, reject) => {\n        throwIfCancelled();\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        const dbName = db.name;\n        const req = state.autoSchema || !nativeVerToOpen ?\n            indexedDB.open(dbName) :\n            indexedDB.open(dbName, nativeVerToOpen);\n        if (!req)\n            throw new exceptions.MissingAPI();\n        req.onerror = eventRejectHandler(reject);\n        req.onblocked = wrap(db._fireOnBlocked);\n        req.onupgradeneeded = wrap(e => {\n            upgradeTransaction = req.transaction;\n            if (state.autoSchema && !db._options.allowEmptyDB) {\n                req.onerror = preventDefault;\n                upgradeTransaction.abort();\n                req.result.close();\n                const delreq = indexedDB.deleteDatabase(dbName);\n                delreq.onsuccess = delreq.onerror = wrap(() => {\n                    reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                });\n            }\n            else {\n                upgradeTransaction.onerror = eventRejectHandler(reject);\n                const oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                wasCreated = oldVer < 1;\n                db.idbdb = req.result;\n                if (schemaPatchMode) {\n                    patchCurrentVersion(db, upgradeTransaction);\n                }\n                runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n            }\n        }, reject);\n        req.onsuccess = wrap(() => {\n            upgradeTransaction = null;\n            const idbdb = db.idbdb = req.result;\n            const objectStoreNames = slice(idbdb.objectStoreNames);\n            if (objectStoreNames.length > 0)\n                try {\n                    const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                    if (state.autoSchema)\n                        readGlobalSchema(db, idbdb, tmpTrans);\n                    else {\n                        adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                        if (!verifyInstalledSchema(db, tmpTrans) && !schemaPatchMode) {\n                            console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Dexie will add missing parts and increment native version number to workaround this.`);\n                            idbdb.close();\n                            nativeVerToOpen = idbdb.version + 1;\n                            schemaPatchMode = true;\n                            return resolve(tryOpenDB());\n                        }\n                    }\n                    generateMiddlewareStacks(db, tmpTrans);\n                }\n                catch (e) {\n                }\n            connections.push(db);\n            idbdb.onversionchange = wrap(ev => {\n                state.vcFired = true;\n                db.on(\"versionchange\").fire(ev);\n            });\n            idbdb.onclose = wrap(ev => {\n                db.on(\"close\").fire(ev);\n            });\n            if (wasCreated)\n                _onDatabaseCreated(db._deps, dbName);\n            resolve();\n        }, reject);\n    }).catch(err => {\n        switch (err?.name) {\n            case \"UnknownError\":\n                if (state.PR1398_maxLoop > 0) {\n                    state.PR1398_maxLoop--;\n                    console.warn('Dexie: Workaround for Chrome UnknownError on open()');\n                    return tryOpenDB();\n                }\n                break;\n            case \"VersionError\":\n                if (nativeVerToOpen > 0) {\n                    nativeVerToOpen = 0;\n                    return tryOpenDB();\n                }\n                break;\n        }\n        return DexiePromise.reject(err);\n    });\n    return DexiePromise.race([\n        openCanceller,\n        (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(tryOpenDB)\n    ]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        if (state.openCanceller === openCanceller) {\n            state.onReadyBeingFired = null;\n            state.isBeingOpened = false;\n        }\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    }).then(() => {\n        if (wasCreated) {\n            const everything = {};\n            db.tables.forEach(table => {\n                table.schema.indexes.forEach(idx => {\n                    if (idx.name)\n                        everything[`idb://${db.name}/${table.name}/${idx.name}`] = new RangeSet(-Infinity, [[[]]]);\n                });\n                everything[`idb://${db.name}/${table.name}/`] = everything[`idb://${db.name}/${table.name}/:dels`] = new RangeSet(-Infinity, [[[]]]);\n            });\n            globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME).fire(everything);\n            signalSubscribersNow(everything, true);\n        }\n        return db;\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        trans.explicit = true;\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                trans.idbtrans._explicit = true;\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db.close({ disableAutoOpen: false });\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    name: isVirtual\n                        ? `${keyPathAlias}(virtual-from:${lowLevelIndex.name})`\n                        : lowLevelIndex.name,\n                    lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index: index.lowLevelIndex,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isCachableContext(ctx, table) {\n    return (ctx.trans.mode === 'readonly' &&\n        !!ctx.subscr &&\n        !ctx.trans.explicit &&\n        ctx.trans.db._options.cache !== 'disabled' &&\n        !table.schema.primaryKey.outbound);\n}\n\nfunction isCachableRequest(type, req) {\n    switch (type) {\n        case 'query':\n            return req.values && !req.unique;\n        case 'get':\n            return false;\n        case 'getMany':\n            return false;\n        case 'count':\n            return false;\n        case 'openCursor':\n            return false;\n    }\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    name: \"Observability\",\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            transaction: (stores, mode, options) => {\n                if (PSD.subscr && mode !== 'readonly') {\n                    throw new exceptions.ReadOnly(`Readwrite transaction in liveQuery context. Querier source: ${PSD.querier}`);\n                }\n                return core.transaction(stores, mode, options);\n            },\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey, indexes } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const indexesWithAutoIncPK = primaryKey.autoIncrement && indexes.filter((index) => index.compound && index.keyPath.includes(primaryKey.keyPath));\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = req.mutatedParts || (req.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [getEffectiveKeys(primaryKey, req).filter(id => id), req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        if (isArray(keys)) {\n                            pkRangeSet.addKeys(keys);\n                            const oldObjs = type === 'delete' || keys.length === newObjs.length ? getFromTransactionCache(keys, oldCache) : null;\n                            if (!oldObjs) {\n                                delsRangeSet.addKeys(keys);\n                            }\n                            if (oldObjs || newObjs) {\n                                trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                            }\n                        }\n                        else if (keys) {\n                            const range = {\n                                from: keys.lower ?? core.MIN_KEY,\n                                to: keys.upper ?? core.MAX_KEY\n                            };\n                            delsRangeSet.add(range);\n                            pkRangeSet.add(range);\n                        }\n                        else {\n                            pkRangeSet.add(FULL_RANGE);\n                            delsRangeSet.add(FULL_RANGE);\n                            schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                        }\n                        return table.mutate(req).then((res) => {\n                            if (keys && (req.type === 'add' || req.type === 'put')) {\n                                pkRangeSet.addKeys(res.results);\n                                if (indexesWithAutoIncPK) {\n                                    indexesWithAutoIncPK.forEach(idx => {\n                                        const idxVals = req.values.map(v => idx.extractKey(v));\n                                        const pkPos = idx.keyPath.findIndex(prop => prop === primaryKey.keyPath);\n                                        for (let i = 0, len = res.results.length; i < len; ++i) {\n                                            idxVals[i][pkPos] = res.results[i];\n                                        }\n                                        getRangeSet(idx.name).addKeys(idxVals);\n                                    });\n                                }\n                            }\n                            trans.mutatedParts = extendObservabilitySet(trans.mutatedParts || {}, mutatedParts);\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => [\n                    index,\n                    new RangeSet(range.lower ?? core.MIN_KEY, range.upper ?? core.MAX_KEY),\n                ];\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach((method) => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        const isLiveQuery = !!subscr;\n                        let cachable = isCachableContext(PSD, table) && isCachableRequest(method, req);\n                        const obsSet = cachable\n                            ? req.obsSet = {}\n                            : subscr;\n                        if (isLiveQuery) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (obsSet[part] ||\n                                    (obsSet[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            if (method === 'query' && queriedIndex.isPrimaryKey && !req.values) {\n                                delsRangeSet.add(queriedRanges);\n                            }\n                            else {\n                                getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            }\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nfunction adjustOptimisticFromFailures(tblCache, req, res) {\n    if (res.numFailures === 0)\n        return req;\n    if (req.type === 'deleteRange') {\n        return null;\n    }\n    const numBulkOps = req.keys\n        ? req.keys.length\n        : 'values' in req && req.values\n            ? req.values.length\n            : 1;\n    if (res.numFailures === numBulkOps) {\n        return null;\n    }\n    const clone = { ...req };\n    if (isArray(clone.keys)) {\n        clone.keys = clone.keys.filter((_, i) => !(i in res.failures));\n    }\n    if ('values' in clone && isArray(clone.values)) {\n        clone.values = clone.values.filter((_, i) => !(i in res.failures));\n    }\n    return clone;\n}\n\nfunction isAboveLower(key, range) {\n    return range.lower === undefined\n        ? true\n        : range.lowerOpen\n            ? cmp(key, range.lower) > 0\n            : cmp(key, range.lower) >= 0;\n}\nfunction isBelowUpper(key, range) {\n    return range.upper === undefined\n        ? true\n        : range.upperOpen\n            ? cmp(key, range.upper) < 0\n            : cmp(key, range.upper) <= 0;\n}\nfunction isWithinRange(key, range) {\n    return isAboveLower(key, range) && isBelowUpper(key, range);\n}\n\nfunction applyOptimisticOps(result, req, ops, table, cacheEntry, immutable) {\n    if (!ops || ops.length === 0)\n        return result;\n    const index = req.query.index;\n    const { multiEntry } = index;\n    const queryRange = req.query.range;\n    const primaryKey = table.schema.primaryKey;\n    const extractPrimKey = primaryKey.extractKey;\n    const extractIndex = index.extractKey;\n    const extractLowLevelIndex = (index.lowLevelIndex || index).extractKey;\n    let finalResult = ops.reduce((result, op) => {\n        let modifedResult = result;\n        const includedValues = [];\n        if (op.type === 'add' || op.type === 'put') {\n            const includedPKs = new RangeSet();\n            for (let i = op.values.length - 1; i >= 0; --i) {\n                const value = op.values[i];\n                const pk = extractPrimKey(value);\n                if (includedPKs.hasKey(pk))\n                    continue;\n                const key = extractIndex(value);\n                if (multiEntry && isArray(key)\n                    ? key.some((k) => isWithinRange(k, queryRange))\n                    : isWithinRange(key, queryRange)) {\n                    includedPKs.addKey(pk);\n                    includedValues.push(value);\n                }\n            }\n        }\n        switch (op.type) {\n            case 'add': {\n                const existingKeys = new RangeSet().addKeys(req.values ? result.map((v) => extractPrimKey(v)) : result);\n                modifedResult = result.concat(req.values\n                    ? includedValues.filter((v) => {\n                        const key = extractPrimKey(v);\n                        if (existingKeys.hasKey(key))\n                            return false;\n                        existingKeys.addKey(key);\n                        return true;\n                    })\n                    : includedValues\n                        .map((v) => extractPrimKey(v))\n                        .filter((k) => {\n                        if (existingKeys.hasKey(k))\n                            return false;\n                        existingKeys.addKey(k);\n                        return true;\n                    }));\n                break;\n            }\n            case 'put': {\n                const keySet = new RangeSet().addKeys(op.values.map((v) => extractPrimKey(v)));\n                modifedResult = result\n                    .filter(\n                (item) => !keySet.hasKey(req.values ? extractPrimKey(item) : item))\n                    .concat(\n                req.values\n                    ? includedValues\n                    : includedValues.map((v) => extractPrimKey(v)));\n                break;\n            }\n            case 'delete':\n                const keysToDelete = new RangeSet().addKeys(op.keys);\n                modifedResult = result.filter((item) => !keysToDelete.hasKey(req.values ? extractPrimKey(item) : item));\n                break;\n            case 'deleteRange':\n                const range = op.range;\n                modifedResult = result.filter((item) => !isWithinRange(extractPrimKey(item), range));\n                break;\n        }\n        return modifedResult;\n    }, result);\n    if (finalResult === result)\n        return result;\n    finalResult.sort((a, b) => cmp(extractLowLevelIndex(a), extractLowLevelIndex(b)) ||\n        cmp(extractPrimKey(a), extractPrimKey(b)));\n    if (req.limit && req.limit < Infinity) {\n        if (finalResult.length > req.limit) {\n            finalResult.length = req.limit;\n        }\n        else if (result.length === req.limit && finalResult.length < req.limit) {\n            cacheEntry.dirty = true;\n        }\n    }\n    return immutable ? Object.freeze(finalResult) : finalResult;\n}\n\nfunction areRangesEqual(r1, r2) {\n    return (cmp(r1.lower, r2.lower) === 0 &&\n        cmp(r1.upper, r2.upper) === 0 &&\n        !!r1.lowerOpen === !!r2.lowerOpen &&\n        !!r1.upperOpen === !!r2.upperOpen);\n}\n\nfunction compareLowers(lower1, lower2, lowerOpen1, lowerOpen2) {\n    if (lower1 === undefined)\n        return lower2 !== undefined ? -1 : 0;\n    if (lower2 === undefined)\n        return 1;\n    const c = cmp(lower1, lower2);\n    if (c === 0) {\n        if (lowerOpen1 && lowerOpen2)\n            return 0;\n        if (lowerOpen1)\n            return 1;\n        if (lowerOpen2)\n            return -1;\n    }\n    return c;\n}\nfunction compareUppers(upper1, upper2, upperOpen1, upperOpen2) {\n    if (upper1 === undefined)\n        return upper2 !== undefined ? 1 : 0;\n    if (upper2 === undefined)\n        return -1;\n    const c = cmp(upper1, upper2);\n    if (c === 0) {\n        if (upperOpen1 && upperOpen2)\n            return 0;\n        if (upperOpen1)\n            return -1;\n        if (upperOpen2)\n            return 1;\n    }\n    return c;\n}\nfunction isSuperRange(r1, r2) {\n    return (compareLowers(r1.lower, r2.lower, r1.lowerOpen, r2.lowerOpen) <= 0 &&\n        compareUppers(r1.upper, r2.upper, r1.upperOpen, r2.upperOpen) >= 0);\n}\n\nfunction findCompatibleQuery(dbName, tableName, type, req) {\n    const tblCache = cache[`idb://${dbName}/${tableName}`];\n    if (!tblCache)\n        return [];\n    const queries = tblCache.queries[type];\n    if (!queries)\n        return [null, false, tblCache, null];\n    const indexName = req.query ? req.query.index.name : null;\n    const entries = queries[indexName || ''];\n    if (!entries)\n        return [null, false, tblCache, null];\n    switch (type) {\n        case 'query':\n            const equalEntry = entries.find((entry) => entry.req.limit === req.limit &&\n                entry.req.values === req.values &&\n                areRangesEqual(entry.req.query.range, req.query.range));\n            if (equalEntry)\n                return [\n                    equalEntry,\n                    true,\n                    tblCache,\n                    entries,\n                ];\n            const superEntry = entries.find((entry) => {\n                const limit = 'limit' in entry.req ? entry.req.limit : Infinity;\n                return (limit >= req.limit &&\n                    (req.values ? entry.req.values : true) &&\n                    isSuperRange(entry.req.query.range, req.query.range));\n            });\n            return [superEntry, false, tblCache, entries];\n        case 'count':\n            const countQuery = entries.find((entry) => areRangesEqual(entry.req.query.range, req.query.range));\n            return [countQuery, !!countQuery, tblCache, entries];\n    }\n}\n\nfunction subscribeToCacheEntry(cacheEntry, container, requery, signal) {\n    cacheEntry.subscribers.add(requery);\n    signal.addEventListener(\"abort\", () => {\n        cacheEntry.subscribers.delete(requery);\n        if (cacheEntry.subscribers.size === 0) {\n            enqueForDeletion(cacheEntry, container);\n        }\n    });\n}\nfunction enqueForDeletion(cacheEntry, container) {\n    setTimeout(() => {\n        if (cacheEntry.subscribers.size === 0) {\n            delArrayItem(container, cacheEntry);\n        }\n    }, 3000);\n}\n\nconst cacheMiddleware = {\n    stack: 'dbcore',\n    level: 0,\n    name: 'Cache',\n    create: (core) => {\n        const dbName = core.schema.name;\n        const coreMW = {\n            ...core,\n            transaction: (stores, mode, options) => {\n                const idbtrans = core.transaction(stores, mode, options);\n                if (mode === 'readwrite') {\n                    const ac = new AbortController();\n                    const { signal } = ac;\n                    const endTransaction = (wasCommitted) => () => {\n                        ac.abort();\n                        if (mode === 'readwrite') {\n                            const affectedSubscribers = new Set();\n                            for (const storeName of stores) {\n                                const tblCache = cache[`idb://${dbName}/${storeName}`];\n                                if (tblCache) {\n                                    const table = core.table(storeName);\n                                    const ops = tblCache.optimisticOps.filter((op) => op.trans === idbtrans);\n                                    if (idbtrans._explicit && wasCommitted && idbtrans.mutatedParts) {\n                                        for (const entries of Object.values(tblCache.queries.query)) {\n                                            for (const entry of entries.slice()) {\n                                                if (obsSetsOverlap(entry.obsSet, idbtrans.mutatedParts)) {\n                                                    delArrayItem(entries, entry);\n                                                    entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else if (ops.length > 0) {\n                                        tblCache.optimisticOps = tblCache.optimisticOps.filter((op) => op.trans !== idbtrans);\n                                        for (const entries of Object.values(tblCache.queries.query)) {\n                                            for (const entry of entries.slice()) {\n                                                if (entry.res != null &&\n                                                    idbtrans.mutatedParts\n) {\n                                                    if (wasCommitted && !entry.dirty) {\n                                                        const freezeResults = Object.isFrozen(entry.res);\n                                                        const modRes = applyOptimisticOps(entry.res, entry.req, ops, table, entry, freezeResults);\n                                                        if (entry.dirty) {\n                                                            delArrayItem(entries, entry);\n                                                            entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                        }\n                                                        else if (modRes !== entry.res) {\n                                                            entry.res = modRes;\n                                                            entry.promise = DexiePromise.resolve({ result: modRes });\n                                                        }\n                                                    }\n                                                    else {\n                                                        if (entry.dirty) {\n                                                            delArrayItem(entries, entry);\n                                                        }\n                                                        entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            affectedSubscribers.forEach((requery) => requery());\n                        }\n                    };\n                    idbtrans.addEventListener('abort', endTransaction(false), {\n                        signal,\n                    });\n                    idbtrans.addEventListener('error', endTransaction(false), {\n                        signal,\n                    });\n                    idbtrans.addEventListener('complete', endTransaction(true), {\n                        signal,\n                    });\n                }\n                return idbtrans;\n            },\n            table(tableName) {\n                const downTable = core.table(tableName);\n                const primKey = downTable.schema.primaryKey;\n                const tableMW = {\n                    ...downTable,\n                    mutate(req) {\n                        const trans = PSD.trans;\n                        if (primKey.outbound ||\n                            trans.db._options.cache === 'disabled' ||\n                            trans.explicit ||\n                            trans.idbtrans.mode !== 'readwrite'\n                        ) {\n                            return downTable.mutate(req);\n                        }\n                        const tblCache = cache[`idb://${dbName}/${tableName}`];\n                        if (!tblCache)\n                            return downTable.mutate(req);\n                        const promise = downTable.mutate(req);\n                        if ((req.type === 'add' || req.type === 'put') && (req.values.length >= 50 || getEffectiveKeys(primKey, req).some(key => key == null))) {\n                            promise.then((res) => {\n                                const reqWithResolvedKeys = {\n                                    ...req,\n                                    values: req.values.map((value, i) => {\n                                        if (res.failures[i])\n                                            return value;\n                                        const valueWithKey = primKey.keyPath?.includes('.')\n                                            ? deepClone(value)\n                                            : {\n                                                ...value,\n                                            };\n                                        setByKeyPath(valueWithKey, primKey.keyPath, res.results[i]);\n                                        return valueWithKey;\n                                    })\n                                };\n                                const adjustedReq = adjustOptimisticFromFailures(tblCache, reqWithResolvedKeys, res);\n                                tblCache.optimisticOps.push(adjustedReq);\n                                queueMicrotask(() => req.mutatedParts && signalSubscribersLazily(req.mutatedParts));\n                            });\n                        }\n                        else {\n                            tblCache.optimisticOps.push(req);\n                            req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                            promise.then((res) => {\n                                if (res.numFailures > 0) {\n                                    delArrayItem(tblCache.optimisticOps, req);\n                                    const adjustedReq = adjustOptimisticFromFailures(tblCache, req, res);\n                                    if (adjustedReq) {\n                                        tblCache.optimisticOps.push(adjustedReq);\n                                    }\n                                    req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                                }\n                            });\n                            promise.catch(() => {\n                                delArrayItem(tblCache.optimisticOps, req);\n                                req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                            });\n                        }\n                        return promise;\n                    },\n                    query(req) {\n                        if (!isCachableContext(PSD, downTable) || !isCachableRequest(\"query\", req))\n                            return downTable.query(req);\n                        const freezeResults = PSD.trans?.db._options.cache === 'immutable';\n                        const { requery, signal } = PSD;\n                        let [cacheEntry, exactMatch, tblCache, container] = findCompatibleQuery(dbName, tableName, 'query', req);\n                        if (cacheEntry && exactMatch) {\n                            cacheEntry.obsSet = req.obsSet;\n                        }\n                        else {\n                            const promise = downTable.query(req).then((res) => {\n                                const result = res.result;\n                                if (cacheEntry)\n                                    cacheEntry.res = result;\n                                if (freezeResults) {\n                                    for (let i = 0, l = result.length; i < l; ++i) {\n                                        Object.freeze(result[i]);\n                                    }\n                                    Object.freeze(result);\n                                }\n                                else {\n                                    res.result = deepClone(result);\n                                }\n                                return res;\n                            }).catch(error => {\n                                if (container && cacheEntry)\n                                    delArrayItem(container, cacheEntry);\n                                return Promise.reject(error);\n                            });\n                            cacheEntry = {\n                                obsSet: req.obsSet,\n                                promise,\n                                subscribers: new Set(),\n                                type: 'query',\n                                req,\n                                dirty: false,\n                            };\n                            if (container) {\n                                container.push(cacheEntry);\n                            }\n                            else {\n                                container = [cacheEntry];\n                                if (!tblCache) {\n                                    tblCache = cache[`idb://${dbName}/${tableName}`] = {\n                                        queries: {\n                                            query: {},\n                                            count: {},\n                                        },\n                                        objs: new Map(),\n                                        optimisticOps: [],\n                                        unsignaledParts: {}\n                                    };\n                                }\n                                tblCache.queries.query[req.query.index.name || ''] = container;\n                            }\n                        }\n                        subscribeToCacheEntry(cacheEntry, container, requery, signal);\n                        return cacheEntry.promise.then((res) => {\n                            return {\n                                result: applyOptimisticOps(res.result, req, tblCache?.optimisticOps, downTable, cacheEntry, freezeResults),\n                            };\n                        });\n                    },\n                };\n                return tableMW;\n            },\n        };\n        return coreMW;\n    },\n};\n\nfunction vipify(target, vipDb) {\n    return new Proxy(target, {\n        get(target, prop, receiver) {\n            if (prop === 'db')\n                return vipDb;\n            return Reflect.get(target, prop, receiver);\n        }\n    });\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            cache: 'cloned',\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3,\n            autoOpen: options.autoOpen,\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close({ disableAutoOpen: false });\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(cacheExistingValuesMiddleware);\n        this.use(cacheMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        const vipDB = new Proxy(this, {\n            get: (_, prop, receiver) => {\n                if (prop === '_vip')\n                    return true;\n                if (prop === 'table')\n                    return (tableName) => vipify(this.table(tableName), vipDB);\n                const rv = Reflect.get(_, prop, receiver);\n                if (rv instanceof Table)\n                    return vipify(rv, vipDB);\n                if (prop === 'tables')\n                    return rv.map(t => vipify(t, vipDB));\n                if (prop === '_createTransaction')\n                    return function () {\n                        const tx = rv.apply(this, arguments);\n                        return vipify(tx, vipDB);\n                    };\n                return rv;\n            }\n        });\n        this.vip = vipDB;\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._state.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return usePSD(globalPSD,\n        () => dexieOpen(this));\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this.idbdb = null;\n        }\n        if (!state.isBeingOpened) {\n            state.dbReadyPromise = new DexiePromise(resolve => {\n                state.dbReadyResolve = resolve;\n            });\n            state.openCanceller = new DexiePromise((_, reject) => {\n                state.cancelOpen = reject;\n            });\n        }\n    }\n    close({ disableAutoOpen } = { disableAutoOpen: true }) {\n        const state = this._state;\n        if (disableAutoOpen) {\n            if (state.isBeingOpened) {\n                state.cancelOpen(new exceptions.DatabaseClosed());\n            }\n            this._close();\n            state.autoOpen = false;\n            state.dbOpenError = new exceptions.DatabaseClosed();\n        }\n        else {\n            this._close();\n            state.autoOpen = this._options.autoOpen ||\n                state.isBeingOpened;\n            state.openComplete = false;\n            state.dbOpenError = null;\n        }\n    }\n    delete(closeOptions = { disableAutoOpen: true }) {\n        const hasInvalidArguments = arguments.length > 0 && typeof arguments[0] !== 'object';\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close(closeOptions);\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasInvalidArguments)\n                throw new exceptions.InvalidArgument(\"Invalid closeOptions argument to db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nfunction liveQuery(querier) {\n    let hasValue = false;\n    let currentValue;\n    const observable = new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(ctx) {\n            const wasRootExec = beginMicroTickScope();\n            try {\n                if (scopeFuncIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let rv = newScope(querier, ctx);\n                if (scopeFuncIsAsync) {\n                    rv = rv.finally(decrementExpectedAwaits);\n                }\n                return rv;\n            }\n            finally {\n                wasRootExec && endMicroTickScope();\n            }\n        }\n        let closed = false;\n        let abortController;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                if (closed)\n                    return;\n                closed = true;\n                if (abortController)\n                    abortController.abort();\n                if (startedListening)\n                    globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let startedListening = false;\n        const doQuery = () => execInGlobalContext(_doQuery);\n        function shouldNotify() {\n            return obsSetsOverlap(currentObs, accumMuts);\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const _doQuery = () => {\n            if (closed ||\n                !domDeps.indexedDB)\n             {\n                return;\n            }\n            accumMuts = {};\n            const subscr = {};\n            if (abortController)\n                abortController.abort();\n            abortController = new AbortController();\n            const ctx = {\n                subscr,\n                signal: abortController.signal,\n                requery: doQuery,\n                querier,\n                trans: null\n            };\n            const ret = execute(ctx);\n            Promise.resolve(ret).then((result) => {\n                hasValue = true;\n                currentValue = result;\n                if (closed || ctx.signal.aborted) {\n                    return;\n                }\n                accumMuts = {};\n                currentObs = subscr;\n                if (!objectIsEmpty(currentObs) && !startedListening) {\n                    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                    startedListening = true;\n                }\n                execInGlobalContext(() => !closed && observer.next && observer.next(result));\n            }, (err) => {\n                hasValue = false;\n                if (!['DatabaseClosedError', 'AbortError'].includes(err?.name)) {\n                    if (!closed)\n                        execInGlobalContext(() => {\n                            if (closed)\n                                return;\n                            observer.error && observer.error(err);\n                        });\n                }\n            });\n        };\n        setTimeout(doQuery, 0);\n        return subscription;\n    });\n    observable.hasValue = () => hasValue;\n    observable.getValue = () => currentValue;\n    return observable;\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    cache,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                detail: updatedParts\n            });\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n        signalSubscribersNow(updateParts, true);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nlet bc;\nlet createBC = () => { };\nif (typeof BroadcastChannel !== 'undefined') {\n    createBC = () => {\n        bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n        bc.onmessage = ev => ev.data && propagateLocally(ev.data);\n    };\n    createBC();\n    if (typeof bc.unref === 'function') {\n        bc.unref();\n    }\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n}\n\nif (typeof addEventListener !== 'undefined') {\n    addEventListener('pagehide', (event) => {\n        if (!Dexie$1.disableBfCache && event.persisted) {\n            if (debug)\n                console.debug('Dexie: handling persisted pagehide');\n            bc?.close();\n            for (const db of connections) {\n                db.close({ disableAutoOpen: false });\n            }\n        }\n    });\n    addEventListener('pageshow', (event) => {\n        if (!Dexie$1.disableBfCache && event.persisted) {\n            if (debug)\n                console.debug('Dexie: handling persisted pageshow');\n            createBC();\n            propagateLocally({ all: new RangeSet(-Infinity, [[]]) });\n        }\n    });\n}\n\nfunction add(value) {\n    return new PropModification({ add: value });\n}\n\nfunction remove(value) {\n    return new PropModification({ remove: value });\n}\n\nfunction replacePrefix(a, b) {\n    return new PropModification({ replacePrefix: [a, b] });\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug);\n\nexport { Dexie$1 as Dexie, Entity, PropModification, RangeSet, add, cmp, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap, remove, replacePrefix };\n//# sourceMappingURL=dexie.mjs.map\n"],"x_google_ignoreList":[0],"mappings":"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"}